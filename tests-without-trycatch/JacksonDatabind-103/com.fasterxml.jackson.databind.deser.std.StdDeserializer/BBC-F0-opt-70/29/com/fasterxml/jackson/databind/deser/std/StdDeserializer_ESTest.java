/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 24 03:19:35 GMT 2021
 */

package com.fasterxml.jackson.databind.deser.std;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.annotation.ObjectIdGenerator;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.json.ReaderBasedJsonParser;
import com.fasterxml.jackson.core.json.UTF8StreamJsonParser;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.JsonParserSequence;
import com.fasterxml.jackson.databind.BeanProperty;
import com.fasterxml.jackson.databind.DeserializationConfig;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.InjectableValues;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.MapperFeature;
import com.fasterxml.jackson.databind.Module;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.PropertyMetadata;
import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.cfg.BaseSettings;
import com.fasterxml.jackson.databind.cfg.ConfigOverrides;
import com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig;
import com.fasterxml.jackson.databind.deser.BeanDeserializer;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.deser.DeserializationProblemHandler;
import com.fasterxml.jackson.databind.deser.NullValueProvider;
import com.fasterxml.jackson.databind.deser.SettableBeanProperty;
import com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer;
import com.fasterxml.jackson.databind.deser.std.DateDeserializers;
import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
import com.fasterxml.jackson.databind.deser.std.NumberDeserializers;
import com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers;
import com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
import com.fasterxml.jackson.databind.deser.std.StringDeserializer;
import com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer;
import com.fasterxml.jackson.databind.introspect.AnnotatedMember;
import com.fasterxml.jackson.databind.introspect.ClassIntrospector;
import com.fasterxml.jackson.databind.introspect.SimpleMixInResolver;
import com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
import com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
import com.fasterxml.jackson.databind.node.BooleanNode;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;
import com.fasterxml.jackson.databind.node.LongNode;
import com.fasterxml.jackson.databind.node.ValueNode;
import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
import com.fasterxml.jackson.databind.type.ArrayType;
import com.fasterxml.jackson.databind.type.CollectionType;
import com.fasterxml.jackson.databind.type.MapType;
import com.fasterxml.jackson.databind.type.SimpleType;
import com.fasterxml.jackson.databind.type.TypeBindings;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.util.AccessPattern;
import com.fasterxml.jackson.databind.util.Converter;
import com.fasterxml.jackson.databind.util.RootNameLookup;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.lang.annotation.Annotation;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.RoundingMode;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StdDeserializer_ESTest extends StdDeserializer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_IntegerDeserializer0._intOverflow(2147483647L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_IntegerDeserializer0._intOverflow((-2147483648L));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._shortOverflow((-32768));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StdDelegatingDeserializer<RoundingMode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<RoundingMode>((Converter<?, RoundingMode>) null);
      boolean boolean0 = stdDelegatingDeserializer0._byteOverflow(255);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Converter<BeanDeserializer, RoundingMode> converter0 = (Converter<BeanDeserializer, RoundingMode>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<RoundingMode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<RoundingMode>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0._byteOverflow((-128));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Converter<Object, Class<JsonDeserializer<Module>>> converter0 = (Converter<Object, Class<JsonDeserializer<Module>>>) mock(Converter.class, new ViolatedAssumptionAnswer());
      JavaType javaType0 = TypeFactory.unknownType();
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      StdDelegatingDeserializer<Class<JsonDeserializer<Module>>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Class<JsonDeserializer<Module>>>(converter0, javaType0, numberDeserializers_BooleanDeserializer0);
      boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("9Q`:\"[;b_");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Converter<RoundingMode, Class<JsonDeserializer<Module>>> converter0 = (Converter<RoundingMode, Class<JsonDeserializer<Module>>>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Class<JsonDeserializer<Module>>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Class<JsonDeserializer<Module>>>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("':&cvPK;R(QV:s");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      NumberDeserializers.NumberDeserializer numberDeserializers_NumberDeserializer0 = new NumberDeserializers.NumberDeserializer();
      Converter<BeanDeserializer, Double> converter0 = (Converter<BeanDeserializer, Double>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Double> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Double>(converter0);
      Converter<Object, Double> converter1 = stdDelegatingDeserializer0._converter;
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      Class<HashMap> class0 = HashMap.class;
      MapType mapType0 = typeFactory0.constructRawMapType(class0);
      StdDelegatingDeserializer<Double> stdDelegatingDeserializer1 = stdDelegatingDeserializer0.withDelegate(converter1, mapType0, numberDeserializers_NumberDeserializer0);
      String string0 = stdDelegatingDeserializer1._coercedTypeDesc();
      assertEquals("for type `java.lang.Number`", string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_BooleanDeser0._parseIntPrimitive(defaultDeserializationContext_Impl0, "V)!R-&=cO");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
      // Undeclared exception!
//      try { 
        stringDeserializer0._parseShortPrimitive(jsonParser0, (DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      double double0 = StdDeserializer.parseDouble("0");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      double double0 = StdDeserializer.parseDouble("-Infinity");
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      PrimitiveArrayDeserializers.FloatDeser primitiveArrayDeserializers_FloatDeser0 = new PrimitiveArrayDeserializers.FloatDeser();
      Class<BuilderBasedDeserializer> class0 = BuilderBasedDeserializer.class;
      FromStringDeserializer<RoundingMode> fromStringDeserializer0 = (FromStringDeserializer<RoundingMode>) mock(FromStringDeserializer.class, CALLS_REAL_METHODS);
      StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer((-341), class0, fromStringDeserializer0);
      boolean boolean0 = primitiveArrayDeserializers_FloatDeser0.isDefaultKeyDeserializer(stdKeyDeserializer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Class<RoundingMode> class0 = RoundingMode.class;
      FromStringDeserializer.Std fromStringDeserializer_Std0 = new FromStringDeserializer.Std(class0, 1273);
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      boolean boolean0 = stringDeserializer0.isDefaultDeserializer(fromStringDeserializer_Std0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Class<RoundingMode> class0 = RoundingMode.class;
      FromStringDeserializer.Std fromStringDeserializer_Std0 = new FromStringDeserializer.Std(class0, 1250);
      Converter<Byte, Boolean> converter0 = (Converter<Byte, Boolean>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Boolean> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Boolean>(converter0);
      Converter<Object, Boolean> converter1 = (Converter<Object, Boolean>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Boolean> stdDelegatingDeserializer1 = stdDelegatingDeserializer0.withDelegate(converter1, (JavaType) null, fromStringDeserializer_Std0);
      Class<?> class1 = stdDelegatingDeserializer1.handledType();
      assertFalse(class1.isInterface());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.primitiveInstance;
      Converter<Object, BeanDeserializer> converter0 = (Converter<Object, BeanDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>(converter0, (JavaType) null, numberDeserializers_DoubleDeserializer0);
      Class<?> class0 = stdDelegatingDeserializer0.handledType();
      assertFalse(class0.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.primitiveInstance;
      Class<?> class0 = numberDeserializers_FloatDeserializer0.getValueClass();
      assertFalse(class0.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DateDeserializers.SqlDateDeserializer dateDeserializers_SqlDateDeserializer0 = new DateDeserializers.SqlDateDeserializer();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      Class<Short> class0 = Short.class;
      JsonFormat.Value jsonFormat_Value0 = dateDeserializers_SqlDateDeserializer0.findFormatOverrides(defaultDeserializationContext_Impl0, beanProperty_Bogus0, class0);
      assertEquals("", jsonFormat_Value0.getPattern());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      UntypedObjectDeserializer.Vanilla untypedObjectDeserializer_Vanilla0 = new UntypedObjectDeserializer.Vanilla(true);
      PropertyName propertyName0 = PropertyName.construct("x0^$iz9r");
      Boolean boolean0 = new Boolean(true);
      Integer integer0 = new Integer((-1787));
      PropertyMetadata propertyMetadata0 = PropertyMetadata.construct(boolean0, "Infinty", integer0, "x0^$iz9r");
      BeanProperty.Std beanProperty_Std0 = new BeanProperty.Std(propertyName0, (JavaType) null, propertyName0, (AnnotatedMember) null, propertyMetadata0);
      untypedObjectDeserializer_Vanilla0.findContentNullStyle((DeserializationContext) null, beanProperty_Std0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NullValueProvider nullValueProvider0 = numberDeserializers_ShortDeserializer0.findContentNullProvider(defaultDeserializationContext_Impl0, (BeanProperty) null, (JsonDeserializer<?>) null);
      assertNull(nullValueProvider0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
      Class<Short> class0 = Short.class;
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = new NumberDeserializers.ShortDeserializer(class0, (Short) null);
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer1 = (NumberDeserializers.LongDeserializer)numberDeserializers_ShortDeserializer0.findContentNullProvider(defaultDeserializationContext_Impl0, (BeanProperty) null, numberDeserializers_LongDeserializer0);
      assertEquals(AccessPattern.CONSTANT, numberDeserializers_LongDeserializer1.getEmptyAccessPattern());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      long long0 = stringDeserializer0._parseLongPrimitive(defaultDeserializationContext_Impl0, "0");
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.wrapperInstance;
      long long0 = numberDeserializers_DoubleDeserializer0._parseLongPrimitive((DeserializationContext) null, "5");
      assertEquals(5L, long0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      int int0 = primitiveArrayDeserializers_BooleanDeser0._parseIntPrimitive(defaultDeserializationContext_Impl0, "0");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      RootNameLookup rootNameLookup0 = new RootNameLookup();
      ConfigOverrides configOverrides0 = new ConfigOverrides();
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
      DeserializationProblemHandler deserializationProblemHandler0 = mock(DeserializationProblemHandler.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(deserializationProblemHandler0).handleWeirdStringValue(any(com.fasterxml.jackson.databind.DeserializationContext.class) , any(java.lang.Class.class) , anyString() , anyString());
      DeserializationConfig deserializationConfig1 = deserializationConfig0.withHandler(deserializationProblemHandler0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std(hashMap0);
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig1, (JsonParser) null, injectableValues_Std0);
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      float float0 = stringDeserializer0._parseFloatPrimitive(defaultDeserializationContext0, "[qKZIp>^`JUF: vya");
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      double double0 = numberDeserializers_ShortDeserializer0._parseDoublePrimitive((DeserializationContext) null, "0");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Converter<List<PropertyName>, RoundingMode> converter0 = (Converter<List<PropertyName>, RoundingMode>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<RoundingMode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<RoundingMode>(converter0);
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      Number number0 = stdDelegatingDeserializer0._nonNullNumber(bigDecimal0);
      assertSame(bigDecimal0, number0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Converter<Date, ObjectIdGenerator<Annotation>> converter0 = (Converter<Date, ObjectIdGenerator<Annotation>>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<ObjectIdGenerator<Annotation>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<ObjectIdGenerator<Annotation>>(converter0);
      BigInteger bigInteger0 = BigInteger.ONE;
      Number number0 = stdDelegatingDeserializer0._nonNullNumber(bigInteger0);
      assertSame(number0, bigInteger0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      BooleanNode booleanNode0 = BooleanNode.FALSE;
      boolean boolean0 = StdDeserializer._neitherNull("Infinity", booleanNode0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      boolean boolean0 = StdDeserializer._neitherNull((Object) null, class0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_LongDeserializer0._isPosInf("Infinity");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_ShortDeserializer0._isPosInf("NaN");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_DoubleDeserializer0._isNegInf("-Infinity");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_DoubleDeserializer0._isNegInf("JSON");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Class<Double> class0 = Double.class;
      Double double0 = new Double(Double.POSITIVE_INFINITY);
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = new NumberDeserializers.DoubleDeserializer(class0, double0);
      boolean boolean0 = numberDeserializers_DoubleDeserializer0._isNaN("-INF");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      NumberDeserializers.NumberDeserializer numberDeserializers_NumberDeserializer0 = new NumberDeserializers.NumberDeserializer();
      boolean boolean0 = numberDeserializers_NumberDeserializer0._isEmptyOrTextualNull("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
//      try { 
        StdDeserializer.parseDouble("<L2+7FNA75#aGT>pjk:");
//        fail("Expecting exception: NumberFormatException");
      
//      } catch(NumberFormatException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      // Undeclared exception!
//      try { 
        StdDeserializer.parseDouble((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Converter<String, Short> converter0 = (Converter<String, Short>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Short> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Short>(converter0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0.handledType();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      Class<Object> class0 = Object.class;
      DateDeserializers.SqlDateDeserializer dateDeserializers_SqlDateDeserializer0 = new DateDeserializers.SqlDateDeserializer();
      // Undeclared exception!
//      try { 
        dateDeserializers_SqlDateDeserializer0.findFormatOverrides((DeserializationContext) null, beanProperty_Bogus0, class0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.wrapperInstance;
      Class<InputStream> class0 = InputStream.class;
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.WRITE_SORTED_MAP_ENTRIES;
      // Undeclared exception!
//      try { 
        numberDeserializers_ShortDeserializer0.findFormatFeature((DeserializationContext) null, (BeanProperty) null, class0, jsonFormat_Feature0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Converter<Long, Class<InputStream>> converter0 = (Converter<Long, Class<InputStream>>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Class<InputStream>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Class<InputStream>>(converter0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0.findDeserializer((DeserializationContext) null, (JavaType) null, (BeanProperty) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      DateDeserializers.SqlDateDeserializer dateDeserializers_SqlDateDeserializer0 = new DateDeserializers.SqlDateDeserializer();
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      JavaType javaType0 = beanProperty_Bogus0.getType();
      // Undeclared exception!
//      try { 
        dateDeserializers_SqlDateDeserializer0.findDeserializer(defaultDeserializationContext_Impl0, javaType0, beanProperty_Bogus0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.DeserializerCache", e);
//      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringDeserializer stringDeserializer0 = new StringDeserializer();
      Converter<Module, Class<InputStream>> converter0 = (Converter<Module, Class<InputStream>>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Class<InputStream>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Class<InputStream>>(converter0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0.findConvertingContentDeserializer((DeserializationContext) null, (BeanProperty) null, stringDeserializer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Converter<Integer, Byte> converter0 = (Converter<Integer, Byte>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Byte> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Byte>(converter0);
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver((JavaType) null, typeFactory0);
      AsArrayTypeDeserializer asArrayTypeDeserializer0 = new AsArrayTypeDeserializer((JavaType) null, classNameIdResolver0, "`em:'h+2:9", true, (JavaType) null);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0.deserializeWithType(jsonParser0, (DeserializationContext) null, asArrayTypeDeserializer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_BooleanDeser0._verifyStringForScalarCoercion((DeserializationContext) null, "<qx1XpMQ^D");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringDeserializer stringDeserializer0 = new StringDeserializer();
      // Undeclared exception!
//      try { 
        stringDeserializer0._verifyNumberForScalarCoercion((DeserializationContext) null, (JsonParser) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_IntegerDeserializer0._verifyNullForScalarCoercion((DeserializationContext) null, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      // Undeclared exception!
//      try { 
        stringDeserializer0._verifyNullForPrimitiveCoercion((DeserializationContext) null, "k3");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.primitiveInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_DoubleDeserializer0._verifyNullForPrimitive((DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      char[] charArray0 = new char[9];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0, (-1969605109), (-1969605109));
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        stringDeserializer0._verifyEndArrayForSingle(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1969605109
//         //
//         verifyException("com.fasterxml.jackson.core.json.ReaderBasedJsonParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.primitiveInstance;
      PipedReader pipedReader0 = new PipedReader();
      JsonParser jsonParser0 = jsonFactory0.createParser((Reader) pipedReader0);
//      try { 
        numberDeserializers_DoubleDeserializer0._verifyEndArrayForSingle(jsonParser0, (DeserializationContext) null);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Pipe not connected
//         //
//         verifyException("java.io.PipedReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
//      try { 
        numberDeserializers_LongDeserializer0._verifyEndArrayForSingle(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Unrecognized token 'JSON': was expecting ('true', 'false' or 'null')
//         //  at [Source: (String)\"JSON\"; line: 1, column: 9]
//         //
//         verifyException("com.fasterxml.jackson.core.JsonParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_LongDeserializer0._reportFailedNullCoerce(deserializationContext0, true, (Enum<?>) null, "com.fasterxml.jackson.databind.type.TypeBindings");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.wrapperInstance;
      ObjectMapper objectMapper0 = new ObjectMapper();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      MapperFeature mapperFeature0 = MapperFeature.ALLOW_COERCION_OF_SCALARS;
      ObjectReader objectReader0 = objectMapper0.readerForUpdating(mapperFeature0);
      JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
      Double double0 = new Double((-1.0));
      ValueNode valueNode0 = jsonNodeFactory0.numberNode(double0);
      JsonParser jsonParser0 = objectReader0.treeAsTokens(valueNode0);
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      SimpleMixInResolver simpleMixInResolver0 = new SimpleMixInResolver((ClassIntrospector.MixInResolver) null);
      RootNameLookup rootNameLookup0 = new RootNameLookup();
      ConfigOverrides configOverrides0 = new ConfigOverrides();
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, simpleMixInResolver0, rootNameLookup0, configOverrides0);
      InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, jsonParser0, injectableValues_Std0);
//      try { 
        numberDeserializers_DoubleDeserializer0._parseString(jsonParser0, defaultDeserializationContext0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Unexpected end-of-input when binding data into `java.lang.String`
//         //  at [Source: UNKNOWN; line: -1, column: -1]
//         //
//         verifyException("com.fasterxml.jackson.databind.exc.MismatchedInputException", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        stringDeserializer0._parseLongPrimitive(defaultDeserializationContext_Impl0, "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      RootNameLookup rootNameLookup0 = new RootNameLookup();
      ConfigOverrides configOverrides0 = new ConfigOverrides();
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, (JsonParser) null, (InjectableValues) null);
      Class<Double> class0 = Double.class;
      Double double0 = new Double(Double.NaN);
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = new NumberDeserializers.DoubleDeserializer(class0, double0);
//      try { 
        numberDeserializers_DoubleDeserializer0._parseLongPrimitive(defaultDeserializationContext0, "x6.Wf1G@|a\"Ya _luM");
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Cannot deserialize value of type `java.lang.Double` from String \"x6.Wf1G@|a\"Ya _luM\": not a valid long value
//         //
//         verifyException("com.fasterxml.jackson.databind.exc.InvalidFormatException", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.wrapperInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        numberDeserializers_ShortDeserializer0._parseIntPrimitive(defaultDeserializationContext_Impl0, "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = NumberDeserializers.FloatDeserializer.primitiveInstance;
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
      UTF8StreamJsonParser uTF8StreamJsonParser0 = new UTF8StreamJsonParser(iOContext0, 1, pipedInputStream0, (ObjectCodec) null, byteQuadsCanonicalizer0, (byte[]) null, Integer.MAX_VALUE, 1, false);
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        numberDeserializers_FloatDeserializer0._parseIntPrimitive(uTF8StreamJsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.primitiveInstance;
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        numberDeserializers_DoubleDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      RootNameLookup rootNameLookup0 = new RootNameLookup();
      ConfigOverrides configOverrides0 = new ConfigOverrides();
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std(hashMap0);
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, (JsonParser) null, injectableValues_Std0);
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
//      try { 
        stringDeserializer0._parseFloatPrimitive(defaultDeserializationContext0, "[qKZIp>^`JUF: vya");
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Cannot deserialize value of type `java.lang.String` from String \"[qKZIp>^`JUF: vya\": not a valid float value
//         //
//         verifyException("com.fasterxml.jackson.databind.exc.InvalidFormatException", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_ShortDeserializer0._parseDoublePrimitive((DeserializationContext) null, "");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      RootNameLookup rootNameLookup0 = new RootNameLookup();
      ConfigOverrides configOverrides0 = new ConfigOverrides();
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, (JsonParser) null, (InjectableValues) null);
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
//      try { 
        numberDeserializers_ShortDeserializer0._parseDoublePrimitive(defaultDeserializationContext0, "wfrzzo-/PhN6");
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Cannot deserialize value of type `short` from String \"wfrzzo-/PhN6\": not a valid double value (as String to convert)
//         //
//         verifyException("com.fasterxml.jackson.databind.exc.InvalidFormatException", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      JsonFactory jsonFactory0 = new JsonFactory();
      File file0 = MockFile.createTempFile(" JZ%][n$$4},dm\"ER", "0w(=");
      JsonParser jsonParser0 = jsonFactory0.createParser(file0);
      // Undeclared exception!
//      try { 
        stringDeserializer0._parseBooleanFromInt(jsonParser0, (DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DateDeserializers.CalendarDeserializer dateDeserializers_CalendarDeserializer0 = new DateDeserializers.CalendarDeserializer();
      // Undeclared exception!
//      try { 
        dateDeserializers_CalendarDeserializer0._isIntNumber((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DateDeserializers.DateDeserializer dateDeserializers_DateDeserializer0 = DateDeserializers.DateDeserializer.instance;
      // Undeclared exception!
//      try { 
        dateDeserializers_DateDeserializer0._isEmptyOrTextualNull((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.primitiveInstance;
      ObjectMapper objectMapper0 = new ObjectMapper();
      JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
      MockFile mockFile0 = new MockFile((File) null, "JSON");
      File file0 = MockFile.createTempFile("3.tF8s3{l", "JSON", (File) mockFile0);
      JsonParser jsonParser0 = jsonFactory0.createParser(file0);
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
//      try { 
        numberDeserializers_DoubleDeserializer0._failDoubleToIntCoercion(jsonParser0, deserializationContext0, "3.tF8s3{l");
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Cannot coerce a floating-point value ('null') into 3.tF8s3{l (enable `DeserializationFeature.ACCEPT_FLOAT_AS_INT` to allow)
//         //
//         verifyException("com.fasterxml.jackson.databind.exc.MismatchedInputException", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      RootNameLookup rootNameLookup0 = new RootNameLookup();
      ConfigOverrides configOverrides0 = new ConfigOverrides();
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, (JsonParser) null, (InjectableValues) null);
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      JsonFactory jsonFactory0 = new JsonFactory();
      MockFile mockFile0 = new MockFile("JSON");
      File file0 = MockFile.createTempFile("properties", "properties", (File) mockFile0);
      JsonParser jsonParser0 = jsonFactory0.createParser(file0);
//      try { 
        stringDeserializer0._deserializeFromEmpty(jsonParser0, defaultDeserializationContext0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Unexpected end-of-input when binding data into `java.lang.String`
//         //
//         verifyException("com.fasterxml.jackson.databind.exc.MismatchedInputException", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringDeserializer stringDeserializer0 = new StringDeserializer();
      // Undeclared exception!
//      try { 
        stringDeserializer0._coerceTextualNull((DeserializationContext) null, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
      // Undeclared exception!
//      try { 
        stringDeserializer0._coerceIntegral(jsonParser0, (DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_ShortDeserializer0._coerceEmptyString((DeserializationContext) null, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
      Class<Date> class0 = Date.class;
      SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
      TypeBindings typeBindings0 = TypeBindings.createIfNeeded((Class<?>) class0, (JavaType) simpleType0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      ArrayType arrayType0 = ArrayType.construct((JavaType) simpleType0, typeBindings0, (Object) "NaN", (Object) bufferedInputStream0);
      ObjectReader objectReader0 = objectMapper0.readerFor((JavaType) arrayType0);
      assertNotNull(objectReader0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      JsonFactory jsonFactory0 = new JsonFactory();
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, (DefaultDeserializationContext) null);
      LongNode longNode0 = LongNode.valueOf((-953L));
      JsonParser jsonParser0 = objectMapper0.treeAsTokens(longNode0);
      // Undeclared exception!
//      try { 
        numberDeserializers_BooleanDeserializer0._verifyEndArrayForSingle(jsonParser0, (DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
//      try { 
        numberDeserializers_LongDeserializer0._coerceIntegral(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Current token (null) not numeric, can not use numeric value accessors
//         //  at [Source: (String)\"JSON\"; line: 1, column: 1]
//         //
//         verifyException("com.fasterxml.jackson.core.JsonParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      // Undeclared exception!
//      try { 
        stringDeserializer0._parseDate("as content of type ", (DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      byte[] byteArray0 = new byte[5];
      JsonParser jsonParser0 = jsonFactory0.createParser(byteArray0);
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        primitiveArrayDeserializers_BooleanDeser0.handleMissingEndArrayForSingle(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Converter<BooleanNode, SettableBeanProperty> converter0 = (Converter<BooleanNode, SettableBeanProperty>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<SettableBeanProperty> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<SettableBeanProperty>(converter0);
      JavaType javaType0 = stdDelegatingDeserializer0.getValueType();
      assertNull(javaType0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Converter<Byte, Boolean> converter0 = (Converter<Byte, Boolean>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Boolean> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Boolean>(converter0);
      BigDecimal bigDecimal0 = new BigDecimal(9223372036854775807L);
      Number number0 = stdDelegatingDeserializer0._nonNullNumber(bigDecimal0);
      assertEquals((short) (-1), number0.shortValue());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_IntegerDeserializer0._intOverflow(9223372036854775807L);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      NumberDeserializers.IntegerDeserializer numberDeserializers_IntegerDeserializer0 = NumberDeserializers.IntegerDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_IntegerDeserializer0._intOverflow((-2147483670L));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.primitiveInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._shortOverflow(Integer.MAX_VALUE);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._shortOverflow(32767);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      NumberDeserializers.BooleanDeserializer numberDeserializers_BooleanDeserializer0 = NumberDeserializers.BooleanDeserializer.wrapperInstance;
      boolean boolean0 = numberDeserializers_BooleanDeserializer0._shortOverflow((-2119637800));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StdDelegatingDeserializer<Calendar> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Calendar>((Converter<?, Calendar>) null);
      boolean boolean0 = stdDelegatingDeserializer0._byteOverflow(1770);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StdDelegatingDeserializer<Calendar> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Calendar>((Converter<?, Calendar>) null);
      boolean boolean0 = stdDelegatingDeserializer0._byteOverflow((-816));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_ShortDeserializer0.handleUnknownProperty(jsonParser0, defaultDeserializationContext_Impl0, (Object) null, "ALLOW_MISSING_VALUES");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Short short0 = new Short((short)4);
      Class<Short> class0 = Short.class;
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = new NumberDeserializers.ShortDeserializer(class0, short0);
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonFactory.Feature jsonFactory_Feature0 = JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW;
      JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        numberDeserializers_ShortDeserializer0.handleUnknownProperty(jsonParser0, defaultDeserializationContext_Impl0, jsonFactory_Feature0, "JSON");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      PrimitiveArrayDeserializers.BooleanDeser primitiveArrayDeserializers_BooleanDeser0 = new PrimitiveArrayDeserializers.BooleanDeser();
      Nulls nulls0 = Nulls.SKIP;
      StdDelegatingDeserializer<BeanDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BeanDeserializer>((Converter<?, BeanDeserializer>) null);
      NullValueProvider nullValueProvider0 = primitiveArrayDeserializers_BooleanDeser0._findNullProvider((DeserializationContext) null, (BeanProperty) null, nulls0, stdDelegatingDeserializer0);
      assertEquals(AccessPattern.ALWAYS_NULL, nullValueProvider0.getNullAccessPattern());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
      Nulls nulls0 = Nulls.AS_EMPTY;
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      NullValueProvider nullValueProvider0 = numberDeserializers_LongDeserializer0._findNullProvider(deserializationContext0, (BeanProperty) null, nulls0, stringDeserializer0);
      assertNotNull(nullValueProvider0);
      assertEquals(AccessPattern.CONSTANT, nullValueProvider0.getNullAccessPattern());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringDeserializer stringDeserializer0 = new StringDeserializer();
      Nulls nulls0 = Nulls.AS_EMPTY;
      NullValueProvider nullValueProvider0 = stringDeserializer0._findNullProvider((DeserializationContext) null, (BeanProperty) null, nulls0, (JsonDeserializer<?>) null);
      assertNull(nullValueProvider0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringDeserializer stringDeserializer0 = new StringDeserializer();
      Nulls nulls0 = Nulls.FAIL;
      StdDelegatingDeserializer<Boolean> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Boolean>((Converter<?, Boolean>) null);
      // Undeclared exception!
//      try { 
        stringDeserializer0._findNullProvider((DeserializationContext) null, (BeanProperty) null, nulls0, stdDelegatingDeserializer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.primitiveInstance;
      Nulls nulls0 = Nulls.FAIL;
      StringDeserializer stringDeserializer0 = new StringDeserializer();
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      NullValueProvider nullValueProvider0 = stringDeserializer0._findNullProvider((DeserializationContext) null, beanProperty_Bogus0, nulls0, numberDeserializers_DoubleDeserializer0);
      assertEquals(AccessPattern.DYNAMIC, nullValueProvider0.getNullAccessPattern());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      Class<BuilderBasedDeserializer> class0 = BuilderBasedDeserializer.class;
      DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, defaultSerializerProvider_Impl0, defaultDeserializationContext_Impl0);
      Nulls nulls0 = Nulls.AS_EMPTY;
      JsonSetter.Value jsonSetter_Value0 = JsonSetter.Value.forContentNulls(nulls0);
      ObjectMapper objectMapper1 = objectMapper0.setDefaultSetterInfo(jsonSetter_Value0);
      ObjectReader objectReader0 = objectMapper1.readerFor(class0);
      assertNotNull(objectReader0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      TypeFactory typeFactory0 = TypeFactory.defaultInstance();
      Class<LinkedList> class0 = LinkedList.class;
      Class<Byte> class1 = Byte.class;
      CollectionType collectionType0 = typeFactory0.constructCollectionType(class0, class1);
      StdDelegatingDeserializer<Class<String>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Class<String>>((Converter<Object, Class<String>>) null, collectionType0, numberDeserializers_ShortDeserializer0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      NullValueProvider nullValueProvider0 = stdDelegatingDeserializer0.findValueNullProvider(defaultDeserializationContext_Impl0, (SettableBeanProperty) null, propertyMetadata0);
      assertNull(nullValueProvider0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StdDelegatingDeserializer<Class<JsonDeserializer<Module>>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Class<JsonDeserializer<Module>>>((Converter<?, Class<JsonDeserializer<Module>>>) null);
      boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("0");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Converter<Object, Class<JsonDeserializer<Module>>> converter0 = (Converter<Object, Class<JsonDeserializer<Module>>>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Class<JsonDeserializer<Module>>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Class<JsonDeserializer<Module>>>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("+s6#]Rc^:7OC48");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StdDelegatingDeserializer<Class<JsonDeserializer<Module>>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Class<JsonDeserializer<Module>>>((Converter<?, Class<JsonDeserializer<Module>>>) null);
      boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("-Infinity");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StdDelegatingDeserializer<Class<JsonDeserializer<Module>>> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Class<JsonDeserializer<Module>>>((Converter<?, Class<JsonDeserializer<Module>>>) null);
      boolean boolean0 = stdDelegatingDeserializer0._isIntNumber("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      PrimitiveArrayDeserializers.ShortDeser primitiveArrayDeserializers_ShortDeser0 = new PrimitiveArrayDeserializers.ShortDeser();
      String string0 = primitiveArrayDeserializers_ShortDeser0._coercedTypeDesc();
      assertEquals("as content of type `short[]`", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper((JsonFactory) null);
      JsonFactory.Feature jsonFactory_Feature0 = JsonFactory.Feature.INTERN_FIELD_NAMES;
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
//      try { 
        numberDeserializers_LongDeserializer0._reportFailedNullCoerce(deserializationContext0, true, jsonFactory_Feature0, "JSON");
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Cannot coerce JSON to Null value for type `java.lang.Long` (enable `Feature.INTERN_FIELD_NAMES` to allow)
//         //
//         verifyException("com.fasterxml.jackson.databind.exc.MismatchedInputException", e);
//      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
      JsonFactory.Feature jsonFactory_Feature0 = JsonFactory.Feature.CANONICALIZE_FIELD_NAMES;
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
//      try { 
        numberDeserializers_LongDeserializer0._reportFailedNullCoerce(deserializationContext0, false, jsonFactory_Feature0, "Cannot coerce String \"%s\" %s (enable `%s.%s` to allow)");
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Cannot coerce Cannot coerce String \"%s\" %s (enable `%s.%s` to allow) to Null value for type `java.lang.Long` (disable `Feature.CANONICALIZE_FIELD_NAMES` to allow)
//         //
//         verifyException("com.fasterxml.jackson.databind.exc.MismatchedInputException", e);
//      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      RootNameLookup rootNameLookup0 = new RootNameLookup();
      ConfigOverrides configOverrides0 = new ConfigOverrides();
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, (JsonParser) null, (InjectableValues) null);
      Converter<Calendar, BuilderBasedDeserializer> converter0 = (Converter<Calendar, BuilderBasedDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BuilderBasedDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BuilderBasedDeserializer>(converter0);
      stdDelegatingDeserializer0._verifyStringForScalarCoercion(defaultDeserializationContext0, "long");
      assertFalse(defaultDeserializationContext0.equals((Object)defaultDeserializationContext_Impl0));
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      RootNameLookup rootNameLookup0 = new RootNameLookup();
      ConfigOverrides configOverrides0 = new ConfigOverrides();
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, (JsonParser) null, (InjectableValues) null);
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      DeserializationContext deserializationContext0 = defaultDeserializationContext0.setAttribute((Object) null, numberDeserializers_ShortDeserializer0);
      numberDeserializers_ShortDeserializer0._verifyNullForScalarCoercion(deserializationContext0, "7");
      assertEquals(AccessPattern.CONSTANT, numberDeserializers_ShortDeserializer0.getEmptyAccessPattern());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      RootNameLookup rootNameLookup0 = new RootNameLookup();
      ConfigOverrides configOverrides0 = new ConfigOverrides();
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, (JsonParser) null, (InjectableValues) null);
      stringDeserializer0._verifyNullForPrimitiveCoercion(defaultDeserializationContext0, "itV`");
      assertFalse(defaultDeserializationContext0.equals((Object)defaultDeserializationContext_Impl0));
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.primitiveInstance;
      numberDeserializers_DoubleDeserializer0._verifyNullForPrimitive(defaultDeserializationContext_Impl0);
      assertEquals(0, defaultDeserializationContext_Impl0.getDeserializationFeatures());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      RootNameLookup rootNameLookup0 = new RootNameLookup();
      ConfigOverrides configOverrides0 = new ConfigOverrides();
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std(hashMap0);
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, (JsonParser) null, injectableValues_Std0);
      Class<Short> class0 = Short.class;
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = new NumberDeserializers.ShortDeserializer(class0, (Short) null);
      Object object0 = numberDeserializers_ShortDeserializer0._coerceEmptyString(defaultDeserializationContext0, false);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      RootNameLookup rootNameLookup0 = new RootNameLookup();
      ConfigOverrides configOverrides0 = new ConfigOverrides();
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, (JsonParser) null, (InjectableValues) null);
      Short short0 = new Short((short)73);
      Class<Short> class0 = Short.class;
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = new NumberDeserializers.ShortDeserializer(class0, short0);
      Object object0 = numberDeserializers_ShortDeserializer0._coerceEmptyString(defaultDeserializationContext0, true);
      assertEquals((short)73, object0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      RootNameLookup rootNameLookup0 = new RootNameLookup();
      ConfigOverrides configOverrides0 = new ConfigOverrides();
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
      InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, (JsonParser) null, injectableValues_Std0);
      StringDeserializer stringDeserializer0 = new StringDeserializer();
      Object object0 = stringDeserializer0._coerceTextualNull(defaultDeserializationContext0, true);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
      RootNameLookup rootNameLookup0 = new RootNameLookup();
      ConfigOverrides configOverrides0 = new ConfigOverrides();
      DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0, configOverrides0);
      InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, (JsonParser) null, injectableValues_Std0);
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      Object object0 = stringDeserializer0._coerceTextualNull(defaultDeserializationContext0, false);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ByteBufferDeserializer byteBufferDeserializer0 = new ByteBufferDeserializer();
      // Undeclared exception!
//      try { 
        byteBufferDeserializer0._coerceNullToken((DeserializationContext) null, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringDeserializer stringDeserializer0 = new StringDeserializer();
      Object object0 = stringDeserializer0._coerceNullToken((DeserializationContext) null, false);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringDeserializer stringDeserializer0 = new StringDeserializer();
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
      // Undeclared exception!
//      try { 
        stringDeserializer0._deserializeWrappedValue(jsonParser0, (DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StringDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      char[] charArray0 = new char[3];
      JsonParser jsonParser0 = jsonFactory0.createParser(charArray0);
      DateDeserializers.SqlDateDeserializer dateDeserializers_SqlDateDeserializer0 = new DateDeserializers.SqlDateDeserializer();
      // Undeclared exception!
//      try { 
        dateDeserializers_SqlDateDeserializer0._deserializeFromArray(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Converter<BufferedInputStream, BooleanNode> converter0 = (Converter<BufferedInputStream, BooleanNode>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BooleanNode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BooleanNode>(converter0);
      float float0 = stdDelegatingDeserializer0._parseFloatPrimitive((DeserializationContext) null, "-Infinity");
      assertEquals(Float.NEGATIVE_INFINITY, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Converter<Byte, Date> converter0 = (Converter<Byte, Date>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<Date> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Date>(converter0);
      boolean boolean0 = stdDelegatingDeserializer0._isEmptyOrTextualNull("com.fasterxml.jackson.databind.type.TypeBindings");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Class<Double> class0 = Double.class;
      Double double0 = new Double(0.0);
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = new NumberDeserializers.DoubleDeserializer(class0, double0);
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        numberDeserializers_DoubleDeserializer0._parseDate("", defaultDeserializationContext_Impl0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // java.lang.Double cannot be cast to java.util.Date
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.wrapperInstance;
      ObjectMapper objectMapper0 = new ObjectMapper();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      MapperFeature mapperFeature0 = MapperFeature.ALLOW_COERCION_OF_SCALARS;
      ObjectReader objectReader0 = objectMapper0.readerForUpdating(mapperFeature0);
      JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
      Double double0 = new Double((-1.0));
      ValueNode valueNode0 = jsonNodeFactory0.numberNode(double0);
      JsonParser jsonParser0 = objectReader0.treeAsTokens(valueNode0);
      // Undeclared exception!
//      try { 
        numberDeserializers_DoubleDeserializer0._parseString(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      double double0 = StdDeserializer.parseDouble("2.2250738585072012e-308");
      assertEquals(2.2250738585072014E-308, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.wrapperInstance;
      Date date0 = numberDeserializers_ShortDeserializer0._parseDate("null", (DeserializationContext) null);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Converter<List<PropertyName>, RoundingMode> converter0 = (Converter<List<PropertyName>, RoundingMode>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<RoundingMode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<RoundingMode>(converter0);
      Converter<JsonDeserializer<Module>, CollectionType> converter1 = (Converter<JsonDeserializer<Module>, CollectionType>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<CollectionType> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<CollectionType>(converter1);
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      IOContext iOContext0 = new IOContext(bufferRecycler0, stdDelegatingDeserializer0, true);
      JsonFactory jsonFactory0 = new JsonFactory();
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 0, (Reader) null, objectMapper0, charsToNameCanonicalizer0);
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer1._parseDateFromArray(readerBasedJsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        stringDeserializer0._parseDate(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_ShortDeserializer0._parseDoublePrimitive((DeserializationContext) null, "-Ininpy");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      double double0 = numberDeserializers_ShortDeserializer0._parseDoublePrimitive((DeserializationContext) null, "NaN");
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      double double0 = numberDeserializers_ShortDeserializer0._parseDoublePrimitive((DeserializationContext) null, "Infinity");
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_ShortDeserializer0._parseDoublePrimitive(defaultDeserializationContext_Impl0, "No ObjectCodec defined for parser, needed for deserialization");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_ShortDeserializer0._parseDoublePrimitive((DeserializationContext) null, "Ifinity");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      double double0 = stringDeserializer0._parseDoublePrimitive((DeserializationContext) null, "-INF");
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Converter<String, BufferedInputStream> converter0 = (Converter<String, BufferedInputStream>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BufferedInputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BufferedInputStream>(converter0);
      ObjectMapper objectMapper0 = new ObjectMapper();
      JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
      PipedReader pipedReader0 = new PipedReader(624);
      JsonParser jsonParser0 = jsonFactory0.createParser((Reader) pipedReader0);
      DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._parseDoublePrimitive(jsonParser0, deserializationContext0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringDeserializer stringDeserializer0 = new StringDeserializer();
      float float0 = stringDeserializer0._parseFloatPrimitive((DeserializationContext) null, "NaN");
      assertEquals(Float.NaN, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        stringDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "I;NF");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      float float0 = stringDeserializer0._parseFloatPrimitive((DeserializationContext) null, "INF");
      assertEquals(Float.POSITIVE_INFINITY, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringDeserializer stringDeserializer0 = new StringDeserializer();
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        stringDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "NC:PG");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Converter<Integer, BooleanNode> converter0 = (Converter<Integer, BooleanNode>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BooleanNode> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BooleanNode>(converter0);
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._parseFloatPrimitive(defaultDeserializationContext_Impl0, "-}joEW=^");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Class<Float> class0 = Float.class;
      Float float0 = new Float(0.0);
      NumberDeserializers.FloatDeserializer numberDeserializers_FloatDeserializer0 = new NumberDeserializers.FloatDeserializer(class0, float0);
      JsonFactory jsonFactory0 = new JsonFactory();
      byte[] byteArray0 = new byte[8];
      JsonParser jsonParser0 = jsonFactory0.createParser(byteArray0, (-2063), (int) (byte) (-1));
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      // Undeclared exception!
//      try { 
        numberDeserializers_FloatDeserializer0._parseFloatPrimitive(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      JsonFactory jsonFactory0 = new JsonFactory();
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      JsonParser jsonParser0 = jsonFactory0.createParser((Reader) pipedReader0);
      // Undeclared exception!
//      try { 
        stringDeserializer0._parseLongPrimitive(jsonParser0, (DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      // Undeclared exception!
//      try { 
        stringDeserializer0._parseIntPrimitive((DeserializationContext) null, "..E+9k1w*'0gebF*#N");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      int int0 = numberDeserializers_ShortDeserializer0._parseIntPrimitive((DeserializationContext) null, "4");
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createParser("Nsix;8$':L&J");
      JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(true, jsonParser0, jsonParser0);
      // Undeclared exception!
//      try { 
        numberDeserializers_ShortDeserializer0._parseBytePrimitive(jsonParserSequence0, (DeserializationContext) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      NumberDeserializers.LongDeserializer numberDeserializers_LongDeserializer0 = NumberDeserializers.LongDeserializer.wrapperInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_LongDeserializer0._parseBooleanPrimitive(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringDeserializer stringDeserializer0 = new StringDeserializer();
      boolean boolean0 = stringDeserializer0.isDefaultDeserializer(stringDeserializer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringDeserializer stringDeserializer0 = new StringDeserializer();
      Class<Float> class0 = Float.class;
      StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, stringDeserializer0);
      boolean boolean0 = stringDeserializer0.isDefaultKeyDeserializer(stdKeyDeserializer_DelegatingKD0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StdDelegatingDeserializer<Calendar> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Calendar>((Converter<?, Calendar>) null);
      // Undeclared exception!
//      try { 
        stdDelegatingDeserializer0._coercedTypeDesc();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Converter<Class<InputStream>, BufferedInputStream> converter0 = (Converter<Class<InputStream>, BufferedInputStream>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BufferedInputStream> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BufferedInputStream>(converter0);
      Class<?> class0 = stdDelegatingDeserializer0.getValueClass();
      assertFalse(class0.isPrimitive());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.wrapperInstance;
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      PropertyName propertyName0 = PropertyName.USE_DEFAULT;
      PropertyMetadata propertyMetadata0 = PropertyMetadata.STD_OPTIONAL;
      BeanProperty.Std beanProperty_Std0 = new BeanProperty.Std((PropertyName) null, (JavaType) null, propertyName0, (AnnotatedMember) null, propertyMetadata0);
      // Undeclared exception!
//      try { 
        numberDeserializers_DoubleDeserializer0.findDeserializer(defaultDeserializationContext_Impl0, (JavaType) null, beanProperty_Std0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null JavaType passed
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.DeserializerCache", e);
//      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.wrapperInstance;
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      IOContext iOContext0 = new IOContext(bufferRecycler0, numberDeserializers_DoubleDeserializer0, false);
      PipedReader pipedReader0 = new PipedReader(3);
      ObjectMapper objectMapper0 = new ObjectMapper();
      CharsToNameCanonicalizer charsToNameCanonicalizer0 = CharsToNameCanonicalizer.createRoot();
      char[] charArray0 = new char[0];
      ReaderBasedJsonParser readerBasedJsonParser0 = new ReaderBasedJsonParser(iOContext0, 2, pipedReader0, objectMapper0, charsToNameCanonicalizer0, charArray0, 53, (-1955717710), false);
      // Undeclared exception!
//      try { 
        numberDeserializers_DoubleDeserializer0._failDoubleToIntCoercion(readerBasedJsonParser0, (DeserializationContext) null, "Internal error: total len assumed to be ");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      NumberDeserializers.ShortDeserializer numberDeserializers_ShortDeserializer0 = NumberDeserializers.ShortDeserializer.primitiveInstance;
      Converter<Object, Annotation> converter0 = (Converter<Object, Annotation>) mock(Converter.class, new ViolatedAssumptionAnswer());
      Class<JavaType> class0 = JavaType.class;
      SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
      StdDelegatingDeserializer<Annotation> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<Annotation>(converter0, simpleType0, numberDeserializers_ShortDeserializer0);
      boolean boolean0 = stdDelegatingDeserializer0._isNaN("NaN");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Converter<Calendar, BuilderBasedDeserializer> converter0 = (Converter<Calendar, BuilderBasedDeserializer>) mock(Converter.class, new ViolatedAssumptionAnswer());
      StdDelegatingDeserializer<BuilderBasedDeserializer> stdDelegatingDeserializer0 = new StdDelegatingDeserializer<BuilderBasedDeserializer>(converter0);
      StdDelegatingDeserializer<BuilderBasedDeserializer> stdDelegatingDeserializer1 = new StdDelegatingDeserializer<BuilderBasedDeserializer>(stdDelegatingDeserializer0);
      assertFalse(stdDelegatingDeserializer1.isCachable());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DateDeserializers.DateDeserializer dateDeserializers_DateDeserializer0 = new DateDeserializers.DateDeserializer();
      boolean boolean0 = dateDeserializers_DateDeserializer0._hasTextualNull("NaN");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      NumberDeserializers.DoubleDeserializer numberDeserializers_DoubleDeserializer0 = NumberDeserializers.DoubleDeserializer.primitiveInstance;
      // Undeclared exception!
//      try { 
        numberDeserializers_DoubleDeserializer0._parseLongPrimitive((DeserializationContext) null, "com.fasterxml.jackSon.databind.deser.std.StdKeyDesrialiuer$EumKD");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.std.StdDeserializer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
      StringDeserializer stringDeserializer0 = StringDeserializer.instance;
      JsonFactory jsonFactory0 = new JsonFactory();
      MockFile mockFile0 = new MockFile("JSON");
      File file0 = MockFile.createTempFile("properties", "properties", (File) mockFile0);
      JsonParser jsonParser0 = jsonFactory0.createParser(file0);
      // Undeclared exception!
//      try { 
        stringDeserializer0._deserializeFromEmpty(jsonParser0, defaultDeserializationContext_Impl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.DeserializationContext", e);
//      }
  }
}
