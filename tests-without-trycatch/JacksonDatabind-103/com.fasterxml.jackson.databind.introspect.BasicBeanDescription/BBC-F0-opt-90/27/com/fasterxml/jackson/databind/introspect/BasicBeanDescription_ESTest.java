/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 24 04:35:56 GMT 2021
 */

package com.fasterxml.jackson.databind.introspect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.annotation.PropertyAccessor;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.core.util.ByteArrayBuilder;
import com.fasterxml.jackson.databind.AnnotationIntrospector;
import com.fasterxml.jackson.databind.BeanProperty;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.MapperFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.BeanDeserializerModifier;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.deser.DeserializerFactory;
import com.fasterxml.jackson.databind.introspect.AnnotatedClass;
import com.fasterxml.jackson.databind.introspect.AnnotatedConstructor;
import com.fasterxml.jackson.databind.introspect.AnnotatedMember;
import com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
import com.fasterxml.jackson.databind.introspect.AnnotatedParameter;
import com.fasterxml.jackson.databind.introspect.BasicBeanDescription;
import com.fasterxml.jackson.databind.introspect.BasicClassIntrospector;
import com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;
import com.fasterxml.jackson.databind.introspect.ObjectIdInfo;
import com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector;
import com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember;
import com.fasterxml.jackson.databind.module.SimpleModule;
import com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
import com.fasterxml.jackson.databind.type.MapType;
import com.fasterxml.jackson.databind.type.TypeBindings;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.util.Annotations;
import com.fasterxml.jackson.databind.util.Converter;
import java.io.IOException;
import java.io.OutputStream;
import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.lang.reflect.Type;
import java.nio.CharBuffer;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BasicBeanDescription_ESTest extends BasicBeanDescription_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectMapper objectMapper0 = new ObjectMapper();
      JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.NON_NULL;
      ObjectMapper objectMapper1 = objectMapper0.setDefaultPropertyInclusion(jsonInclude_Include0);
      PropertyAccessor propertyAccessor0 = PropertyAccessor.FIELD;
      JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.PROTECTED_AND_PUBLIC;
      objectMapper1.setVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);
      ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.NON_CONCRETE_AND_ARRAYS;
      ObjectMapper objectMapper2 = objectMapper1.enableDefaultTypingAsProperty(objectMapper_DefaultTyping0, "valueOf");
//      try { 
        objectMapper2.writeValueAsBytes(objectMapper1);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Loop has been executed more times than the allowed 10000 (through reference chain: com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"]->com.fasterxml.jackson.databind.ObjectMapper[\"_jsonFactory\"]->com.fasterxml.jackson.databind.MappingJsonFactory[\"_objectCodec\"])
//         //
//         verifyException("com.fasterxml.jackson.databind.JsonMappingException", e);
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      Class<ObjectIdGenerators.UUIDGenerator>[] classArray0 = (Class<ObjectIdGenerators.UUIDGenerator>[]) Array.newInstance(Class.class, 0);
      basicBeanDescription0._defaultViews = classArray0;
      basicBeanDescription0.findDefaultViews();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      List<AnnotatedConstructor> list0 = basicBeanDescription0.getConstructors();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      boolean boolean0 = basicBeanDescription0.hasKnownClassAnnotations();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      ObjectIdInfo objectIdInfo0 = basicBeanDescription0.getObjectIdInfo();
      assertNull(objectIdInfo0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      AnnotatedClass annotatedClass0 = basicBeanDescription0.getClassInfo();
      assertEquals(1041, annotatedClass0.getModifiers());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
      Annotations annotations0 = basicBeanDescription0.getClassAnnotations();
      assertEquals(0, annotations0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      Constructor<?> constructor0 = basicBeanDescription0.findSingleArgConstructor((Class<?>[]) null);
      assertNull(constructor0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      Converter<Object, Object> converter0 = basicBeanDescription0.findSerializationConverter();
      assertNull(converter0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
      JsonInclude.Value jsonInclude_Value0 = basicBeanDescription0.findPropertyInclusion((JsonInclude.Value) null);
      assertNull(jsonInclude_Value0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      LinkedList<BeanPropertyDefinition> linkedList0 = new LinkedList<BeanPropertyDefinition>();
      basicBeanDescription0._properties = (List<BeanPropertyDefinition>) linkedList0;
      linkedList0.add((BeanPropertyDefinition) null);
      List<BeanPropertyDefinition> list0 = basicBeanDescription0.findProperties();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      Stack<BeanPropertyDefinition> stack0 = new Stack<BeanPropertyDefinition>();
      List<BeanPropertyDefinition> list0 = basicBeanDescription0.findProperties();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      Class<?> class0 = basicBeanDescription0.findPOJOBuilder();
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      AnnotatedMember annotatedMember0 = basicBeanDescription0.findJsonValueAccessor();
      assertNull(annotatedMember0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      Class<VirtualAnnotatedMember>[] classArray0 = (Class<VirtualAnnotatedMember>[]) Array.newInstance(Class.class, 4);
      Method method0 = basicBeanDescription0.findFactoryMethod(classArray0);
      assertNull(method0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      Converter<Object, Object> converter0 = basicBeanDescription0.findDeserializationConverter();
      assertNull(converter0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      Class<AnnotatedConstructor>[] classArray0 = (Class<AnnotatedConstructor>[]) Array.newInstance(Class.class, 9);
      Class<AnnotatedConstructor> class0 = AnnotatedConstructor.class;
      classArray0[8] = classArray0[2];
      // Undeclared exception!
//      try { 
        basicBeanDescription0.findDefaultViews();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      AnnotatedConstructor annotatedConstructor0 = basicBeanDescription0.findDefaultConstructor();
      assertNull(annotatedConstructor0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      List<BeanPropertyDefinition> list0 = basicBeanDescription0.findBackReferences();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
      Vector<BeanPropertyDefinition> vector0 = new Vector<BeanPropertyDefinition>();
      List<BeanPropertyDefinition> list0 = basicBeanDescription0._properties();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      Vector<BeanPropertyDefinition> vector0 = new Vector<BeanPropertyDefinition>();
      vector0.add((BeanPropertyDefinition) null);
      List<BeanPropertyDefinition> list0 = basicBeanDescription0._properties();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      Converter<Object, Object> converter0 = basicBeanDescription0._createConverter((Object) null);
      assertNull(converter0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      // Undeclared exception!
//      try { 
        basicBeanDescription0.isFactoryMethod((AnnotatedMethod) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      boolean boolean0 = basicBeanDescription0.hasProperty((PropertyName) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
//      try { 
        BasicBeanDescription.forSerialization((POJOPropertiesCollector) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
//      try { 
        BasicBeanDescription.forDeserialization((POJOPropertiesCollector) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
      beanProperty_Bogus0.getWrapperName();
      Class<String> class0 = String.class;
      Class<ObjectIdGenerators.UUIDGenerator> class1 = ObjectIdGenerators.UUIDGenerator.class;
      ObjectIdInfo objectIdInfo0 = new ObjectIdInfo((PropertyName) null, class0, class1, true);
      basicBeanDescription0._objectIdInfo = objectIdInfo0;
      basicBeanDescription0.getFactoryMethods();
      basicBeanDescription0.instantiateBean(false);
      basicBeanDescription0.findProperties();
      basicBeanDescription0.getObjectIdInfo();
      basicBeanDescription0.findBackReferences();
      basicBeanDescription0.findJsonValueMethod();
      // Undeclared exception!
//      try { 
        basicBeanDescription0.isFactoryMethod((AnnotatedMethod) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      List<BeanPropertyDefinition> list0 = basicBeanDescription0.findBackReferences();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      Map<String, AnnotatedMember> map0 = basicBeanDescription0.findBackReferenceProperties();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
      // Undeclared exception!
//      try { 
        basicBeanDescription0.addProperty((BeanPropertyDefinition) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      List<BeanPropertyDefinition> list0 = basicBeanDescription0._properties();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
      // Undeclared exception!
//      try { 
        basicBeanDescription0._findCreatorPropertyName((AnnotatedParameter) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
//      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      BeanSerializerBuilder beanSerializerBuilder0 = new BeanSerializerBuilder(basicBeanDescription0);
      AnnotatedClass annotatedClass0 = beanSerializerBuilder0.getClassInfo();
      BasicBeanDescription basicBeanDescription1 = null;
//      try {
        basicBeanDescription1 = new BasicBeanDescription((POJOPropertiesCollector) null, (JavaType) null, annotatedClass0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
//      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = null;
//      try {
        basicBeanDescription0 = new BasicBeanDescription((POJOPropertiesCollector) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
//      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      BeanPropertyDefinition beanPropertyDefinition0 = basicBeanDescription0.findProperty((PropertyName) null);
      assertNull(beanPropertyDefinition0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      // Undeclared exception!
//      try { 
        basicBeanDescription0._createConverter("AnnotationIntrospector returned Class ");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // AnnotationIntrospector returned Converter definition of type java.lang.String; expected type Converter or Class<Converter> instead
//         //
//         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
//      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      Class<Object> class0 = Object.class;
      // Undeclared exception!
//      try { 
        basicBeanDescription0._createConverter(class0);
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // AnnotationIntrospector returned Class java.lang.Object; expected Class<Converter>
//         //
//         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
//      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      LinkedList<BeanPropertyDefinition> linkedList0 = new LinkedList<BeanPropertyDefinition>();
      basicBeanDescription0._properties = (List<BeanPropertyDefinition>) linkedList0;
      linkedList0.add((BeanPropertyDefinition) null);
      // Undeclared exception!
//      try { 
        basicBeanDescription0._findPropertyFields(set0, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
//      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      // Undeclared exception!
//      try { 
        basicBeanDescription0._findPropertyFields(set0, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
//      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      String string0 = basicBeanDescription0.findClassDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      JsonPOJOBuilder.Value jsonPOJOBuilder_Value0 = basicBeanDescription0.findPOJOBuilderConfig();
      assertNull(jsonPOJOBuilder_Value0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory((ObjectCodec) null);
      BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
      BeanDeserializerModifier beanDeserializerModifier0 = mock(BeanDeserializerModifier.class, new ViolatedAssumptionAnswer());
      doReturn((JsonDeserializer) null).when(beanDeserializerModifier0).modifyDeserializer(any(com.fasterxml.jackson.databind.DeserializationConfig.class) , any(com.fasterxml.jackson.databind.BeanDescription.class) , any(com.fasterxml.jackson.databind.JsonDeserializer.class));
      doReturn((List) null).when(beanDeserializerModifier0).updateProperties(any(com.fasterxml.jackson.databind.DeserializationConfig.class) , any(com.fasterxml.jackson.databind.BeanDescription.class) , anyList());
      DeserializerFactory deserializerFactory0 = beanDeserializerFactory0.withDeserializerModifier(beanDeserializerModifier0);
      DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(deserializerFactory0);
      ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0, (DefaultSerializerProvider) null, defaultDeserializationContext_Impl0);
      Integer integer0 = new Integer(16);
      // Undeclared exception!
//      try { 
        objectMapper0.readerForUpdating(integer0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.deser.BeanDeserializerFactory", e);
//      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      AnnotatedMember annotatedMember0 = basicBeanDescription0.findAnyGetter();
      assertNull(annotatedMember0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      JsonInclude.Include jsonInclude_Include0 = JsonInclude.Include.USE_DEFAULTS;
      Class<SimpleModule> class0 = SimpleModule.class;
      Class<ObjectIdGenerators.UUIDGenerator> class1 = ObjectIdGenerators.UUIDGenerator.class;
      JsonInclude.Value jsonInclude_Value0 = JsonInclude.Value.construct(jsonInclude_Include0, jsonInclude_Include0, class0, class1);
      JsonInclude.Value jsonInclude_Value1 = basicBeanDescription0.findPropertyInclusion(jsonInclude_Value0);
      assertSame(jsonInclude_Value1, jsonInclude_Value0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      ObjectMapper objectMapper0 = new ObjectMapper();
      MapperFeature[] mapperFeatureArray0 = new MapperFeature[3];
      MapperFeature mapperFeature0 = MapperFeature.AUTO_DETECT_FIELDS;
      mapperFeatureArray0[0] = mapperFeature0;
      mapperFeatureArray0[1] = mapperFeatureArray0[0];
      MapperFeature mapperFeature1 = MapperFeature.DEFAULT_VIEW_INCLUSION;
      mapperFeatureArray0[2] = mapperFeature1;
      objectMapper0.disable(mapperFeatureArray0);
      ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
//      try { 
        objectMapper0.writeValue((OutputStream) byteArrayBuilder0, (Object) basicBeanDescription0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // No serializer found for class com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.fasterxml.jackson.databind.introspect.BasicBeanDescription[\"classInfo\"]->com.fasterxml.jackson.databind.introspect.AnnotatedClass[\"annotations\"])
//         //
//         verifyException("com.fasterxml.jackson.databind.exc.InvalidDefinitionException", e);
//      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      ObjectMapper objectMapper0 = new ObjectMapper();
      AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
      ObjectMapper objectMapper1 = objectMapper0.setAnnotationIntrospectors(annotationIntrospector0, annotationIntrospector0);
      ObjectReader objectReader0 = objectMapper1.readerForUpdating(basicBeanDescription0);
      assertNotNull(objectReader0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      JsonFormat.Value jsonFormat_Value0 = JsonFormat.Value.forLeniency(false);
      // Undeclared exception!
//      try { 
        basicBeanDescription0.findExpectedFormat(jsonFormat_Value0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
//      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
      Map<Object, AnnotatedMember> map0 = basicBeanDescription0.findInjectables();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      AnnotatedMember annotatedMember0 = basicBeanDescription0.findAnySetterAccessor();
      assertNull(annotatedMember0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      JavaType javaType0 = basicBeanDescription0.resolveType((Type) null);
      assertNull(javaType0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.INT_DESC;
      Class<Locale.LanguageRange> class0 = Locale.LanguageRange.class;
      Class<VirtualAnnotatedMember> class1 = VirtualAnnotatedMember.class;
      ArrayList<JavaType> arrayList0 = new ArrayList<JavaType>();
      TypeBindings typeBindings0 = TypeBindings.create((Class<?>) class1, (List<JavaType>) arrayList0);
      JavaType javaType0 = TypeFactory.unknownType();
      JavaType[] javaTypeArray0 = new JavaType[1];
      javaTypeArray0[0] = javaType0;
      MapType mapType0 = MapType.construct(class0, typeBindings0, javaType0, javaTypeArray0, javaTypeArray0[0], javaType0);
      // Undeclared exception!
//      try { 
        basicBeanDescription0.resolveType(mapType0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
//      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      ObjectMapper objectMapper0 = new ObjectMapper();
      PropertyAccessor propertyAccessor0 = PropertyAccessor.ALL;
      JsonAutoDetect.Visibility jsonAutoDetect_Visibility0 = JsonAutoDetect.Visibility.PROTECTED_AND_PUBLIC;
      ObjectMapper objectMapper1 = objectMapper0.setVisibility(propertyAccessor0, jsonAutoDetect_Visibility0);
      MapperFeature[] mapperFeatureArray0 = new MapperFeature[9];
      MapperFeature mapperFeature0 = MapperFeature.DEFAULT_VIEW_INCLUSION;
      mapperFeatureArray0[0] = mapperFeature0;
      mapperFeatureArray0[1] = mapperFeatureArray0[0];
      mapperFeatureArray0[2] = mapperFeatureArray0[1];
      mapperFeatureArray0[3] = mapperFeatureArray0[2];
      mapperFeatureArray0[4] = mapperFeatureArray0[2];
      MapperFeature mapperFeature1 = MapperFeature.PROPAGATE_TRANSIENT_MARKER;
      mapperFeatureArray0[5] = mapperFeature1;
      mapperFeatureArray0[6] = mapperFeature1;
      mapperFeatureArray0[7] = mapperFeatureArray0[1];
      mapperFeatureArray0[8] = mapperFeatureArray0[6];
      objectMapper1.enable(mapperFeatureArray0);
      ObjectReader objectReader0 = objectMapper1.readerForUpdating(basicBeanDescription0);
      assertNotNull(objectReader0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
      Set<String> set0 = basicBeanDescription0.getIgnoredPropertyNames();
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.BOOLEAN_DESC;
      Stack<BeanPropertyDefinition> stack0 = new Stack<BeanPropertyDefinition>();
      basicBeanDescription0._properties = (List<BeanPropertyDefinition>) stack0;
      stack0.add((BeanPropertyDefinition) null);
      // Undeclared exception!
//      try { 
        basicBeanDescription0.findProperty((PropertyName) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("com.fasterxml.jackson.databind.introspect.BasicBeanDescription", e);
//      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "fromString");
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      basicBeanDescription0.removeProperty("rukm3.@(Zd~DvPH0");
      List<BeanPropertyDefinition> list0 = basicBeanDescription0.findProperties();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.STRING_DESC;
      TypeBindings typeBindings0 = basicBeanDescription0.bindingsForBeanType();
      assertEquals(0, typeBindings0.size());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      BasicBeanDescription basicBeanDescription0 = BasicClassIntrospector.LONG_DESC;
      Class<CharBuffer>[] classArray0 = (Class<CharBuffer>[]) Array.newInstance(Class.class, 2);
      AnnotatedMethod annotatedMethod0 = basicBeanDescription0.findMethod("EDs,d:T9$5coTd^B", classArray0);
      assertNull(annotatedMethod0);
  }
}
