/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 21 17:52:46 GMT 2021
 */

package org.mockito.exceptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.sql.SQLDataException;
import java.sql.SQLException;
import java.sql.SQLInvalidAuthorizationSpecException;
import java.sql.SQLNonTransientConnectionException;
import java.sql.SQLNonTransientException;
import java.sql.SQLTimeoutException;
import java.sql.SQLTransientException;
import java.sql.SQLWarning;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.hamcrest.Matcher;
import org.hamcrest.collection.IsIn;
import org.hamcrest.core.DescribedAs;
import org.hamcrest.core.StringContains;
import org.junit.runner.RunWith;
import org.mockito.exceptions.Reporter;
import org.mockito.exceptions.base.MockitoAssertionError;
import org.mockito.exceptions.verification.junit.ArgumentsAreDifferent;
import org.mockito.internal.debugging.LocationImpl;
import org.mockito.internal.debugging.VerboseMockInvocationLogger;
import org.mockito.internal.exceptions.VerificationAwareInvocation;
import org.mockito.internal.exceptions.stacktrace.StackTraceFilter;
import org.mockito.internal.invocation.InvocationMatcher;
import org.mockito.internal.matchers.LocalizedMatcher;
import org.mockito.invocation.DescribedInvocation;
import org.mockito.invocation.Invocation;
import org.mockito.invocation.InvocationOnMock;
import org.mockito.invocation.Location;
import org.mockito.listeners.InvocationListener;
import org.mockito.mock.SerializableMode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Reporter_ESTest extends Reporter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(invocation0).toString();
      ArrayList<InvocationMatcher> arrayList0 = new ArrayList<InvocationMatcher>();
      // Undeclared exception!
//      try { 
        reporter0.wantedButNotInvoked((DescribedInvocation) invocation0, (List<? extends DescribedInvocation>) arrayList0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.System", e);
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      LocationImpl locationImpl0 = new LocationImpl();
      // Undeclared exception!
//      try { 
        reporter0.unfinishedVerificationException(locationImpl0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      LocationImpl locationImpl0 = new LocationImpl();
      // Undeclared exception!
//      try { 
        reporter0.unfinishedStubbing(locationImpl0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      StackTraceFilter stackTraceFilter0 = new StackTraceFilter();
      LocationImpl locationImpl0 = new LocationImpl(stackTraceFilter0);
      // Undeclared exception!
//      try { 
        reporter0.smartNullPointerException("5RC!GY'ZrKx", locationImpl0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      // Undeclared exception!
//      try { 
        reporter0.notAMockPassedToVerify((Class) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
//      try { 
        reporter0.mockedTypeIsInconsistentWithSpiedInstanceType(class0, reporter0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
//      try { 
        reporter0.mockedTypeIsInconsistentWithDelegatedInstanceType(class0, class0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      VerboseMockInvocationLogger verboseMockInvocationLogger0 = new VerboseMockInvocationLogger();
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException((Throwable) null);
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException("j!fD!Lhhj5!%e<f", "j!fD!Lhhj5!%e<f", sQLInvalidAuthorizationSpecException0);
      // Undeclared exception!
//      try { 
        reporter0.invocationListenerThrewException(verboseMockInvocationLogger0, sQLNonTransientConnectionException0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      ArrayList<LocalizedMatcher> arrayList0 = new ArrayList<LocalizedMatcher>();
      // Undeclared exception!
//      try { 
        reporter0.invalidUseOfMatchers(0, arrayList0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.invalidArgumentPositionRangeAtInvocationTime((InvocationOnMock) null, false, (-1));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      SQLNonTransientException sQLNonTransientException0 = new SQLNonTransientException("Calling real methods is only possible when mocking non abstract method.", "");
      assertNotNull(sQLNonTransientException0);
      assertEquals("Calling real methods is only possible when mocking non abstract method.", sQLNonTransientException0.getMessage());
      assertEquals("java.sql.SQLNonTransientException: Calling real methods is only possible when mocking non abstract method.", sQLNonTransientException0.toString());
      assertEquals(0, sQLNonTransientException0.getErrorCode());
      assertEquals("", sQLNonTransientException0.getSQLState());
      
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("Cannot instantiate @InjectMocks field named '", "", sQLNonTransientException0);
      assertNotNull(sQLInvalidAuthorizationSpecException0);
      assertEquals("Calling real methods is only possible when mocking non abstract method.", sQLNonTransientException0.getMessage());
      assertEquals("java.sql.SQLNonTransientException: Calling real methods is only possible when mocking non abstract method.", sQLNonTransientException0.toString());
      assertEquals(0, sQLNonTransientException0.getErrorCode());
      assertEquals("", sQLNonTransientException0.getSQLState());
      assertEquals(0, sQLInvalidAuthorizationSpecException0.getErrorCode());
      assertEquals("Cannot instantiate @InjectMocks field named '", sQLInvalidAuthorizationSpecException0.getMessage());
      assertEquals("", sQLInvalidAuthorizationSpecException0.getSQLState());
      assertEquals("java.sql.SQLInvalidAuthorizationSpecException: Cannot instantiate @InjectMocks field named '", sQLInvalidAuthorizationSpecException0.toString());
      
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException("Cannot instantiate @InjectMocks field named '", sQLInvalidAuthorizationSpecException0);
      assertNotNull(sQLTimeoutException0);
      assertEquals("Calling real methods is only possible when mocking non abstract method.", sQLNonTransientException0.getMessage());
      assertEquals("java.sql.SQLNonTransientException: Calling real methods is only possible when mocking non abstract method.", sQLNonTransientException0.toString());
      assertEquals(0, sQLNonTransientException0.getErrorCode());
      assertEquals("", sQLNonTransientException0.getSQLState());
      assertEquals(0, sQLInvalidAuthorizationSpecException0.getErrorCode());
      assertEquals("Cannot instantiate @InjectMocks field named '", sQLInvalidAuthorizationSpecException0.getMessage());
      assertEquals("", sQLInvalidAuthorizationSpecException0.getSQLState());
      assertEquals("java.sql.SQLInvalidAuthorizationSpecException: Cannot instantiate @InjectMocks field named '", sQLInvalidAuthorizationSpecException0.toString());
      assertEquals("Cannot instantiate @InjectMocks field named '", sQLTimeoutException0.getMessage());
      assertNull(sQLTimeoutException0.getSQLState());
      assertEquals("java.sql.SQLTimeoutException: Cannot instantiate @InjectMocks field named '", sQLTimeoutException0.toString());
      assertEquals(0, sQLTimeoutException0.getErrorCode());
      
      // Undeclared exception!
//      try { 
        reporter0.cannotInitializeForSpyAnnotation("Cannot instantiate @InjectMocks field named '", sQLTimeoutException0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      SQLDataException sQLDataException0 = new SQLDataException((Throwable) null);
      assertNotNull(sQLDataException0);
      assertNull(sQLDataException0.getMessage());
      assertNull(sQLDataException0.getSQLState());
      assertEquals("java.sql.SQLDataException", sQLDataException0.toString());
      assertEquals(0, sQLDataException0.getErrorCode());
      
      // Undeclared exception!
//      try { 
        reporter0.cannotInitializeForInjectMocksAnnotation("", sQLDataException0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.argumentsAreDifferent("", "", (Location) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.System", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.noMoreInteractionsWantedInOrder((Invocation) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      Stack<VerificationAwareInvocation> stack0 = new Stack<VerificationAwareInvocation>();
      assertNotNull(stack0);
      assertEquals("[]", stack0.toString());
      assertTrue(stack0.isEmpty());
      assertTrue(stack0.empty());
      assertEquals(0, stack0.size());
      assertEquals(10, stack0.capacity());
      
      VerificationAwareInvocation verificationAwareInvocation0 = stack0.push((VerificationAwareInvocation) null);
      assertNull(verificationAwareInvocation0);
      assertEquals("[null]", stack0.toString());
      assertFalse(stack0.isEmpty());
      assertEquals(1, stack0.size());
      assertFalse(stack0.empty());
      assertEquals(10, stack0.capacity());
      
      // Undeclared exception!
//      try { 
        reporter0.wantedButNotInvoked((DescribedInvocation) null, (List<? extends DescribedInvocation>) stack0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      Stack<LocalizedMatcher> stack0 = new Stack<LocalizedMatcher>();
      assertNotNull(stack0);
      assertEquals("[]", stack0.toString());
      assertEquals(10, stack0.capacity());
      assertEquals(0, stack0.size());
      assertTrue(stack0.isEmpty());
      assertTrue(stack0.empty());
      
      LocalizedMatcher localizedMatcher0 = new LocalizedMatcher((Matcher) null);
      assertNotNull(localizedMatcher0);
      
      boolean boolean0 = stack0.add(localizedMatcher0);
      assertTrue(boolean0);
      assertTrue(stack0.contains(localizedMatcher0));
      assertFalse(stack0.isEmpty());
      assertFalse(stack0.empty());
      assertEquals(10, stack0.capacity());
      assertEquals(1, stack0.size());
      assertEquals("[Localized: null]", stack0.toString());
      
      // Undeclared exception!
//      try { 
        reporter0.misplacedArgumentMatcher(stack0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      ArrayDeque<LocalizedMatcher> arrayDeque0 = new ArrayDeque<LocalizedMatcher>();
      assertNotNull(arrayDeque0);
      assertTrue(arrayDeque0.isEmpty());
      assertEquals(0, arrayDeque0.size());
      
      // Undeclared exception!
//      try { 
        reporter0.incorrectUseOfAdditionalMatchers("org.mockito.exceptions.verification.VerificationInOrderFailure", 0, arrayDeque0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
//      try { 
        reporter0.extraInterfacesCannotContainMockedType(class0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.reportNoSubMatchersFound("If you intend to verify invocations on a mock, don't use stubOnly() in its MockSettings.");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      Class<InvocationMatcher> class0 = InvocationMatcher.class;
      // Undeclared exception!
//      try { 
        reporter0.wrongTypeOfArgumentToReturn((InvocationOnMock) null, (String) null, class0, (-3629));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.missingMethodInvocation();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      StringContains stringContains0 = new StringContains("");
      assertNotNull(stringContains0);
      
      Object[] objectArray0 = new Object[3];
      DescribedAs<String> describedAs0 = new DescribedAs<String>("sHWr-aw&PM_GKu", stringContains0, objectArray0);
      assertEquals(3, objectArray0.length);
      assertNotNull(describedAs0);
      
      LocalizedMatcher localizedMatcher0 = new LocalizedMatcher(describedAs0);
      assertEquals(3, objectArray0.length);
      assertNotNull(localizedMatcher0);
      
      // Undeclared exception!
//      try { 
        reporter0.cannotInjectDependency((Field) null, localizedMatcher0, (Exception) null);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.notAMockPassedToVerifyNoMoreInteractions();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      Class<Object> class0 = Object.class;
      // Undeclared exception!
//      try { 
        reporter0.mockedTypeIsInconsistentWithDelegatedInstanceType(class0, (Object) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      LocationImpl locationImpl0 = new LocationImpl();
      assertNotNull(locationImpl0);
      
      // Undeclared exception!
//      try { 
        reporter0.neverWantedButInvoked((DescribedInvocation) null, locationImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      org.mockito.internal.reporting.Discrepancy discrepancy0 = new org.mockito.internal.reporting.Discrepancy((-68), (-166));
      assertNotNull(discrepancy0);
      assertEquals((-166), discrepancy0.getActualCount());
      assertEquals((-68), discrepancy0.getWantedCount());
      
      LocationImpl locationImpl0 = new LocationImpl();
      assertNotNull(locationImpl0);
      
      // Undeclared exception!
//      try { 
        reporter0.tooLittleActualInvocationsInOrder(discrepancy0, (DescribedInvocation) null, locationImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.stubPassedToVerify();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.cannotCallAbstractRealMethod();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      Class<Object> class0 = Object.class;
      // Undeclared exception!
//      try { 
        reporter0.mockedTypeIsInconsistentWithSpiedInstanceType(class0, (Object) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.nullPassedToVerifyNoMoreInteractions();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.wantedButNotInvoked((DescribedInvocation) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      LinkedList<VerificationAwareInvocation> linkedList0 = new LinkedList<VerificationAwareInvocation>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      // Undeclared exception!
//      try { 
        reporter0.noMoreInteractionsWanted((Invocation) null, linkedList0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      SQLException sQLException0 = new SQLException(">zG08$\"iFu", (String) null, (-478));
      assertNotNull(sQLException0);
      assertEquals("java.sql.SQLException: >zG08$\"iFu", sQLException0.toString());
      assertNull(sQLException0.getSQLState());
      assertEquals(">zG08$\"iFu", sQLException0.getMessage());
      assertEquals((-478), sQLException0.getErrorCode());
      
      // Undeclared exception!
//      try { 
        reporter0.invocationListenerThrewException((InvocationListener) null, sQLException0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.misplacedArgumentMatcher((List<LocalizedMatcher>) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException((String) null, "HNR6", 1);
      assertNotNull(sQLNonTransientConnectionException0);
      assertEquals(1, sQLNonTransientConnectionException0.getErrorCode());
      assertEquals("java.sql.SQLNonTransientConnectionException", sQLNonTransientConnectionException0.toString());
      assertNull(sQLNonTransientConnectionException0.getMessage());
      assertEquals("HNR6", sQLNonTransientConnectionException0.getSQLState());
      
      // Undeclared exception!
//      try { 
        reporter0.fieldInitialisationThrewException((Field) null, sQLNonTransientConnectionException0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.noArgumentValueWasCaptured();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      SQLWarning sQLWarning0 = new SQLWarning("BASIC");
      assertNotNull(sQLWarning0);
      assertEquals(0, sQLWarning0.getErrorCode());
      assertEquals("java.sql.SQLWarning: BASIC", sQLWarning0.toString());
      assertNull(sQLWarning0.getSQLState());
      assertEquals("BASIC", sQLWarning0.getMessage());
      
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException("org.mockito.exceptions.verification.SmartNullPointerException", "um[12JNDz/wEBDE4", sQLWarning0);
      assertNotNull(sQLInvalidAuthorizationSpecException0);
      assertEquals(0, sQLWarning0.getErrorCode());
      assertEquals("java.sql.SQLWarning: BASIC", sQLWarning0.toString());
      assertNull(sQLWarning0.getSQLState());
      assertEquals("BASIC", sQLWarning0.getMessage());
      assertEquals("um[12JNDz/wEBDE4", sQLInvalidAuthorizationSpecException0.getSQLState());
      assertEquals("java.sql.SQLInvalidAuthorizationSpecException: org.mockito.exceptions.verification.SmartNullPointerException", sQLInvalidAuthorizationSpecException0.toString());
      assertEquals(0, sQLInvalidAuthorizationSpecException0.getErrorCode());
      assertEquals("org.mockito.exceptions.verification.SmartNullPointerException", sQLInvalidAuthorizationSpecException0.getMessage());
      
      SQLTransientException sQLTransientException0 = new SQLTransientException("less than", "um[12JNDz/wEBDE4", (-1413), sQLInvalidAuthorizationSpecException0);
      assertNotNull(sQLTransientException0);
      assertEquals(0, sQLWarning0.getErrorCode());
      assertEquals("java.sql.SQLWarning: BASIC", sQLWarning0.toString());
      assertNull(sQLWarning0.getSQLState());
      assertEquals("BASIC", sQLWarning0.getMessage());
      assertEquals("um[12JNDz/wEBDE4", sQLInvalidAuthorizationSpecException0.getSQLState());
      assertEquals("java.sql.SQLInvalidAuthorizationSpecException: org.mockito.exceptions.verification.SmartNullPointerException", sQLInvalidAuthorizationSpecException0.toString());
      assertEquals(0, sQLInvalidAuthorizationSpecException0.getErrorCode());
      assertEquals("org.mockito.exceptions.verification.SmartNullPointerException", sQLInvalidAuthorizationSpecException0.getMessage());
      assertEquals((-1413), sQLTransientException0.getErrorCode());
      assertEquals("um[12JNDz/wEBDE4", sQLTransientException0.getSQLState());
      assertEquals("less than", sQLTransientException0.getMessage());
      assertEquals("java.sql.SQLTransientException: less than", sQLTransientException0.toString());
      
      // Undeclared exception!
//      try { 
        reporter0.checkedExceptionInvalid(sQLTransientException0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.nullPassedWhenCreatingInOrder();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.unfinishedStubbing((Location) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.System", e);
//      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.smartNullPointerException("|", (Location) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.System", e);
//      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.mocksHaveToBePassedToVerifyNoMoreInteractions();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      Class<String> class0 = String.class;
      // Undeclared exception!
//      try { 
        reporter0.serializableWontWorkForObjectsThatDontImplementSerializable(class0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
//      try { 
        reporter0.extraInterfacesAcceptsOnlyInterfaces(class0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      StackTraceFilter stackTraceFilter0 = new StackTraceFilter();
      assertNotNull(stackTraceFilter0);
      
      LocationImpl locationImpl0 = new LocationImpl(stackTraceFilter0);
      assertNotNull(locationImpl0);
      
      // Undeclared exception!
//      try { 
        reporter0.argumentsAreDifferent("", "", locationImpl0);
//        fail("Expecting exception: ArgumentsAreDifferent");
      
//      } catch(ArgumentsAreDifferent e) {
//      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.nullPassedToVerify();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      LocalizedMatcher localizedMatcher0 = new LocalizedMatcher((Matcher) null);
      assertNotNull(localizedMatcher0);
      
      // Undeclared exception!
//      try { 
        reporter0.delegatedMethodHasWrongReturnType((Method) null, (Method) null, localizedMatcher0, localizedMatcher0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.wantedAtMostX(1224, (-1075));
//        fail("Expecting exception: MockitoAssertionError");
      
//      } catch(MockitoAssertionError e) {
//      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.notAMockPassedToWhenMethod();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.atMostAndNeverShouldNotBeUsedWithTimeout();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.invalidUseOfMatchers(618, (List<LocalizedMatcher>) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.onlyVoidMethodsCanBeSetToDoNothing();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.incorrectUseOfApi();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.unsupportedCombinationOfAnnotations("", "nql&bSydu$'Dy*");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      Class<Object> class0 = Object.class;
      // Undeclared exception!
//      try { 
        reporter0.notAMockPassedToVerify(class0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.incorrectUseOfAdditionalMatchers("tNwC0>70j0-aS:M:XIz", 527, (Collection<LocalizedMatcher>) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.nullPassedToWhenMethod();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.moreThanOneAnnotationNotAllowed("E4?r`c64b;}gE@H(cW");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.cannotStubVoidMethodWithAReturnValue("^4j+v-)b~+lVae%");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.invocationListenersRequiresAtLeastOneListener();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.wantedButNotInvokedInOrder((DescribedInvocation) null, (DescribedInvocation) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.extraInterfacesRequiresAtLeastOneInterface();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.cannotStubWithNullThrowable();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.defaultAnswerDoesNotAcceptNullParameter();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.spyAndDelegateAreMutuallyExclusive();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      LocationImpl locationImpl0 = new LocationImpl();
      assertNotNull(locationImpl0);
      
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.tooManyActualInvocations(1, (-1144), (DescribedInvocation) null, locationImpl0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.unfinishedVerificationException((Location) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.System", e);
//      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.cannotInitializeForInjectMocksAnnotation("Cannot instantiate @InjectMocks field named '", (Exception) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.tooManyActualInvocationsInOrder((-2813), (-2813), (DescribedInvocation) null, (Location) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.invocationListenerDoesNotAcceptNullParameters();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      Stack<Integer> stack0 = new Stack<Integer>();
      assertNotNull(stack0);
      assertTrue(stack0.empty());
      assertEquals("[]", stack0.toString());
      assertTrue(stack0.isEmpty());
      assertEquals(10, stack0.capacity());
      assertEquals(0, stack0.size());
      
      IsIn<Integer> isIn0 = new IsIn<Integer>(stack0);
      assertNotNull(isIn0);
      assertTrue(stack0.empty());
      assertEquals("[]", stack0.toString());
      assertTrue(stack0.isEmpty());
      assertEquals(10, stack0.capacity());
      assertEquals(0, stack0.size());
      
      LocalizedMatcher localizedMatcher0 = new LocalizedMatcher(isIn0);
      assertNotNull(localizedMatcher0);
      assertTrue(stack0.empty());
      assertEquals("[]", stack0.toString());
      assertTrue(stack0.isEmpty());
      assertEquals(10, stack0.capacity());
      assertEquals(0, stack0.size());
      
      // Undeclared exception!
//      try { 
        reporter0.delegatedMethodDoesNotExistOnDelegate((Method) null, (Object) null, localizedMatcher0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.cannotVerifyToString();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.inOrderRequiresFamiliarMock();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.notAMockPassedWhenCreatingInOrder();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.mocksHaveToBePassedWhenCreatingInOrder();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      SerializableMode serializableMode0 = SerializableMode.BASIC;
      // Undeclared exception!
//      try { 
        reporter0.usingConstructorWithFancySerializable(serializableMode0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      org.mockito.internal.reporting.Discrepancy discrepancy0 = new org.mockito.internal.reporting.Discrepancy(1, 2191);
      assertNotNull(discrepancy0);
      assertEquals(2191, discrepancy0.getActualCount());
      assertEquals(1, discrepancy0.getWantedCount());
      
      // Undeclared exception!
//      try { 
        reporter0.tooLittleActualInvocations(discrepancy0, (DescribedInvocation) null, (Location) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.cannotInitializeForSpyAnnotation("M:<", (Exception) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.mockito.exceptions.Reporter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.invalidArgumentRangeAtIdentityAnswerCreationTime();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.wrongTypeOfReturnValue("#4%", "", "");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      // Undeclared exception!
//      try { 
        reporter0.extraInterfacesDoesNotAcceptNullParameters();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Reporter reporter0 = new Reporter();
      assertNotNull(reporter0);
      
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
//      try { 
        reporter0.cannotMockFinalClass(class0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//      }
  }
}
