/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 22 15:56:04 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.lang.reflect.Array;
import java.sql.Connection;
import java.text.ChoiceFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Stack;
import java.util.TimeZone;
import java.util.Vector;
import javax.swing.Action;
import javax.swing.JInternalFrame;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.border.BevelBorder;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.text.DefaultCaret;
import javax.swing.text.StyledEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.javax.swing.MockDefaultListSelectionModel;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.LookupPaintScale;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.title.PaintScaleLegend;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.pie.PieDataset;
import org.jfree.data.statistics.BoxAndWhiskerItem;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Second;
import org.jfree.data.time.Week;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 8, 10);
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, slidingGanttCategoryDataset0, 3448, 18, false, 3.0, 3.0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 3448, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.setPlot(combinedDomainCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, 10, 10, false, (double) stackedAreaRenderer0.ZERO, 10);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) stackedBarRenderer3D0.ZERO);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultKeyedValues2DDataset0, 10, (-1154), false, 8, (-1194.79), true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(10.0, (-2381.71333018004), true);
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, (-1090), 10);
      stackedBarRenderer3D0.drawItemLabel((Graphics2D) null, plotOrientation0, slidingCategoryDataset0, 1, 10, true, 1.0F, 45.0, false);
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, (Rectangle2D) null, combinedRangeCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'base' argument.
//         //
//         verifyException("org.jfree.chart.util.RectangleInsets", e);
//      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      // Undeclared exception!
//      try { 
        categoryStepRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, (Rectangle2D) null, dateAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'base' argument.
//         //
//         verifyException("org.jfree.chart.util.RectangleInsets", e);
//      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(160, 5, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      GeneralPath generalPath0 = new GeneralPath(statisticalBarRenderer0.DEFAULT_SHAPE);
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      Point2D.Double point2D_Double0 = (Point2D.Double)categoryStepRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D_Float0, dateAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(4.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D_Float0, 0.0F, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("`Zt0S\"", 3.0, 3.0, 0.2);
      Layer layer0 = Layer.BACKGROUND;
      statisticalBarRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      boolean boolean0 = statisticalBarRenderer0.removeAnnotation(categoryPointerAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("f", categoryStepRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 5, 5, (ChartRenderingInfo) null);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      JPopupMenu jPopupMenu0 = new JPopupMenu();
      StyledEditorKit.AlignmentAction styledEditorKit_AlignmentAction0 = new StyledEditorKit.AlignmentAction("f", 484);
      JMenuItem jMenuItem0 = jPopupMenu0.add((Action) styledEditorKit_AlignmentAction0);
      JScrollPane jScrollPane0 = new JScrollPane(jMenuItem0);
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      categoryStepRenderer0.drawOutline(graphics2D0, combinedDomainCategoryPlot0, rectangle0);
      assertEquals(1, combinedDomainCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("]2%w7tl+M>^N?]fN?6", combinedRangeCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      statisticalBarRenderer0.drawBackground(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(88, 18, (double) 18, (double) 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, (-2190.21), "Null 'stroke' argument.");
      ModuloAxis moduloAxis0 = new ModuloAxis("}d8YG", cyclicNumberAxis0.DEFAULT_RANGE);
      Layer layer0 = Layer.FOREGROUND;
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      categoryStepRenderer0.drawAnnotations(graphics2D0, (Rectangle2D) null, categoryAxis3D0, moduloAxis0, layer0, plotRenderingInfo0);
      assertEquals(0.05, moduloAxis0.getLowerMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Vector<CustomCategoryURLGenerator> vector0 = new Vector<CustomCategoryURLGenerator>();
      defaultBoxAndWhiskerCategoryDataset0.add((List) vector0, (Comparable) 0.2, (Comparable) 0.2);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      stackedAreaRenderer0.addEntity(standardEntityCollection0, ganttRenderer0.DEFAULT_SHAPE, defaultBoxAndWhiskerCategoryDataset0, 0, 0, false, 0.0, 0.0);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.hashCode();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 3.0, (double) groupedStackedBarRenderer0.ZERO);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.START;
      categoryTextAnnotation0.setCategoryAnchor(categoryAnchor0);
      Layer layer0 = Layer.BACKGROUND;
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, logAxis0, groupedStackedBarRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      // Undeclared exception!
      jFreeChart0.createBufferedImage(500, 500);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis("k[.XKb]bC(</i/m");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, logAxis0, groupedStackedBarRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("k[.XKb]bC(</i/m", categoryPlot0);
      Stack<BoxAndWhiskerToolTipGenerator> stack0 = new Stack<BoxAndWhiskerToolTipGenerator>();
      defaultBoxAndWhiskerCategoryDataset0.add((List) stack0, (Comparable) 0.5F, (Comparable) true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      jFreeChart0.createBufferedImage(500, 500, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(264.88, 264.88);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("QW/W?ZJ", 8.0, 0.0);
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      assertEquals(0, stackedBarRenderer3D0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, dateAxis0, statisticalBarRenderer0);
      Line2D.Float line2D_Float0 = new Line2D.Float(0.0F, 2.0F, 2437.1404F, 10);
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, defaultKeyedValues2DDataset0, (PlotRenderingInfo) null);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("");
      statisticalBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getURLGenerator(50, 50, true);
      assertSame(categoryURLGenerator0, standardCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalBarRenderer0.getToolTipGenerator(10, 10, true);
      assertSame(categoryToolTipGenerator0, intervalCategoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = scatterRenderer0.getSeriesItemLabelGenerator(10);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LogAxis logAxis0 = new LogAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      logAxis0.setPositiveArrowVisible(true);
      ValueAxis valueAxis0 = statisticalBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertFalse(valueAxis0.isMinorTickMarksVisible());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      ValueAxis valueAxis0 = ganttRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertFalse(valueAxis0.isVerticalTickLabels());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LogAxis logAxis0 = new LogAxis("");
      logAxis0.setLowerBound(3.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      ValueAxis valueAxis0 = statisticalBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertTrue(valueAxis0.isTickLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3.0, 3.0, "8GeRWZ`a&I5TUw");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ValueAxis valueAxis0 = statisticalBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertEquals(1.0E-8, valueAxis0.getAutoRangeMinimumSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Number[][] numberArray0 = new Number[7][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-879.3390174554), 2.0F, "");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, statisticalLineAndShapeRenderer0);
      ValueAxis valueAxis0 = statisticalLineAndShapeRenderer0.getRangeAxis(categoryPlot0, 500);
      assertFalse(valueAxis0.isNegativeArrowVisible());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setPlot(combinedDomainCategoryPlot0);
      WaferMapPlot waferMapPlot0 = new WaferMapPlot();
      combinedDomainCategoryPlot0.setParent(waferMapPlot0);
      CategoryPlot categoryPlot0 = stackedAreaRenderer0.getPlot();
      assertEquals(0.0, categoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setPlot(combinedDomainCategoryPlot0);
      CategoryPlot categoryPlot0 = stackedAreaRenderer0.getPlot();
      assertTrue(categoryPlot0.canSelectByPoint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Vector<CustomCategoryURLGenerator> vector0 = new Vector<CustomCategoryURLGenerator>();
      defaultBoxAndWhiskerCategoryDataset0.add((List) vector0, (Comparable) 0.2, (Comparable) 0.2);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      RectangleEdge rectangleEdge0 = combinedDomainCategoryPlot0.getDomainAxisEdge();
      double double0 = ganttRenderer0.getItemMiddle("", "", defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, rectangle2D0, rectangleEdge0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Vector<CustomCategoryURLGenerator> vector0 = new Vector<CustomCategoryURLGenerator>();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Second second0 = new Second();
      defaultBoxAndWhiskerCategoryDataset0.add((List) vector0, (Comparable) 10, (Comparable) second0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-2118.075F), 10, 10, (-3017.1F));
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      Rectangle2D rectangle2D0 = rectangle2D_Float0.createIntersection(rectangle0);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      double double0 = ganttRenderer0.getItemMiddle(true, 10, defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, rectangle2D0, rectangleEdge0);
      assertEquals(844.62998046875, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Vector<CustomCategoryURLGenerator> vector0 = new Vector<CustomCategoryURLGenerator>();
      defaultBoxAndWhiskerCategoryDataset0.add((List) vector0, (Comparable) 0.2, (Comparable) 0.2);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("ZOOM_RESET_RANGE");
      Line2D.Float line2D_Float0 = new Line2D.Float(1.0F, 10, 2201, 0.0F);
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      double double0 = ganttRenderer0.getItemMiddle(2201.0F, 45.0, defaultBoxAndWhiskerCategoryDataset0, subCategoryAxis0, rectangle2D0, rectangleEdge0);
      assertEquals((-4.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = categoryStepRenderer0.getItemLabelGenerator((-235), 42, true);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      DrawingSupplier drawingSupplier0 = categoryStepRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      lineRenderer3D0.setPlot(combinedRangeCategoryPlot0);
      DrawingSupplier drawingSupplier0 = lineRenderer3D0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      CategoryAxis categoryAxis0 = statisticalBarRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(combinedDomainCategoryPlot0, (CategoryDataset) null);
      assertEquals(0.0F, categoryAxis0.getMinorTickMarkInsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator1 = (BoxAndWhiskerToolTipGenerator)ganttRenderer0.getBaseToolTipGenerator();
      assertEquals("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", boxAndWhiskerToolTipGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      barRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = barRenderer3D0.getBaseItemLabelGenerator();
      assertSame(categoryItemLabelGenerator0, intervalCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      Range range0 = categoryStepRenderer0.findRangeBounds((CategoryDataset) taskSeriesCollection0, false);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      double[][] doubleArray0 = new double[7][5];
      double[] doubleArray1 = new double[3];
      doubleArray1[1] = 3.0;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertNotNull(range0);
      assertEquals(3.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Vector<CustomCategoryURLGenerator> vector0 = new Vector<CustomCategoryURLGenerator>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(0.2, (-71.6930339), (double) ganttRenderer0.ZERO, (double) ganttRenderer0.ZERO, 3.0, 1003.54375, (double) ganttRenderer0.ZERO, 48.88, (List) vector0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) ganttRenderer0.ZERO, (Comparable) 0.2);
      Range range0 = ganttRenderer0.findRangeBounds((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, false);
      assertNotNull(range0);
      assertEquals((-71.6930339), range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Range range0 = lineAndShapeRenderer0.findRangeBounds(defaultStatisticalCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(500, 0.0F);
      double[][] doubleArray0 = new double[2][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = stackedBarRenderer3D0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(0.0, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      double[][] doubleArray0 = new double[1][1];
      double[] doubleArray1 = new double[9];
      doubleArray1[1] = 0.2;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = statisticalBarRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      double[][] doubleArray0 = new double[1][1];
      double[] doubleArray1 = new double[9];
      doubleArray1[4] = (-449.363573);
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = statisticalBarRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(449.363573, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("|");
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.createState(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = statisticalBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, extendedCategoryAxis0, dateAxis0, defaultMultiValueCategoryDataset0, 10, 3417, true, categoryItemRendererState0, rectangle2D_Float0);
      assertNull(rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2.0, 1.5707963267948966);
      StackedBarRenderer3D stackedBarRenderer3D1 = (StackedBarRenderer3D)stackedBarRenderer3D0.clone();
      assertEquals(2.0, stackedBarRenderer3D1.getXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.setSeriesURLGenerator((-1), (CategoryURLGenerator) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      // Undeclared exception!
//      try { 
        stackedBarRenderer0.setSeriesURLGenerator((-1), (CategoryURLGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", numberFormat0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.setSeriesToolTipGenerator((-2413), (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-2550.812422), (double) lineRenderer3D0.ZERO);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.setSeriesToolTipGenerator((-2449), (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.setSeriesItemLabelGenerator((int) (byte) (-24), (CategoryItemLabelGenerator) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.setSeriesItemLabelGenerator((-1048), (CategoryItemLabelGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(10, 12);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      MockDefaultListSelectionModel mockDefaultListSelectionModel0 = new MockDefaultListSelectionModel();
      JTable jTable0 = new JTable(defaultTableModel0, defaultTableColumnModel0, mockDefaultListSelectionModel0);
      Rectangle rectangle0 = jTable0.getCellRect(10, 5, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, rectangle0, combinedDomainCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.hitTest(0.05, 768, (Graphics2D) null, rectangle2D_Float0, categoryPlot0, categoryAxis0, dateAxis0, (CategoryDataset) null, 606, 10, false, categoryItemRendererState0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("xX}k!W}RMx");
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.hitTest(0.05, 0.05, (Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, extendedCategoryAxis0, dateAxis0, taskSeriesCollection0, 500, 10, false, categoryStepRenderer_State0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 500, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      TimeZone timeZone0 = TimeZone.getDefault();
      DateAxis dateAxis0 = new DateAxis("", timeZone0);
      Comparable<BarRenderer>[] comparableArray0 = (Comparable<BarRenderer>[]) Array.newInstance(Comparable.class, 1);
      Number[][] numberArray0 = new Number[0][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(comparableArray0, comparableArray0, numberArray0, numberArray0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.hitTest(0, (-358.793737), (Graphics2D) null, defaultCaret0, (CategoryPlot) null, (CategoryAxis) null, dateAxis0, defaultIntervalCategoryDataset0, 500, 500, false, categoryStepRenderer_State0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      // Undeclared exception!
//      try { 
        levelRenderer0.getRangeAxis((CategoryPlot) null, 10);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, (-4616), (-4616));
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("1eo8f{ll#,$xo,U");
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot((CategoryDataset) null);
      JFreeChart jFreeChart0 = new JFreeChart(multiplePiePlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      RectangleEdge rectangleEdge0 = RectangleEdge.LEFT;
      // Undeclared exception!
//      try { 
        barRenderer3D0.getItemMiddle(stackedBarRenderer0.ZERO, 3.0, slidingGanttCategoryDataset0, subCategoryAxis0, rectangle0, rectangleEdge0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.getDomainAxis((CategoryPlot) null, (CategoryDataset) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.getDomainAxis(combinedRangeCategoryPlot0, taskSeriesCollection0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
//      try { 
        categoryStepRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      double[][] doubleArray0 = new double[8][6];
      double[] doubleArray1 = new double[8];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 6
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      String[] stringArray0 = new String[1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      double[][] doubleArray0 = new double[9][5];
      double[] doubleArray1 = new double[6];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
//      try { 
        lineRenderer3D0.findRangeBounds(defaultIntervalCategoryDataset0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 5
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(64, 1024, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Week week0 = new Week();
      PeriodAxis periodAxis0 = new PeriodAxis("ZOOM_IN_BOTH", week0, week0);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.05, (-2802.475077657), groupedStackedBarRenderer0.DEFAULT_OUTLINE_PAINT);
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, periodAxis0, intervalMarker0, rectangle0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Range(double, double): require lower (1.39240928132E12) <= upper (1.392409281319E12).
//         //
//         verifyException("org.jfree.data.Range", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(0.2, 50.0, 2.0);
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
      Rectangle2D rectangle2D0 = barRenderer3D0.DEFAULT_VALUE_LABEL_FONT.getStringBounds("Gou  =PY18", fontRenderContext0);
      // Undeclared exception!
//      try { 
        barRenderer3D0.drawOutline((Graphics2D) null, (CategoryPlot) null, rectangle2D0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.BarRenderer3D", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, 10, (-1357), (-1166), (-1357), 3466, false, true, false, false, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(420, 300, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.drawItemLabel(graphics2D0, plotOrientation0, (CategoryDataset) null, 10, 759, true, (-1560.594200356), (-979.0), true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'dataset' argument.
//         //
//         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 10, (-1213), 15, (-1166), 10, true, true, false, true, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3466, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.drawItemLabel(graphics2D0, plotOrientation0, defaultKeyedValues2DDataset0, (-2408), 304, false, 10, (-2288.596435067), false);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("9^[)~yV");
      CategoryMarker categoryMarker0 = new CategoryMarker(scatterRenderer0.ZERO);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.drawDomainMarker((Graphics2D) null, combinedRangeCategoryPlot0, subCategoryAxis0, categoryMarker0, rectangle2D_Float0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, dateAxis0, statisticalBarRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) null);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Float0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'key' argument.
//         //
//         verifyException("org.jfree.data.KeyedObjects2D", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryPlot categoryPlot0 = categoryStepRenderer0.getPlot();
      LookupPaintScale lookupPaintScale0 = new LookupPaintScale();
      DateAxis dateAxis0 = new DateAxis();
      PaintScaleLegend paintScaleLegend0 = new PaintScaleLegend(lookupPaintScale0, dateAxis0);
      Rectangle2D rectangle2D0 = paintScaleLegend0.getBounds();
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.drawDomainLine((Graphics2D) null, (CategoryPlot) null, rectangle2D0, 10, categoryPlot0.DEFAULT_GRIDLINE_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      // Undeclared exception!
//      try { 
        categoryStepRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Float0, categoryAxis3D0, dateAxis0, (Layer) null, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      DateAxis dateAxis0 = new DateAxis("");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        groupedStackedBarRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, categoryAxis0, dateAxis0, defaultBoxAndWhiskerCategoryDataset0, 10, 10, true, categoryItemRendererState0, (Rectangle2D) null);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      // Undeclared exception!
//      try { 
        groupedStackedBarRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 10, 10, true, categoryStepRenderer_State0, rectangle0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) boxAndWhiskerRenderer0.ZERO, 0.2, (String) null);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 1);
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      RectangleAnchor rectangleAnchor0 = intervalMarker0.getLabelAnchor();
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, (RectangleInsets) null, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
//      try { 
        categoryStepRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Float0, rectangle2D_Float0, (RectangleInsets) null, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Number[][] numberArray0 = new Number[7][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultIntervalCategoryDataset0, (-1659), (-1659), true, 2.5E11, (-1659));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'row' argument is out of bounds.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.addEntity(standardEntityCollection0, statisticalBarRenderer0.DEFAULT_SHAPE, defaultCategoryDataset0, (-34), (-34), false, 0.0, (double) statisticalBarRenderer0.ZERO);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
//      try { 
        categoryStepRenderer0.addEntity(standardEntityCollection0, lineRenderer3D0.DEFAULT_SHAPE, (CategoryDataset) null, 100, 1, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, barRenderer3D0.DEFAULT_SHAPE, defaultMultiValueCategoryDataset0, 4243, 2, false);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 4243, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, minMaxCategoryRenderer0.DEFAULT_SHAPE, defaultCategoryDataset0, (-1870), (-1870), false);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("^qFb\"<`/J2eR5", scatterRenderer0.ZERO, (-772.266257806162));
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, (Layer) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Number[][] numberArray0 = new Number[3][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis numberAxis0 = new NumberAxis("5E-Tgo");
      CategoryItemRendererState categoryItemRendererState0 = defaultCategoryItemRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, categoryAxis3D0, numberAxis0, defaultIntervalCategoryDataset0, 10, 10, true, categoryItemRendererState0, (Rectangle2D) null);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 10
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      lineRenderer3D0.updateCrosshairValues((CategoryCrosshairState) null, 5, categoryStepRenderer0.ZERO, (double) categoryStepRenderer0.ZERO, 1905, (double) categoryStepRenderer0.ZERO, 3.0, plotOrientation0);
      assertEquals(0, lineRenderer3D0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      assertTrue(scatterRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setSeriesURLGenerator(15, (CategoryURLGenerator) null, true);
      assertEquals(0, minMaxCategoryRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryURLGenerator categoryURLGenerator0 = minMaxCategoryRenderer0.getURLGenerator(0, 0, true);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
      assertFalse(stackedAreaRenderer0.getRenderAsPercentages());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setSeriesToolTipGenerator(2133, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
      assertFalse(statisticalLineAndShapeRenderer0.getUseSeriesOffset());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalBarRenderer0.getToolTipGenerator(10, 10, true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      barRenderer3D0.setSeriesItemLabelGenerator(52, categoryItemLabelGenerator0, true);
      assertEquals(1, barRenderer3D0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.setPlot((CategoryPlot) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'plot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = boxAndWhiskerRenderer0.getSeriesToolTipGenerator(15);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("|");
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.createState(plotRenderingInfo0);
      boolean boolean0 = statisticalBarRenderer0.hitTest(576.01785, 0.0F, (Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, extendedCategoryAxis0, dateAxis0, defaultMultiValueCategoryDataset0, 10, 0, true, categoryItemRendererState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Number[][] numberArray0 = new Number[2][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      BufferedImage bufferedImage0 = new BufferedImage(10, 1, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LogAxis logAxis0 = new LogAxis();
      CategoryItemRendererState categoryItemRendererState0 = boxAndWhiskerRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.hitTest((-3097.89379976755), 1.0E10, graphics2D0, rectangle2D_Double0, combinedRangeCategoryPlot0, (CategoryAxis) null, logAxis0, defaultIntervalCategoryDataset0, (-913), 42, true, categoryItemRendererState0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 42
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, 883.0);
      CategoryItemRendererState categoryItemRendererState0 = defaultCategoryItemRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, (CategoryDataset) null, 52, 85, false, categoryItemRendererState0, rectangle2D_Float0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultCategoryDataset0, 0, 5, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'hotspot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      statisticalBarRenderer0.setPlot(categoryPlot0);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.getLegendItems();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LegendItemCollection legendItemCollection0 = statisticalBarRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis valueAxis0 = statisticalBarRenderer0.getRangeAxis(categoryPlot0, 10);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      ValueAxis valueAxis0 = boxAndWhiskerRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      assertEquals(0.0, valueAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      stackedBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
//      try { 
        stackedBarRenderer0.clone();
//        fail("Expecting exception: CloneNotSupportedException");
      
//      } catch(CloneNotSupportedException e) {
//         //
//         // Base item URL generator not cloneable.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, 10, (-1357), (-1166), (-1357), 3466, false, true, false, false, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(78, 300, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.drawItemLabel(graphics2D0, plotOrientation0, defaultKeyedValues2DDataset0, 1855, (-279), true, 78, 0.0, true);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 1855, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      lineRenderer3D0.setPlot(combinedRangeCategoryPlot0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      lineRenderer3D0.updateCrosshairValues(categoryCrosshairState0, dateAxis0.DEFAULT_ANCHOR_DATE, true, 0.0F, 500, 2.0, 0.05, plotOrientation0);
      assertTrue(lineRenderer3D0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
//      try { 
        lineRenderer3D0.updateCrosshairValues(categoryCrosshairState0, statisticalBarRenderer0.ZERO, 0.05, 0.0, 10, (double) categoryStepRenderer0.ZERO, (-758.1687587229053), (PlotOrientation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'orientation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
//      try { 
        lineRenderer3D0.updateCrosshairValues(categoryCrosshairState0, dateAxis0.DEFAULT_ANCHOR_DATE, true, 0.0F, 500, 2.0, 0.05, plotOrientation0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = levelRenderer1.getLegendItemLabelGenerator();
      assertTrue(levelRenderer1.equals((Object)levelRenderer0));
      
      levelRenderer1.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      boolean boolean0 = levelRenderer0.equals(levelRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      assertTrue(boxAndWhiskerRenderer1.equals((Object)boxAndWhiskerRenderer0));
      
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      boxAndWhiskerRenderer1.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      boolean boolean0 = boxAndWhiskerRenderer0.equals(boxAndWhiskerRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer1 = (StatisticalBarRenderer)statisticalBarRenderer0.clone();
      assertTrue(statisticalBarRenderer1.equals((Object)statisticalBarRenderer0));
      
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      statisticalBarRenderer1.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      boolean boolean0 = statisticalBarRenderer0.equals(statisticalBarRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      boolean boolean0 = statisticalBarRenderer1.equals(statisticalBarRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LegendItem legendItem0 = minMaxCategoryRenderer0.getLegendItem(3, 3);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setPlot(combinedRangeCategoryPlot0);
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.getLegendItem(0, 500);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'dataset' argument.
//         //
//         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D_Float0, rectangle2D_Float0, combinedRangeCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("org.jfree.chart.plot.LocalizationBundle", 3.0, 3.0, 0.2);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RingPlot ringPlot0 = new RingPlot((PieDataset) null);
      JFreeChart jFreeChart0 = new JFreeChart("org.jfree.chart.plot.LocalizationBundle", categoryPointerAnnotation0.DEFAULT_FONT, ringPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D0, ringPlot0.DEFAULT_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
      assertEquals(0.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      Point2D.Double point2D_Double0 = (Point2D.Double)categoryStepRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, (Rectangle2D) null, (Rectangle2D) null, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0, (double) scatterRenderer0.ZERO, statisticalBarRenderer0.DEFAULT_PAINT);
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      Point2D.Double point2D_Double0 = (Point2D.Double)categoryStepRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, defaultCaret0, defaultCaret0, fastScatterPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(8.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("N`BJAY:gXFR3", dateAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 15);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker(2, 2.0);
      intervalMarker0.setLabel("");
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, valueAxis0, intervalMarker0, rectangle2D_Double0);
      assertEquals(1, combinedRangeCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'paint' argument.", dateAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeCategoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(420, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = (NumberAxis)thermometerPlot0.getRangeAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker((-70.0843906993), 2);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis0, intervalMarker0, rectangle2D_Double0);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'paint' argument.", dateAxis0.DEFAULT_TICK_LABEL_FONT, combinedRangeCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(420, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, valueAxis0.DEFAULT_TICK_LABEL_PAINT);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, valueAxis0, intervalMarker0, rectangle2D_Double0);
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("labelXOffset", combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 29, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TimeZone timeZone0 = TimeZone.getTimeZone("I3;G3&SA2'ha");
      DateAxis dateAxis0 = new DateAxis("ii,ciU", timeZone0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultBoxAndWhiskerCategoryDataset0, tableOrder0);
      Paint paint0 = spiderWebPlot0.getLabelPaint();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 646.6623208, thermometerPlot0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_OUTLINE_STROKE, paint0, statisticalBarRenderer0.DEFAULT_STROKE, 0.0F);
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, dateAxis0, intervalMarker0, rectangle2D_Float0);
      assertTrue(combinedDomainCategoryPlot0.isOutlineVisible());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Color color0 = (Color)CategoryPlot.DEFAULT_GRIDLINE_PAINT;
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 1.0F, color0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, dateAxis0, intervalMarker0, defaultCaret0);
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      statisticalBarRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, dateAxis0, (Marker) null, rectangle2D_Float0);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(0.0F);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      valueMarker0.setLabel("");
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, dateAxis0, valueMarker0, rectangle2D_Float0);
      assertEquals(3, statisticalBarRenderer0.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ValueMarker valueMarker0 = new ValueMarker(858.37185909981, dateAxis0.DEFAULT_TICK_MARK_PAINT, statisticalBarRenderer0.DEFAULT_OUTLINE_STROKE);
      statisticalBarRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, dateAxis0, valueMarker0, rectangle2D_Float0);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ValueMarker valueMarker0 = new ValueMarker(10, dateAxis0.DEFAULT_TICK_MARK_PAINT, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      BevelBorder bevelBorder0 = new BevelBorder(19);
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Rectangle rectangle0 = bevelBorder0.getInteriorRectangle((Component) jInternalFrame0, 14, 34, 0, (-213));
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, valueAxis0, valueMarker0, rectangle0);
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      TimeZone timeZone0 = TimeZone.getDefault();
      DateAxis dateAxis0 = new DateAxis("Null 'annotation' argument.", timeZone0);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 2.0, dateAxis0.DEFAULT_TICK_LABEL_PAINT);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.drawRangeMarker((Graphics2D) null, categoryPlot0, dateAxis0, intervalMarker0, defaultCaret0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, dateAxis0, statisticalBarRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0F);
      statisticalBarRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Float0);
      assertTrue(statisticalBarRenderer0.getShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, logAxis0, groupedStackedBarRenderer0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      categoryPlot0.setOrientation(plotOrientation0);
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      // Undeclared exception!
      jFreeChart0.createBufferedImage(500, 500);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle rectangle0 = chartPanel0.getBounds();
      Color color0 = (Color)FastScatterPlot.DEFAULT_GRIDLINE_PAINT;
      Stroke stroke0 = combinedRangeCategoryPlot0.getRangeZeroBaselineStroke();
      statisticalBarRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, dateAxis0, rectangle0, (-288.0), color0, stroke0);
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, dateAxis0, rectangle2D_Float0, 0.0F, dateAxis0.DEFAULT_TICK_LABEL_PAINT, dateAxis0.DEFAULT_TICK_MARK_STROKE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("`:");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      PolarPlot polarPlot0 = new PolarPlot();
      JFreeChart jFreeChart0 = new JFreeChart(polarPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float(0.0F, 1.0F, 1.0F, 1.0F);
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      defaultCategoryItemRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D0, 0.05, numberAxis0.DEFAULT_AXIS_LABEL_PAINT, polarPlot0.DEFAULT_GRIDLINE_STROKE);
      assertFalse(numberAxis0.isVerticalTickLabels());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      LogAxis logAxis0 = new LogAxis("`ZS\"");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      JTableHeader jTableHeader0 = new JTableHeader();
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(193);
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle0, 1051.59964, (Paint) null, statisticalBarRenderer0.DEFAULT_OUTLINE_STROKE);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'paint' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D_Float0, 0.0, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, (Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'stroke' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      double[][] doubleArray0 = new double[8][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      scatterRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      Range range0 = scatterRenderer0.findRangeBounds(jDBCCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      NumberAxis numberAxis0 = new NumberAxis("Daniel Gredler");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, extendedCategoryAxis0, numberAxis0, categoryStepRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("/K#8>T-&}@o0^i1", categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 31);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      categoryStepRenderer0.initialise(graphics2D0, (Rectangle2D) null, categoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      assertEquals(0, categoryStepRenderer0.getRowCount());
      assertEquals(0, categoryStepRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis("*");
      ArrayList<BarRenderer> arrayList0 = new ArrayList<BarRenderer>();
      defaultBoxAndWhiskerCategoryDataset0.add((List) arrayList0, (Comparable) "*", (Comparable) 0.0F);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, logAxis0, groupedStackedBarRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("*", categoryPlot0);
      // Undeclared exception!
      jFreeChart0.createBufferedImage(500, 500);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
//      try { 
        categoryStepRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'generator' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      ganttRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      assertEquals(4.0, ganttRenderer0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalBarRenderer0.ZERO, 0.2, statisticalBarRenderer0.ZERO, 0.2, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      statisticalBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      boolean boolean0 = statisticalBarRenderer0.equals(statisticalBarRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("Us0]#v5o`!$0g^3W3x", 500, 0.0, 0.0F);
      Layer layer0 = Layer.BACKGROUND;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      boolean boolean0 = statisticalBarRenderer1.equals(statisticalBarRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setPlot(combinedDomainCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("Not implemented.");
      stackedAreaRenderer0.setSeriesURLGenerator(10, (CategoryURLGenerator) standardCategoryURLGenerator0, false);
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, 10, 10, false, 1.0F, 1.0F);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("Null 'hotspot' argument.", numberFormat0);
      statisticalLineAndShapeRenderer0.setSeriesToolTipGenerator(120, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("", numberFormat0);
      stackedAreaRenderer0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultKeyedValues2DDataset0, 10, 53, false, (-986.58663851144), 10);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      GanttRenderer ganttRenderer1 = (GanttRenderer)ganttRenderer0.clone();
      assertEquals(4.0, ganttRenderer1.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      barRenderer3D0.setSeriesItemLabelGenerator(500, categoryItemLabelGenerator0, false);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = (StandardCategoryItemLabelGenerator)barRenderer3D0.getItemLabelGenerator(500, 500, true);
      assertEquals("{2}", standardCategoryItemLabelGenerator0.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, (-1090), 10);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(3, 52, 3);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(3, 1.0F, Float.POSITIVE_INFINITY, (-477.0F), 10, (-25.95F));
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      // Undeclared exception!
//      try { 
        scatterRenderer0.initialise(graphics2D0, rectangle2D0, (CategoryPlot) null, slidingCategoryDataset0, (PlotRenderingInfo) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'plot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      groupedStackedBarRenderer0.setSeriesURLGenerator(5, (CategoryURLGenerator) customCategoryURLGenerator0);
      CategoryURLGenerator categoryURLGenerator0 = groupedStackedBarRenderer0.getSeriesURLGenerator(5);
      assertSame(categoryURLGenerator0, customCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = scatterRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = groupedStackedBarRenderer0.getSeriesURLGenerator(5);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = categoryStepRenderer0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        categoryStepRenderer0.createHotSpotShape((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, (CategoryAxis) null, dateAxis0, (CategoryDataset) null, (-2025), 10, false, categoryItemRendererState0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Not implemented.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChoiceFormat choiceFormat0 = new ChoiceFormat("QW/W?ZJ");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("QW/W?ZJ", choiceFormat0);
      categoryStepRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      assertEquals(0, categoryStepRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      int int0 = lineRenderer3D0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      GanttRenderer ganttRenderer1 = (GanttRenderer)ganttRenderer0.clone();
      assertTrue(ganttRenderer1.getShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.drawBackground((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D_Float0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.Plot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.removeAnnotations();
      assertTrue(minMaxCategoryRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      groupedStackedBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = (GroupedStackedBarRenderer)groupedStackedBarRenderer0.clone();
      assertFalse(groupedStackedBarRenderer1.isDrawBarOutline());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalLineAndShapeRenderer0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("ItemLabelGenerator not cloneable.");
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      // Undeclared exception!
//      try { 
        groupedStackedBarRenderer0.getItemMiddle((Comparable) null, (Comparable) null, defaultKeyedValues2DDataset0, categoryAxis0, (Rectangle2D) null, rectangleEdge0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid category index: -1
//         //
//         verifyException("org.jfree.chart.axis.CategoryAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      int int0 = minMaxCategoryRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      int int0 = statisticalLineAndShapeRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = lineRenderer3D0.getLegendItemLabelGenerator();
      stackedBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      StackedBarRenderer stackedBarRenderer1 = (StackedBarRenderer)stackedBarRenderer0.clone();
      assertEquals(0.0, stackedBarRenderer1.getMinimumBarLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = ganttRenderer0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setSeriesItemLabelGenerator(500, (CategoryItemLabelGenerator) null);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
  }
}
