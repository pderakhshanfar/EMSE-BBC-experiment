/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 11:13:09 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.text.ChoiceFormat;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.ColorBlock;
import org.jfree.chart.block.RectangleConstraint;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.DefaultDrawingSupplier;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.XYLine3DRenderer;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.Size2D;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Month;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator(" RW&E&rL?nwH", numberFormat0);
      minMaxCategoryRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.addEntity(standardEntityCollection0, stackedAreaRenderer0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, 2925, (-1), false);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 2925, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis3D0, stackedAreaRenderer0);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, true, 1.0E-8, 10, 500, 1.0F, (-1742.26419), plotOrientation0);
      assertEquals(2, stackedAreaRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle rectangle0 = new Rectangle();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("<R$j@&:");
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      Polygon polygon0 = new Polygon();
      Rectangle rectangle1 = polygon0.getBounds();
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle1, categoryAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(4.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(15, 3.0, 0.2, 10);
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double(0.2, 0.5F, (-3.0), 1.0F);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle2D_Double1, multiplePiePlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals((-2.5), point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(15, 3.0, 0.2, 10);
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double1, rectangle2D_Double0, multiplePiePlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(9.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(15, 3.0, 0.2, 10);
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      String[] stringArray0 = new String[2];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle2D_Double1, symbolAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(0.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float((-553.691F), 5, (-744.0F), 5, (-3535.47F), (-744.0F));
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("<R$j@&:");
      DateAxis dateAxis0 = new DateAxis("vc");
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      JFreeChart jFreeChart0 = new JFreeChart("<R$j@&:", categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(885, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      lineRenderer3D0.drawDomainLine(graphics2D0, categoryPlot0, rectangle2D0, 885, dateAxis0.DEFAULT_AXIS_LINE_PAINT, categoryAxis0.DEFAULT_TICK_MARK_STROKE);
      assertTrue(dateAxis0.isAxisLineVisible());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation(")xCoC", statisticalBarRenderer0.ZERO, (double) statisticalBarRenderer0.ZERO);
      Layer layer0 = Layer.BACKGROUND;
      statisticalBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      boolean boolean0 = statisticalBarRenderer0.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LogAxis logAxis0 = new LogAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      minMaxCategoryRenderer0.setPlot(combinedRangeCategoryPlot0);
      assertEquals(2.0, minMaxCategoryRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 1.0F, (double) 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      minMaxCategoryRenderer0.drawBackground(graphics2D0, categoryPlot0, rectangle2D_Double0);
      assertEquals(1.0F, Plot.DEFAULT_BACKGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("T`^^}A|`vQ");
      Layer layer0 = Layer.BACKGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("T`^^}A|`vQ");
      waterfallBarRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, extendedCategoryAxis0, numberAxis3D0, layer0, plotRenderingInfo0);
      assertTrue(numberAxis3D0.isAutoTickUnitSelection());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[7][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 5.0E11, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      stackedBarRenderer3D0.addEntity(standardEntityCollection0, combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultIntervalCategoryDataset0, 3, 0, true, 4686.136, 0.0);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      double[][] doubleArray0 = new double[1][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      minMaxCategoryRenderer0.addEntity(standardEntityCollection0, rectangle0, defaultIntervalCategoryDataset0, 0, 0, true);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.removeAnnotations();
      assertFalse(stackedBarRenderer3D0.getRenderAsPercentages());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setSeriesURLGenerator(2, (CategoryURLGenerator) null);
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 1.0F, (double) 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      LogAxis logAxis0 = new LogAxis();
      ganttRenderer0.drawRangeLine(graphics2D0, categoryPlot0, logAxis0, rectangle2D_Double0, 0.0, levelRenderer0.DEFAULT_OUTLINE_PAINT, levelRenderer0.DEFAULT_STROKE);
      assertEquals(0.05, logAxis0.getUpperMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float((-553.691F), 5, (-744.0F), 5, (-3535.47F), (-744.0F));
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("<R$j@&:", categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(885, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      statisticalBarRenderer0.drawOutline(graphics2D0, categoryPlot0, rectangle2D0);
      assertFalse(statisticalBarRenderer0.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis3D0, stackedAreaRenderer0);
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Rectangle rectangle0 = new Rectangle();
      lineRenderer3D0.drawDomainLine(graphics2D0, categoryPlot0, rectangle0, 10, fastScatterPlot0.DEFAULT_GRIDLINE_PAINT, stackedAreaRenderer0.DEFAULT_OUTLINE_STROKE);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("2WKK*? [M<k1wM=O:;C", stackedBarRenderer0.DEFAULT_VALUE_LABEL_FONT, ringPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-571.216), 0.4, 0.0, 0.08);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0025, 0.0, "2WKK*? [M<k1wM=O:;C");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      categoryStepRenderer0.initialise(graphics2D0, rectangle2D_Double0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      assertEquals(0, categoryStepRenderer0.getColumnCount());
      assertEquals(0, categoryStepRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Rectangle rectangle0 = new Rectangle();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[7][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JFreeChart jFreeChart0 = new JFreeChart("kF", combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 5, 0, 34, 6, 10, 3, true, false, true, false, true, true);
      chartRenderingInfo0.setRenderingSource(chartPanel0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      lineRenderer3D0.initialise((Graphics2D) null, rectangle0, combinedDomainCategoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
      assertEquals(5, lineRenderer3D0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis3D0, stackedAreaRenderer0);
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(10, 10, 500, 10);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = barRenderer3D0.initialise(graphics2D0, rectangle0, categoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis3D0, stackedAreaRenderer0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      JFreeChart jFreeChart0 = new JFreeChart("#JohO{5", categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1692, 20);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.initialise(graphics2D0, rectangle0, categoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      String[] stringArray0 = new String[9];
      SymbolAxis symbolAxis0 = new SymbolAxis((String) null, stringArray0);
      combinedDomainCategoryPlot0.setRangeAxis((ValueAxis) symbolAxis0);
      SymbolAxis symbolAxis1 = (SymbolAxis)stackedAreaRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(valueAxis0);
      ValueAxis valueAxis1 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 894);
      assertEquals(0.0, valueAxis1.getFixedDimension(), 0.01);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("uv");
      LogAxis logAxis0 = new LogAxis("uv");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, extendedCategoryAxis0, logAxis0, levelRenderer0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(categoryPlot0, 500);
      assertFalse(valueAxis0.isVerticalTickLabels());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("kaE38TNEf`dW(|[~");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1461.97873138747);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, categoryAxis0, cyclicNumberAxis0, statisticalBarRenderer0);
      ValueAxis valueAxis0 = statisticalBarRenderer0.getRangeAxis(categoryPlot0, 10);
      assertTrue(valueAxis0.isAutoRange());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2532.466), 1.0F);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, (CategoryAxis) null, cyclicNumberAxis0, ganttRenderer0);
      ValueAxis valueAxis0 = lineRenderer3D0.getRangeAxis(categoryPlot0, 10);
      assertEquals(2.0F, valueAxis0.getTickMarkOutsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("T`^^}A|`vQ");
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, numberAxis3D0, lineAndShapeRenderer0);
      CategoryPlot categoryPlot1 = lineAndShapeRenderer0.getPlot();
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = statisticalBarRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      assertNotNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      Number[][] numberArray0 = new Number[1][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      RectangleEdge rectangleEdge0 = combinedRangeCategoryPlot0.getDomainAxisEdge(23);
      double double0 = ganttRenderer0.getItemMiddle(0, false, defaultIntervalCategoryDataset0, categoryAxis0, defaultCaret0, rectangleEdge0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedBarRenderer3D0.getItemLabelGenerator(3, 569, false);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DrawingSupplier drawingSupplier0 = minMaxCategoryRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = minMaxCategoryRenderer0.getDomainAxis(categoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("uv");
      LogAxis logAxis0 = new LogAxis("uv");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, extendedCategoryAxis0, logAxis0, levelRenderer0);
      CategoryAxis categoryAxis0 = levelRenderer0.getDomainAxis(categoryPlot0, defaultKeyedValues2DDataset0);
      assertEquals(0.05, categoryAxis0.getUpperMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      int int0 = categoryStepRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedAreaRenderer0.getBaseToolTipGenerator();
      assertSame(categoryToolTipGenerator0, intervalCategoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("WuHV}$aiW:0!");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("", decimalFormat0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator1 = (StandardCategoryItemLabelGenerator)stackedAreaRenderer0.getBaseItemLabelGenerator();
      assertEquals("", standardCategoryItemLabelGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      Range range0 = stackedBarRenderer3D0.findRangeBounds((CategoryDataset) jDBCCategoryDataset0, false);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      double[][] doubleArray0 = new double[2][5];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 1.0;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Range range0 = stackedBarRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertNotNull(range0);
      assertEquals(1.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      double[][] doubleArray0 = new double[2][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Range range0 = stackedBarRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals(0.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.setValue((Number) 3.0, (Comparable) ganttRenderer0.ZERO, (Comparable) 0.2);
      Range range0 = ganttRenderer0.findRangeBounds((CategoryDataset) defaultCategoryDataset0, true);
      assertEquals(3.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Range range0 = minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.addValue((-2212.03787), (Comparable) "HW}*K;I9IWx8\"M", (Comparable) true);
      Range range0 = stackedAreaRenderer0.findRangeBounds(defaultCategoryDataset0);
      assertEquals(2212.03787, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.addValue(0.0, (Comparable) ganttRenderer0.ZERO, (Comparable) ganttRenderer0.ZERO);
      Range range0 = ganttRenderer0.findRangeBounds(defaultCategoryDataset0);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.addValue(0.8236141695113842, (Comparable) ganttRenderer0.ZERO, (Comparable) ganttRenderer0.ZERO);
      Range range0 = ganttRenderer0.findRangeBounds(defaultCategoryDataset0);
      assertEquals(0.8236141695113842, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.addValue((-500.042008), (Comparable) stackedAreaRenderer0.ZERO, (Comparable) stackedAreaRenderer0.ZERO);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Range range0 = ganttRenderer0.findRangeBounds(defaultCategoryDataset0);
      assertEquals((-500.042008), range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LogAxis logAxis0 = new LogAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      double[][] doubleArray0 = new double[5][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryItemRendererState categoryItemRendererState0 = waterfallBarRenderer0.createState((PlotRenderingInfo) null);
      ColorBlock colorBlock0 = new ColorBlock(logAxis0.DEFAULT_TICK_LABEL_PAINT, 0.0, 0.5235987755982988);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(logAxis0.DEFAULT_RANGE, 2.0);
      Size2D size2D0 = colorBlock0.arrange((Graphics2D) null, rectangleConstraint0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      LegendTitle legendTitle0 = jFreeChart0.getLegend();
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicLocation();
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 977.0, 611.37349, rectangleAnchor0);
      Rectangle2D rectangle2D1 = waterfallBarRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, categoryAxis3D0, logAxis0, defaultIntervalCategoryDataset0, 1420, 10, true, categoryItemRendererState0, rectangle2D0);
      assertNull(rectangle2D1);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, "(UoI", "(UoI", 10, 10, 1.0F, 10, plotOrientation0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      // Undeclared exception!
//      try { 
        groupedStackedBarRenderer0.setSeriesURLGenerator((-2488), (CategoryURLGenerator) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.setSeriesToolTipGenerator((-905), (CategoryToolTipGenerator) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.setSeriesToolTipGenerator((-1245), (CategoryToolTipGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      // Undeclared exception!
//      try { 
        ganttRenderer0.setSeriesItemLabelGenerator((-1), (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("", numberFormat0, numberFormat0);
      // Undeclared exception!
//      try { 
        ganttRenderer0.setSeriesItemLabelGenerator((-247), (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.hitTest(9.906130034931817, 0.0F, (Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, (CategoryAxis) null, numberAxis3D0, (CategoryDataset) null, 15, 500, false, categoryStepRenderer_State0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 1.0F, (double) 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.hitTest(0.0, 10, graphics2D0, rectangle2D_Double0, combinedRangeCategoryPlot0, (CategoryAxis) null, numberAxis3D0, defaultBoxAndWhiskerCategoryDataset0, 927, 6, false, categoryItemRendererState0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 6, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 5, (double) 10, (-180.0), chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.hitTest(10, 10, graphics2D0, rectangle2D_Double0, categoryPlot0, (CategoryAxis) null, numberAxis3D0, defaultBoxAndWhiskerCategoryDataset0, (-1764), (-1764), true, categoryItemRendererState0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.getRangeAxis((CategoryPlot) null, 10);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis3D0, stackedAreaRenderer0);
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.getLegendItem(0, 10);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("n>F8/<]*2O726Yu&AD");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis3D0, stackedAreaRenderer0);
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.getLegendItem(15, 10);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'dataset' argument.
//         //
//         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      String[] stringArray0 = new String[2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("ZTJ@");
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("ZTJ@");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge();
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.getItemMiddle(statisticalBarRenderer0.ZERO, 3.0, defaultIntervalCategoryDataset0, categoryAxis3D0, rectangle2D0, rectangleEdge0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid category index: -1
//         //
//         verifyException("org.jfree.chart.axis.CategoryAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
//      try { 
        barRenderer0.getDomainAxis((CategoryPlot) null, defaultCategoryDataset0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.getDomainAxis(combinedRangeCategoryPlot0, defaultStatisticalCategoryDataset0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
//      try { 
        areaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-2505.95544177), (-2505.95544177), true);
      double[][] doubleArray0 = new double[5][3];
      double[] doubleArray1 = new double[5];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 3
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      String[] stringArray0 = new String[9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.findRangeBounds((CategoryDataset) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'dataset' argument.
//         //
//         verifyException("org.jfree.data.general.DatasetUtilities", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Number[][] numberArray0 = new Number[9][6];
      Number[] numberArray1 = new Number[2];
      numberArray0[5] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 2
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DateAxis dateAxis0 = new DateAxis((String) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
//      try { 
        ganttRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, dateAxis0, rectangle0, 0.0, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DecimalFormat decimalFormat0 = new DecimalFormat("WuHV}$aiW:0!");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("WuHV}$aiW:0!", decimalFormat0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(7, 6);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultCategoryDataset0, 680, 0, true, (-1327.15691), 0, false);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 680, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("T|^^xA|`vQ", numberFormat0);
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultCategoryDataset0, (-1257), 3, false, 768, (-2999.391), true);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      Paint paint0 = thermometerPlot0.getMercuryPaint();
      BasicStroke basicStroke0 = (BasicStroke)XYPlot.DEFAULT_CROSSHAIR_STROKE;
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05, paint0, basicStroke0);
      // Undeclared exception!
//      try { 
        layeredBarRenderer0.drawDomainMarker((Graphics2D) null, (CategoryPlot) null, categoryAxis0, categoryMarker0, rectangle0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      // Undeclared exception!
//      try { 
        ganttRenderer0.drawBackground((Graphics2D) null, combinedRangeCategoryPlot0, rectangle0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.Plot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, numberAxis3D0.DEFAULT_TICK_LABEL_PAINT, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("T`^^}A]`JQ");
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.drawAnnotations((Graphics2D) null, (Rectangle2D) null, extendedCategoryAxis0, numberAxis3D0, (Layer) null, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, 2104);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle0, categoryPlot0, (CategoryAxis) null, cyclicNumberAxis0, slidingGanttCategoryDataset0, (-2491), 0, true, (CategoryItemRendererState) null, rectangle0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(15, 3.0, 0.2, 10);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.needle.ArrowNeedle");
      DateAxis dateAxis0 = new DateAxis("org.jfree.chart.needle.ArrowNeedle");
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.createState(plotRenderingInfo0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      // Undeclared exception!
//      try { 
        lineRenderer3D0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, categoryPlot0, categoryAxis0, dateAxis0, taskSeriesCollection0, 12, (-2046), true, categoryItemRendererState0, rectangle2D_Double0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis("<R$j@&:");
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, categoryAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'base' argument.
//         //
//         verifyException("org.jfree.chart.util.RectangleInsets", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, statisticalBarRenderer0.DEFAULT_SHAPE, taskSeriesCollection0, (-1566), 1941, true, 2.0, 1);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
//      try { 
        ganttRenderer0.addEntity(standardEntityCollection0, categoryPlot0.DEFAULT_LEGEND_ITEM_BOX, (CategoryDataset) null, (-1), 5, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.addEntity(standardEntityCollection0, statisticalBarRenderer0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, (-845), 3, true);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("n", 8.0, 0.0);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, (Layer) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
//      try { 
        scatterRenderer0.addAnnotation((CategoryAnnotation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryItemRendererState categoryItemRendererState0 = statisticalLineAndShapeRenderer0.createState(plotRenderingInfo0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultMultiValueCategoryDataset0, 34, 0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      MockDate mockDate0 = new MockDate(0);
      Month month0 = new Month(mockDate0);
      PeriodAxis periodAxis0 = new PeriodAxis((String) null, month0, month0);
      // Undeclared exception!
//      try { 
        lineRenderer3D0.createHotSpotBounds((Graphics2D) null, rectangle0, categoryPlot0, categoryAxis0, periodAxis0, slidingCategoryDataset0, 10, 0, true, categoryItemRendererState0, (Rectangle2D) null);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 34, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryURLGenerator categoryURLGenerator0 = minMaxCategoryRenderer0.getURLGenerator((-953), (-953), false);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      assertTrue(scatterRenderer0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      intervalBarRenderer0.setSeriesToolTipGenerator(5, (CategoryToolTipGenerator) null, true);
      assertFalse(intervalBarRenderer0.isDrawBarOutline());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedAreaRenderer0.getToolTipGenerator((-147), (-147), true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Locale locale0 = Locale.GERMAN;
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols(locale0);
      DecimalFormat decimalFormat0 = new DecimalFormat("", decimalFormatSymbols0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("", decimalFormat0, decimalFormat0);
      stackedAreaRenderer0.setSeriesItemLabelGenerator(3, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      // Undeclared exception!
//      try { 
        stackedBarRenderer0.setPlot((CategoryPlot) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'plot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = minMaxCategoryRenderer0.getSeriesToolTipGenerator((-905));
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryPlot categoryPlot0 = minMaxCategoryRenderer0.getPlot();
      assertNull(categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      double[][] doubleArray0 = new double[8][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0, "");
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        lineRenderer3D0.hitTest(0, 10, (Graphics2D) null, defaultCaret0, combinedDomainCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 1435, 0, true, categoryItemRendererState0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      minMaxCategoryRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.addEntity(standardEntityCollection0, boxAndWhiskerRenderer0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, 0, 10, true);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      minMaxCategoryRenderer0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.addEntity(standardEntityCollection0, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultKeyedValues2DDataset0, 10, 10, false);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[0][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(3.0, 1619);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 10, 10);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1221.7039527475, 0.2, "MfT9$k4?($a93");
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingGanttCategoryDataset0, categoryAxis0, cyclicNumberAxis0, stackedBarRenderer3D0);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, defaultIntervalCategoryDataset0, 1619, 1619, false, (-2410.4), (double) statisticalBarRenderer0.ZERO);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'row' argument is out of bounds.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(3.0, 1605);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 10, 10);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, 0.2, "MfT9$k4?($a93");
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingGanttCategoryDataset0, categoryAxis0, cyclicNumberAxis0, stackedBarRenderer3D0);
      TimeSeriesCollection timeSeriesCollection0 = new TimeSeriesCollection((TimeSeries) null);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      PolarPlot polarPlot0 = new PolarPlot(timeSeriesCollection0, cyclicNumberAxis0, defaultPolarItemRenderer0);
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      categoryPlot0.setOrientation(plotOrientation0);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, taskSeriesCollection0, 10, 400, true, 10, 2.0F);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[0][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(3.0, 1619);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, defaultIntervalCategoryDataset0, 1619, 1619, false, (-2410.4), (double) statisticalBarRenderer0.ZERO);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, (-40), (-5214), true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'hotspot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("HW}*K;I9IWx8\"M");
      numberAxis3D0.setLowerBound(3653.4534);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, extendedCategoryAxis0, numberAxis3D0, stackedAreaRenderer0);
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.getLegendItems();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LegendItemCollection legendItemCollection0 = statisticalBarRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(categoryPlot0, 1018);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = stackedAreaRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      assertEquals(0.0F, valueAxis0.getTickMarkInsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("{2}");
      stackedAreaRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      assertEquals(0, stackedAreaRenderer1.getRowCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      stackedAreaRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      assertTrue(stackedAreaRenderer1.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, true);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      assertTrue(stackedAreaRenderer1.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("WuHV}$aiW:0!");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("", decimalFormat0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      assertTrue(stackedAreaRenderer1.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("Base item URL generator not cloneable.");
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("Martin Hoeller", decimalFormat0);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultCategoryDataset0, 6, 1024, false, (-1.0), 420, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      stackedAreaRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, taskSeriesCollection0, 1015, 212, false, 0.2, 0.0, false);
      assertEquals(2, stackedAreaRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      stackedAreaRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 3.0, 3.0, 3.0, 1233, 0.0, (-219.3), plotOrientation0);
      assertEquals(2, stackedAreaRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.updateCrosshairValues(categoryCrosshairState0, stackedAreaRenderer0.ZERO, "Null 'plot' argument.", 2244.962573157505, 4, 4, 1637.6729240146017, (PlotOrientation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'orientation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", stackedAreaRenderer1.ZERO, 0.0, 4.0);
      assertTrue(stackedAreaRenderer1.equals((Object)stackedAreaRenderer0));
      
      Layer layer0 = Layer.FOREGROUND;
      stackedAreaRenderer1.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      boolean boolean0 = stackedAreaRenderer0.equals(stackedAreaRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(lineRenderer3D0.ZERO, (double) lineRenderer3D0.ZERO, 8.0, 12.0, lineRenderer3D0.DEFAULT_OUTLINE_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      lineRenderer3D0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      LineRenderer3D lineRenderer3D1 = new LineRenderer3D();
      boolean boolean0 = lineRenderer3D0.equals(lineRenderer3D1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      assertTrue(groupedStackedBarRenderer1.equals((Object)groupedStackedBarRenderer0));
      
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      groupedStackedBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      boolean boolean0 = groupedStackedBarRenderer0.equals(groupedStackedBarRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      boolean boolean0 = stackedAreaRenderer1.equals(stackedAreaRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      boolean boolean0 = stackedAreaRenderer1.equals(stackedAreaRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      Object object0 = stackedBarRenderer0.clone();
      boolean boolean0 = stackedBarRenderer0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LegendItem legendItem0 = minMaxCategoryRenderer0.getLegendItem(1824, 0);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D_Double0, rectangle2D_Double0, multiplePiePlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.util.RectangleAnchor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_LEFT;
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'base' argument.
//         //
//         verifyException("org.jfree.chart.util.RectangleInsets", e);
//      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1943, (-1.0), 630.410139291572, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(1943, 5);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, (PlotOrientation) null, rectangle0, rectangle0, multiplePiePlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.util.RectangleAnchor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      BufferedImage bufferedImage0 = new BufferedImage(10, 1651, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.2, 1.0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Rectangle rectangle0 = new Rectangle();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 1.0F);
      lineRenderer3D0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, cyclicNumberAxis0, intervalMarker0, rectangle0);
      assertTrue(cyclicNumberAxis0.isVisible());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis3D0, stackedAreaRenderer0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 10);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Rectangle rectangle0 = new Rectangle();
      lineRenderer3D0.drawRangeMarker(graphics2D0, categoryPlot0, numberAxis3D0, intervalMarker0, rectangle0);
      assertTrue(numberAxis3D0.isAutoRange());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis3D0, stackedAreaRenderer0);
      BufferedImage bufferedImage0 = new BufferedImage(500, 500, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      IntervalMarker intervalMarker0 = new IntervalMarker((-0.23088777988157982), 10);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Rectangle rectangle0 = new Rectangle();
      lineRenderer3D0.drawRangeMarker(graphics2D0, categoryPlot0, numberAxis3D0, intervalMarker0, rectangle0);
      assertEquals(0, rectangle0.x);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis3D0, stackedAreaRenderer0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.2, 10, multiplePiePlot0.DEFAULT_OUTLINE_PAINT);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Rectangle rectangle0 = new Rectangle();
      lineRenderer3D0.drawRangeMarker(graphics2D0, categoryPlot0, numberAxis3D0, intervalMarker0, rectangle0);
      assertTrue(categoryPlot0.canSelectByPoint());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DateAxis dateAxis0 = new DateAxis((String) null);
      IntervalMarker intervalMarker0 = new IntervalMarker(2.0F, 4, dateAxis0.DEFAULT_TICK_MARK_PAINT);
      lineRenderer3D0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, dateAxis0, intervalMarker0, rectangle2D0);
      assertTrue(dateAxis0.isAxisLineVisible());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(250000.0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)chartRenderingInfo0.getChartArea();
      lineRenderer3D0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, cyclicNumberAxis0, (Marker) null, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Paint[] paintArray0 = new Paint[8];
      Stroke[] strokeArray0 = new Stroke[2];
      Shape[] shapeArray0 = new Shape[6];
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier(paintArray0, paintArray0, paintArray0, strokeArray0, strokeArray0, shapeArray0);
      Stroke stroke0 = defaultDrawingSupplier0.getNextOutlineStroke();
      ValueMarker valueMarker0 = new ValueMarker(3.0, groupedStackedBarRenderer0.DEFAULT_OUTLINE_PAINT, groupedStackedBarRenderer0.DEFAULT_OUTLINE_STROKE, groupedStackedBarRenderer0.DEFAULT_PAINT, stroke0, 0.0F);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      PeriodAxis periodAxis0 = new PeriodAxis("");
      waterfallBarRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, periodAxis0, valueMarker0, (Rectangle2D) null);
      assertTrue(waterfallBarRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, numberAxis3D0.DEFAULT_TICK_LABEL_PAINT, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Paint[] paintArray0 = new Paint[9];
      XYLine3DRenderer xYLine3DRenderer0 = new XYLine3DRenderer();
      Stroke[] strokeArray0 = new Stroke[3];
      strokeArray0[0] = minMaxCategoryRenderer0.DEFAULT_OUTLINE_STROKE;
      Shape[] shapeArray0 = new Shape[2];
      DefaultDrawingSupplier defaultDrawingSupplier0 = new DefaultDrawingSupplier(paintArray0, paintArray0, paintArray0, strokeArray0, strokeArray0, shapeArray0);
      Stroke stroke0 = defaultDrawingSupplier0.getNextOutlineStroke();
      ValueMarker valueMarker0 = new ValueMarker(0.0, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, stroke0, paintArray0[2], xYLine3DRenderer0.DEFAULT_OUTLINE_STROKE, 0.0F);
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, valueMarker0, rectangle2D_Double0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis3D0, stackedAreaRenderer0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultKeyedValues2DDataset0);
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 6, 3, 10, 1976, 1379, true, false, false, false, false, true, false);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      stackedAreaRenderer0.drawDomainMarker(graphics2D0, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle0);
      assertEquals(0.0, rectangle0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-890.986471), 2.0, (-1686.5), (-2369.6322));
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ganttRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, dateAxis0, rectangle2D_Double0, (-281.32), categoryPlot0.DEFAULT_GRIDLINE_PAINT, lineRenderer3D0.DEFAULT_OUTLINE_STROKE);
      assertEquals(0.0, dateAxis0.getLabelAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 500, (double) 1.0F, (double) 500, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
//      try { 
        ganttRenderer0.drawRangeLine(graphics2D0, categoryPlot0, logAxis0, rectangle2D_Double0, 0.0, logAxis0.DEFAULT_TICK_MARK_PAINT, (Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Rectangle rectangle0 = new Rectangle();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
//      try { 
        lineRenderer3D0.drawDomainLine((Graphics2D) null, categoryPlot0, rectangle0, (-4131.0), categoryPlot0.DEFAULT_GRIDLINE_PAINT, (Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'stroke' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      RingPlot ringPlot0 = new RingPlot();
      JTable jTable0 = new JTable(0, 10);
      Rectangle rectangle0 = jTable0.getCellRect(0, 10, false);
      Rectangle2D rectangle2D0 = ringPlot0.DEFAULT_INSETS.createOutsetRectangle((Rectangle2D) rectangle0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
//      try { 
        lineRenderer3D0.drawDomainLine((Graphics2D) null, categoryPlot0, rectangle2D0, (-948.0313632832), (Paint) null, categoryPlot0.DEFAULT_GRIDLINE_STROKE);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'paint' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Rectangle rectangle0 = new Rectangle();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("<R$j@&:");
      // Undeclared exception!
//      try { 
        lineRenderer3D0.drawDomainLine((Graphics2D) null, categoryPlot0, rectangle0, 0.0, categoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryAxis0.DEFAULT_TICK_MARK_STROKE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      ganttRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      Range range0 = ganttRenderer0.findRangeBounds((CategoryDataset) defaultCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Range range0 = scatterRenderer0.findRangeBounds((CategoryDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      GridLayout gridLayout0 = new GridLayout(952, 4287, 4287, 952);
      JOptionPane jOptionPane0 = new JOptionPane();
      Dimension dimension0 = gridLayout0.preferredLayoutSize(jOptionPane0);
      Rectangle rectangle0 = new Rectangle(point0, dimension0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(567.9989622, 4.0, false);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, (-1350));
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, slidingGanttCategoryDataset0, plotRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'generator' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(474.8140381468528, (double) statisticalLineAndShapeRenderer0.ZERO);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      stackedBarRenderer3D0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      assertEquals(1, stackedBarRenderer3D0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("org.jfree.data.general.WaferMapDataset");
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
//      try { 
        stackedAreaRenderer0.clone();
//        fail("Expecting exception: CloneNotSupportedException");
      
//      } catch(CloneNotSupportedException e) {
//         //
//         // Base item URL generator not cloneable.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setSeriesURLGenerator(2, (CategoryURLGenerator) null, false);
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      categoryStepRenderer0.setSeriesURLGenerator(1, (CategoryURLGenerator) customCategoryURLGenerator0, true);
      CategoryURLGenerator categoryURLGenerator0 = categoryStepRenderer0.getURLGenerator(1, 1, true);
      assertSame(categoryURLGenerator0, customCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      intervalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, false);
      assertFalse(intervalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      minMaxCategoryRenderer0.setSeriesToolTipGenerator(500, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      assertFalse(minMaxCategoryRenderer0.isDrawLines());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      ChoiceFormat choiceFormat0 = new ChoiceFormat("Null 'stroke' argument.");
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("Null 'hotspot' argument.", choiceFormat0);
      groupedStackedBarRenderer0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      CategoryToolTipGenerator categoryToolTipGenerator0 = groupedStackedBarRenderer0.getToolTipGenerator(10, 10, true);
      assertSame(categoryToolTipGenerator0, standardCategoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      groupedStackedBarRenderer0.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator0, false);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = (StandardCategoryItemLabelGenerator)groupedStackedBarRenderer0.getItemLabelGenerator(10, (-5093), true);
      assertEquals("{2}", standardCategoryItemLabelGenerator0.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(15, 3.0, 0.2, 10);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, (CategoryPlot) null, defaultCategoryDataset0, plotRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'plot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      // Undeclared exception!
//      try { 
        barRenderer0.setSeriesURLGenerator((-287), (CategoryURLGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = waterfallBarRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = barRenderer0.getSeriesURLGenerator(4);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedAreaRenderer0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("T`^^}A|`vQ");
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_PAINT, numberAxis3D0.DEFAULT_TICK_MARK_PAINT);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("T`^^}A|`vQ");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.createHotSpotShape((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, extendedCategoryAxis0, numberAxis3D0, defaultKeyedValues2DDataset0, 0, 0, true, categoryStepRenderer_State0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Not implemented.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ganttRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      assertFalse(ganttRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      int int0 = stackedAreaRenderer0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("WuH#$aiW:0");
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator(" bwMU", decimalFormat0);
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      assertFalse(stackedAreaRenderer1.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = minMaxCategoryRenderer0.getSeriesItemLabelGenerator(3);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = lineRenderer3D0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(15, 3.0, 0.2, 10);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.drawOutline((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Double0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.Plot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.hashCode();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("O9=VEt% kI");
      CategoryPlot categoryPlot0 = new CategoryPlot();
      RectangleEdge rectangleEdge0 = categoryPlot0.getRangeAxisEdge();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.getItemMiddle(0.0, "Null 'plot' argument.", (CategoryDataset) null, categoryAxis3D0, (Rectangle2D) null, rectangleEdge0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.addValue(0.0, (Comparable) ganttRenderer0.ZERO, (Comparable) ganttRenderer0.ZERO);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      LogAxis logAxis0 = new LogAxis((String) null);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, categoryAxis0, logAxis0, ganttRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, ganttRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      jFreeChart0.createBufferedImage(500, 365, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("k?F@1&N)AI{}");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, categoryAxis3D0, numberAxis3D0, lineRenderer3D0);
      DrawingSupplier drawingSupplier0 = lineRenderer3D0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      // Undeclared exception!
//      try { 
        barRenderer3D0.initialise((Graphics2D) null, rectangle0, categoryPlot0, taskSeriesCollection0, (PlotRenderingInfo) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 3.0, 0.0);
      statisticalBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      assertEquals(1.0, statisticalBarRenderer0.getMaximumBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedAreaRenderer0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator(".^8N-l", numberFormat0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setSeriesItemLabelGenerator(339, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      assertEquals(0.0, ganttRenderer0.getMinimumBarLength(), 0.01);
  }
}
