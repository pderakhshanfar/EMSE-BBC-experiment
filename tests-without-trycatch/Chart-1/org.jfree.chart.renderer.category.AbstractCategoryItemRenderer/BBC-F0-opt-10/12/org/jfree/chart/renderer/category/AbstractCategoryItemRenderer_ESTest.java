/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 10:04:27 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.SimpleTimeZone;
import java.util.Stack;
import javax.swing.JInternalFrame;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Week;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      boxAndWhiskerRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, polarPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, (CategoryDataset) null, 3, (-1452), false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'dataset' argument.
//         //
//         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      stackedBarRenderer3D0.updateCrosshairValues(categoryCrosshairState0, true, 0.2, 0.05, 717, (-1.0), (-1965.5086533665), plotOrientation0);
      assertEquals(0, stackedBarRenderer3D0.getColumnCount());
      assertEquals(0, stackedBarRenderer3D0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(jDBCCategoryDataset0, 1436, 1436);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1668.0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, statisticalLineAndShapeRenderer0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setPlot(categoryPlot0);
      // Undeclared exception!
//      try { 
        levelRenderer0.getLegendItem(10, 500);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'dataset' argument.
//         //
//         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      Point2D.Double point2D_Double0 = (Point2D.Double)layeredBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle2D_Double1, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(8.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(0.4, (-3057.47751386), 25.5, 0.0);
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      Rectangle2D rectangle2D1 = spiderWebPlot0.DEFAULT_INSETS.createOutsetRectangle(rectangle2D0, false, false);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      Point2D.Double point2D_Double0 = (Point2D.Double)defaultCategoryItemRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D1, rectangle2D0, spiderWebPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals((-3061.47751386), point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double((-453.39215190923403), 0.0, 2345.54354, 0.0);
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle2D rectangle2D1 = plotRenderingInfo0.getDataArea();
      Point2D.Double point2D_Double0 = (Point2D.Double)defaultCategoryItemRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D1, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals((-8.0), point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      // Undeclared exception!
//      try { 
        scatterRenderer0.drawDomainLine((Graphics2D) null, categoryPlot0, rectangle0, 10, thermometerPlot0.DEFAULT_BACKGROUND_PAINT, defaultCategoryItemRenderer0.DEFAULT_STROKE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(waterfallBarRenderer0.ZERO, (double) waterfallBarRenderer0.ZERO, 0.2, 240.51, waterfallBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, waterfallBarRenderer0.DEFAULT_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      waterfallBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      boolean boolean0 = waterfallBarRenderer0.removeAnnotation(categoryLineAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2636.08151409407, 2020.9736);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, cyclicNumberAxis0, layeredBarRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      jFreeChart0.createBufferedImage(3889, 500, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 4, 4, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle rectangle0 = new Rectangle();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, (ValueAxis) null, defaultCategoryItemRenderer0);
      defaultCategoryItemRenderer0.drawBackground(graphics2D0, categoryPlot0, rectangle0);
      assertTrue(defaultCategoryItemRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Number[][] numberArray0 = new Number[5][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      minMaxCategoryRenderer0.addEntity(standardEntityCollection0, rectangle2D_Double0, defaultIntervalCategoryDataset0, 0, 0, false, 1011.7, 340);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Stack<GroupedStackedBarRenderer> stack0 = new Stack<GroupedStackedBarRenderer>();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      defaultMultiValueCategoryDataset0.add(stack0, 1.0F, false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, (ValueAxis) null, stackedBarRenderer3D0);
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.initialise((Graphics2D) null, defaultCaret0, categoryPlot0, defaultMultiValueCategoryDataset0, (PlotRenderingInfo) null);
      assertEquals(1, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, defaultCategoryDataset0, plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, (ValueAxis) null, stackedBarRenderer3D0);
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.initialise((Graphics2D) null, defaultCaret0, categoryPlot0, defaultMultiValueCategoryDataset0, (PlotRenderingInfo) null);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.0, 2.0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueAxis valueAxis0 = barRenderer3D0.getRangeAxis(combinedDomainCategoryPlot0, 1784);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(8.0, 0.2);
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis3D0, cyclicNumberAxis0, stackedBarRenderer3D0);
      ValueAxis valueAxis0 = stackedBarRenderer3D0.getRangeAxis(categoryPlot0, (-4697));
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      combinedDomainCategoryPlot0.setRangeZeroBaselineVisible(true);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, (-2139.16750452));
      stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      stackedBarRenderer3D0.getPlot();
      assertEquals(0, stackedBarRenderer3D0.getRowCount());
      assertEquals(0, stackedBarRenderer3D0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) statisticalLineAndShapeRenderer0.ZERO);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      categoryStepRenderer0.setPlot(combinedRangeCategoryPlot0);
      CategoryPlot categoryPlot0 = categoryStepRenderer0.getPlot();
      assertFalse(categoryPlot0.isDomainCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      stackedBarRenderer3D0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemToolTipGenerator();
      assertSame(categorySeriesLabelGenerator0, standardCategorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Stack<GroupedStackedBarRenderer> stack0 = new Stack<GroupedStackedBarRenderer>();
      defaultMultiValueCategoryDataset0.add(stack0, 10, 10);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      GeneralPath generalPath0 = new GeneralPath(stackedBarRenderer3D0.DEFAULT_SHAPE);
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      RectangleEdge rectangleEdge0 = combinedDomainCategoryPlot0.getDomainAxisEdge();
      double double0 = stackedBarRenderer3D0.getItemMiddle(1.0F, 10, defaultMultiValueCategoryDataset0, categoryAxis0, rectangle2D0, rectangleEdge0);
      assertEquals((-4.440892098500626E-16), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = (IntervalCategoryItemLabelGenerator)lineRenderer3D0.getItemLabelGenerator(1117, 367, true);
      assertEquals("({0}, {1}) = {3} - {4}", intervalCategoryItemLabelGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Hour hour0 = new Hour();
      PeriodAxis periodAxis0 = new PeriodAxis("", hour0, hour0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(periodAxis0);
      CategoryAxis categoryAxis0 = scatterRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DateAxis dateAxis0 = new DateAxis("T]H'SW=e");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, categoryAxis0, dateAxis0, (CategoryItemRenderer) null);
      CategoryAxis categoryAxis1 = scatterRenderer0.getDomainAxis(categoryPlot0, defaultCategoryDataset0);
      assertEquals(0.05, categoryAxis1.getUpperMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator1 = (StandardCategoryItemLabelGenerator)lineRenderer3D0.getBaseItemLabelGenerator();
      assertEquals("{2}", standardCategoryItemLabelGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = waterfallBarRenderer0.findRangeBounds((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, false);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Number[][] numberArray0 = new Number[1][8];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) 12.0;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Range range0 = lineRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertEquals(12.0, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      double[][] doubleArray0 = new double[1][8];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 8.0;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = lineRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals(8.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.addValue((-157.621710229), (Comparable) 8.0, (Comparable) 12.0);
      Range range0 = lineRenderer3D0.findRangeBounds((CategoryDataset) defaultCategoryDataset0, true);
      assertEquals(0.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Number[][] numberArray0 = new Number[1][8];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) levelRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Range range0 = levelRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Number[][] numberArray0 = new Number[2][2];
      Number[] numberArray1 = new Number[3];
      numberArray1[0] = (Number) 0.2;
      numberArray0[1] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Range range0 = levelRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(0.2, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      double[][] doubleArray0 = new double[5][6];
      double[] doubleArray1 = new double[2];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[5];
      doubleArray2[0] = (-2394.376319);
      doubleArray0[3] = doubleArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = levelRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertNotNull(range0);
      assertEquals(2394.376319, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean0 = defaultCategoryItemRenderer0.equals(boxAndWhiskerRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = stackedAreaRenderer0.createState(plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(10, 0.0, 2000.0, 2233.25176);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("");
      CategoryItemRendererState categoryItemRendererState0 = barRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      barRenderer3D0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, categoryAxis3D0, logarithmicAxis0, (CategoryDataset) null, 1, 1665, true, categoryItemRendererState0, rectangle2D_Double0);
      assertEquals(0, barRenderer3D0.getColumnCount());
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertFalse(scatterRenderer1.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.setSeriesURLGenerator((-71), (CategoryURLGenerator) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      // Undeclared exception!
//      try { 
        layeredBarRenderer0.setSeriesToolTipGenerator((-1), (CategoryToolTipGenerator) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.setSeriesToolTipGenerator((-527), (CategoryToolTipGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      // Undeclared exception!
//      try { 
        ganttRenderer0.setSeriesItemLabelGenerator((-814), (CategoryItemLabelGenerator) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("Key", dateFormat0);
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.setSeriesItemLabelGenerator((-11), (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      PolarPlot polarPlot0 = new PolarPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      AffineTransform affineTransform0 = new AffineTransform(6.0F, 0.0F, 8.0F, 8.0F, (float) 1, (-839.9383F));
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, true);
      Rectangle2D rectangle2D0 = minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT.getStringBounds("", fontRenderContext0);
      Rectangle2D rectangle2D1 = polarPlot0.DEFAULT_INSETS.createInsetRectangle(rectangle2D0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
//      try { 
        scatterRenderer0.initialise((Graphics2D) null, rectangle2D1, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, (CategoryPlot) null, defaultCategoryDataset0, (PlotRenderingInfo) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'plot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState((PlotRenderingInfo) null);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      // Undeclared exception!
//      try { 
        layeredBarRenderer0.hitTest((-2512.94212716457), 3, (Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, categoryAxis3D0, valueAxis0, (CategoryDataset) null, 5110, 1, false, categoryItemRendererState0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.hitTest(0.0, (-445.126264208031), (Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, categoryAxis3D0, valueAxis0, defaultCategoryDataset0, 1, 2, true, categoryItemRendererState0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 2, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Number[][] numberArray0 = new Number[1][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        layeredBarRenderer0.hitTest(0.0, 0.0, (Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, categoryAxis3D0, valueAxis0, defaultIntervalCategoryDataset0, 3, 2, false, categoryStepRenderer_State0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
//      try { 
        scatterRenderer0.hitTest(5.000000000034753E11, (-1), (Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, taskSeriesCollection0, 4, (-4), true, categoryItemRendererState0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(1690.526790015, (-1080.78403));
      // Undeclared exception!
//      try { 
        barRenderer3D0.getRangeAxis((CategoryPlot) null, 0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      PeriodAxis periodAxis0 = new PeriodAxis("({0}, {1}) = {3} - {4}");
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      AxisLocation axisLocation0 = AxisLocation.BOTTOM_OR_RIGHT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(periodAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      RectangleEdge rectangleEdge0 = Plot.resolveRangeAxisLocation(axisLocation0, plotOrientation0);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.getItemMiddle(true, "({0}, {1}) = {2}", defaultCategoryDataset0, (CategoryAxis) null, defaultCaret0, rectangleEdge0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      // Undeclared exception!
//      try { 
        groupedStackedBarRenderer0.getItemMiddle(true, categoryStepRenderer0.ZERO, jDBCCategoryDataset0, categoryAxis0, (Rectangle2D) null, rectangleEdge0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid category index: -1
//         //
//         verifyException("org.jfree.chart.axis.CategoryAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
//      try { 
        ganttRenderer0.getDomainAxis((CategoryPlot) null, defaultMultiValueCategoryDataset0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Darren Jung");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logarithmicAxis0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
//      try { 
        layeredBarRenderer0.getDomainAxis(combinedRangeCategoryPlot0, defaultKeyedValues2DDataset0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      double[][] doubleArray0 = new double[4][3];
      double[] doubleArray1 = new double[8];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
//      try { 
        lineRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 3
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) null, 3, 3);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      // Undeclared exception!
//      try { 
        levelRenderer0.findRangeBounds(slidingCategoryDataset0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.category.SlidingCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      double[][] doubleArray0 = new double[3][3];
      double[] doubleArray1 = new double[4];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
//      try { 
        levelRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 3
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DateAxis dateAxis0 = new DateAxis();
      SegmentedTimeline segmentedTimeline0 = new SegmentedTimeline((-3058L), 0, 0);
      dateAxis0.setTimeline(segmentedTimeline0);
      ValueMarker valueMarker0 = new ValueMarker(0);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, dateAxis0, valueMarker0, defaultCaret0);
//        fail("Expecting exception: ArithmeticException");
      
//      } catch(ArithmeticException e) {
//         //
//         // / by zero
//         //
//         verifyException("org.jfree.chart.axis.SegmentedTimeline", e);
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)PiePlot.DEFAULT_LABEL_OUTLINE_STROKE;
      // Undeclared exception!
//      try { 
        layeredBarRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, rectangle2D_Double0, 1.0E-8, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, basicStroke0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Week week0 = new Week(10, (-2741));
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(500, "0.0E0");
      Locale locale0 = Locale.CANADA_FRENCH;
      PeriodAxis periodAxis0 = new PeriodAxis("/p,", week0, week0, simpleTimeZone0, locale0);
      // Undeclared exception!
//      try { 
        layeredBarRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, periodAxis0, rectangle2D_Double0, 1.0E-8, numberAxis3D0.DEFAULT_AXIS_LINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Range(double, double): require lower (1.39240928132E12) <= upper (1.392409281319E12).
//         //
//         verifyException("org.jfree.data.Range", e);
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double();
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawOutline((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.Plot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Unknown layer.", combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 232);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1565.5), 2, "{2}");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
//      try { 
        lineRenderer3D0.drawItemLabel(graphics2D0, plotOrientation0, (CategoryDataset) null, 10, (-456), true, 0.75, (-432.3648591718), false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'dataset' argument.
//         //
//         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 2507, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, categoryAxis3D0.DEFAULT_TICK_MARK_STROKE);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, true, false, true, true);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      // Undeclared exception!
//      try { 
        layeredBarRenderer0.drawDomainMarker(graphics2D0, combinedDomainCategoryPlot0, categoryAxis3D0, categoryMarker0, rectangle0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      // Undeclared exception!
//      try { 
        scatterRenderer0.drawDomainLine((Graphics2D) null, categoryPlot0, rectangle0, 2, layeredBarRenderer0.DEFAULT_OUTLINE_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, (String) null);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      // Undeclared exception!
//      try { 
        scatterRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, (CategoryPlot) null, categoryAxis3D0, cyclicNumberAxis0, (CategoryDataset) null, 10, (-1250), true, categoryStepRenderer_State0, rectangle2D_Double0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      // Undeclared exception!
//      try { 
        layeredBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, categoryAxis3D0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'base' argument.
//         //
//         verifyException("org.jfree.chart.util.RectangleInsets", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, valueAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'base' argument.
//         //
//         verifyException("org.jfree.chart.util.RectangleInsets", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      PolarPlot polarPlot0 = new PolarPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[1][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.addEntity(standardEntityCollection0, polarPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultIntervalCategoryDataset0, 1250, (-1169), true, 2.5E7, (-1169));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'row' argument is out of bounds.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.addEntity(standardEntityCollection0, combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultCategoryDataset0, (-3972), 15, true, 10, 1.0F);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, stackedAreaRenderer0.DEFAULT_SHAPE, defaultStatisticalCategoryDataset0, 2, 2, false);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 2, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, barRenderer3D0.DEFAULT_SHAPE, defaultStatisticalCategoryDataset0, (-2639), 212, true);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(10, 45.0, 10, 10, stackedBarRenderer3D0.DEFAULT_WALL_PAINT, categoryStepRenderer0.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
//      try { 
        categoryStepRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, (Layer) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.0, 0.2);
      LegendItemCollection legendItemCollection0 = barRenderer3D0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      double[][] doubleArray0 = new double[1][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = lineRenderer3D0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals(0.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation(")*Y?]^.fAdw+7t1", 5, (double) categoryStepRenderer0.ZERO);
      Layer layer0 = Layer.FOREGROUND;
      categoryStepRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      assertTrue(categoryTextAnnotation0.getNotify());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      // Undeclared exception!
//      try { 
        categoryStepRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesURLGenerator(1, (CategoryURLGenerator) null, true);
      assertTrue(scatterRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      CategoryURLGenerator categoryURLGenerator0 = categoryStepRenderer0.getURLGenerator(1, 0, true);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      lineRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = lineRenderer3D0.getToolTipGenerator((-1035), (-1035), true);
      assertSame(categoryToolTipGenerator0, intervalCategoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      DateFormat dateFormat0 = MockDateFormat.getInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("W\"o5dSj@#XK8", dateFormat0);
      barRenderer3D0.setSeriesToolTipGenerator(67, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      assertEquals(0.0, barRenderer3D0.getMinimumBarLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryToolTipGenerator categoryToolTipGenerator0 = lineRenderer3D0.getToolTipGenerator((-1035), (-1035), true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, true);
      assertTrue(stackedAreaRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) null, true);
      assertEquals(4.0, ganttRenderer0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = lineRenderer3D0.getItemLabelGenerator(1117, 367, true);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      // Undeclared exception!
//      try { 
        groupedStackedBarRenderer0.setPlot((CategoryPlot) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'plot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryToolTipGenerator categoryToolTipGenerator0 = lineRenderer3D0.getSeriesToolTipGenerator(2290);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPlot categoryPlot0 = scatterRenderer0.getPlot();
      assertNull(categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, (ValueAxis) null, stackedBarRenderer3D0);
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer3D0.initialise((Graphics2D) null, defaultCaret0, categoryPlot0, defaultMultiValueCategoryDataset0, (PlotRenderingInfo) null);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      boolean boolean0 = layeredBarRenderer0.hitTest(0.05, 0.0, (Graphics2D) null, defaultCaret0, categoryPlot0, categoryAxis0, (ValueAxis) null, defaultMultiValueCategoryDataset0, 3, 10, false, categoryItemRendererState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, (String) null);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("6");
      // Undeclared exception!
//      try { 
        scatterRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, (CategoryPlot) null, extendedCategoryAxis0, cyclicNumberAxis0, taskSeriesCollection0, 10, 12, true, categoryStepRenderer_State0, (Rectangle2D) null);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 12, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, (String) null);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      String[] stringArray0 = new String[2];
      Number[][] numberArray0 = new Number[0][1];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
      // Undeclared exception!
//      try { 
        scatterRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, subCategoryAxis0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 151, 10, false, (CategoryItemRendererState) null, rectangle2D_Double0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 10
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("1E5)5?olXB", "n`l6}2w4E|tNf", "yWR");
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.addEntity(entityCollection0, categoryStepRenderer0.DEFAULT_SHAPE, taskSeriesCollection0, 9, 3098, false, 5, (-1113.55102));
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 9, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0F, 10, false);
      stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.addEntity((EntityCollection) null, (Shape) null, (CategoryDataset) null, 2388, 1849, false, (-1.0), 2.0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, (Shape) null, (CategoryDataset) null, 2075, 10, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'hotspot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.getLegendItems();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-266.0749));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ValueAxis valueAxis0 = scatterRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 43);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      ValueAxis valueAxis0 = statisticalBarRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("B=mv?atLaHGGp#5");
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
//      try { 
        stackedAreaRenderer0.clone();
//        fail("Expecting exception: CloneNotSupportedException");
      
//      } catch(CloneNotSupportedException e) {
//         //
//         // Base item URL generator not cloneable.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, true);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      assertFalse(stackedAreaRenderer1.getRenderAsPercentages());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      lineRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      LineRenderer3D lineRenderer3D1 = (LineRenderer3D)lineRenderer3D0.clone();
      assertTrue(lineRenderer3D1.getDrawOutlines());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      LineRenderer3D lineRenderer3D1 = (LineRenderer3D)lineRenderer3D0.clone();
      assertTrue(lineRenderer3D1.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      Layer layer0 = Layer.BACKGROUND;
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("TJaBQmEX2I", 0.2, 0.0F, 0.0);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      // Undeclared exception!
//      try { 
        scatterRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, subCategoryAxis0, cyclicNumberAxis0, layer0, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.annotations.CategoryTextAnnotation", e);
//      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.2);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Null 'orientation' argument.");
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      Layer layer0 = Layer.FOREGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      scatterRenderer0.drawAnnotations((Graphics2D) null, rectangle0, subCategoryAxis0, valueAxis0, layer0, plotRenderingInfo0);
      assertEquals(0.2, scatterRenderer0.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Unknown layer.", combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(13, 232);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(8.0, 13, "Unknown layer.");
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
//      try { 
        lineRenderer3D0.drawItemLabel(graphics2D0, plotOrientation0, defaultCategoryDataset0, 15, 13, true, 10, 1.0F, false);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 15, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(24L);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) barRenderer3D0.ZERO);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot((float[][]) null, valueAxis0, valueAxis0);
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      statisticalBarRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 0.2, fixedMillisecond0, (-3246.3882490743), 1, (-953.69611), 1805.80581757762, plotOrientation0);
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      // Undeclared exception!
//      try { 
        barRenderer3D0.updateCrosshairValues((CategoryCrosshairState) null, 5, categoryStepRenderer0.ZERO, 5, 5, (-1234.30651), 5, (PlotOrientation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'orientation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0F, 10, false);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.updateCrosshairValues(categoryCrosshairState0, 1.0F, 10, 0.0, 10, 0.0, 10, plotOrientation0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(12.0, 2.0F, 2.0F, 2.0F);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      stackedBarRenderer3D0.getDrawingSupplier();
      assertEquals(0, stackedBarRenderer3D0.getColumnCount());
      assertEquals(0, stackedBarRenderer3D0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(2.0F, 0.05, 0.2, 0.0, stackedBarRenderer3D1.DEFAULT_WALL_PAINT, logAxis0.DEFAULT_AXIS_LINE_STROKE);
      assertTrue(stackedBarRenderer3D1.equals((Object)stackedBarRenderer3D0));
      
      stackedBarRenderer3D1.addAnnotation((CategoryAnnotation) categoryLineAnnotation0);
      boolean boolean0 = stackedBarRenderer3D0.equals(stackedBarRenderer3D1);
      assertFalse(stackedBarRenderer3D1.equals((Object)stackedBarRenderer3D0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      assertTrue(stackedBarRenderer3D1.equals((Object)stackedBarRenderer3D0));
      
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", 12.0, 3.0, 0.2);
      Layer layer0 = Layer.BACKGROUND;
      stackedBarRenderer3D1.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      boolean boolean0 = stackedBarRenderer3D0.equals(stackedBarRenderer3D1);
      assertFalse(stackedBarRenderer3D1.equals((Object)stackedBarRenderer3D0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      stackedBarRenderer3D0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      boolean boolean0 = stackedBarRenderer3D0.equals(stackedBarRenderer3D1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      assertTrue(stackedBarRenderer3D1.equals((Object)stackedBarRenderer3D0));
      
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      stackedBarRenderer3D1.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      boolean boolean0 = stackedBarRenderer3D0.equals(stackedBarRenderer3D1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      assertTrue(stackedBarRenderer3D1.equals((Object)stackedBarRenderer3D0));
      
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      stackedBarRenderer3D1.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      boolean boolean0 = stackedBarRenderer3D0.equals(stackedBarRenderer3D1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      assertTrue(stackedBarRenderer3D1.equals((Object)stackedBarRenderer3D0));
      
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      stackedBarRenderer3D1.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      boolean boolean0 = stackedBarRenderer3D0.equals(stackedBarRenderer3D1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      Locale locale0 = Locale.TAIWAN;
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance(locale0);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("Null 'paint' argument.", numberFormat0);
      stackedBarRenderer3D0.setSeriesToolTipGenerator(672, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      boolean boolean0 = stackedBarRenderer3D0.equals(stackedBarRenderer3D1);
      assertTrue(stackedBarRenderer3D1.equals((Object)stackedBarRenderer3D0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      boolean boolean0 = stackedBarRenderer3D0.equals(stackedBarRenderer3D1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LevelRenderer levelRenderer1 = new LevelRenderer();
      boolean boolean0 = levelRenderer1.equals(levelRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LegendItem legendItem0 = levelRenderer0.getLegendItem((-2127), (-2127));
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(12.0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      Rectangle rectangle0 = new Rectangle();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      // Undeclared exception!
//      try { 
        scatterRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle0, rectangle0, thermometerPlot0.DEFAULT_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.util.RectangleAnchor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double(3.0, 0.2, 3.0, (double) layeredBarRenderer0.ZERO, 10, 10);
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D0, rectangle2D0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.util.RectangleAnchor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(621, 19);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DateAxis dateAxis0 = new DateAxis((String) null);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 474.2159829099559, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, dateAxis0.DEFAULT_AXIS_LINE_STROKE, multiplePiePlot0.DEFAULT_OUTLINE_PAINT, boxAndWhiskerRenderer0.DEFAULT_STROKE, 1.0F);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 84, 2161, 10, 621, 10, false, false, false, true, false, false, false);
      Rectangle rectangle0 = chartPanel0.getVisibleRect();
      boxAndWhiskerRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, dateAxis0, intervalMarker0, rectangle0);
      assertEquals(0, boxAndWhiskerRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DateAxis dateAxis0 = new DateAxis((String) null);
      IntervalMarker intervalMarker0 = new IntervalMarker(0, 1.0F, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      boxAndWhiskerRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, dateAxis0, intervalMarker0, defaultCaret0);
      assertEquals(1, combinedDomainCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Null 'paint' argument.");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.05, 0.0F, numberAxis3D0.DEFAULT_TICK_LABEL_PAINT);
      boxAndWhiskerRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle2D_Double0);
      assertNull(numberAxis3D0.getLabelToolTip());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("ny1#&}POx6=RdbEAXWw");
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F);
      boxAndWhiskerRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, categoryMarker0, rectangle2D_Double0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      ValueMarker valueMarker0 = new ValueMarker(1.0E-8, logAxis0.DEFAULT_TICK_LABEL_PAINT, logAxis0.DEFAULT_AXIS_LINE_STROKE);
      Rectangle rectangle0 = new Rectangle(500, 500, 500, 500);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CompassPlot compassPlot0 = new CompassPlot();
      JFreeChart jFreeChart0 = new JFreeChart(compassPlot0);
      valueMarker0.setLabel("bt+Gm1$Jz*64i8=C.d4");
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      boxAndWhiskerRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, logAxis0, valueMarker0, rectangle0);
      assertTrue(boxAndWhiskerRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      ValueMarker valueMarker0 = new ValueMarker(1.0E-8, logAxis0.DEFAULT_TICK_LABEL_PAINT, logAxis0.DEFAULT_AXIS_LINE_STROKE);
      Rectangle rectangle0 = new Rectangle(500, 500, 500, 500);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CompassPlot compassPlot0 = new CompassPlot();
      JFreeChart jFreeChart0 = new JFreeChart(compassPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      boxAndWhiskerRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, logAxis0, valueMarker0, rectangle0);
      assertFalse(logAxis0.isInverted());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      LogAxis logAxis0 = new LogAxis("");
      ValueMarker valueMarker0 = new ValueMarker((double) boxAndWhiskerRenderer0.ZERO, logAxis0.DEFAULT_TICK_LABEL_PAINT, logAxis0.DEFAULT_TICK_MARK_STROKE);
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, logAxis0, valueMarker0, rectangle0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      LogAxis logAxis0 = new LogAxis("");
      ValueMarker valueMarker0 = new ValueMarker(4.0, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      boxAndWhiskerRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, logAxis0, valueMarker0, rectangle0);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 2);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      IntervalMarker intervalMarker0 = new IntervalMarker((-2431.431234963338), 1.0F, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, numberAxis3D0.DEFAULT_AXIS_LINE_STROKE, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE, 0.0F);
      Rectangle rectangle0 = new Rectangle(1379, 3, 19, 8);
      boxAndWhiskerRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, numberAxis3D0, intervalMarker0, rectangle0);
      assertEquals(15, combinedDomainCategoryPlot0.getBackgroundImageAlignment());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, 0.2);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, layeredBarRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      layeredBarRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Double0);
      assertEquals(0.8, cyclicNumberAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis3D0, rectangle2D_Double0, Double.NEGATIVE_INFINITY, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("({0}, {1}) = {2}", combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 4);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis numberAxis0 = new NumberAxis("({0}, {1}) = {3} - {4}");
      Point point0 = new Point(10, (-182));
      Line2D.Double line2D_Double0 = new Line2D.Double(point0, point0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      // Undeclared exception!
//      try { 
        layeredBarRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, numberAxis0, rectangle0, 0.0, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, (Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      Rectangle rectangle0 = new Rectangle(10, 10);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
//      try { 
        scatterRenderer0.drawDomainLine((Graphics2D) null, (CategoryPlot) null, rectangle0, 12.0, barRenderer3D0.DEFAULT_PAINT, (Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'stroke' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.2);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      // Undeclared exception!
//      try { 
        scatterRenderer0.drawDomainLine((Graphics2D) null, categoryPlot0, rectangle0, 0.0, (Paint) null, valueAxis0.DEFAULT_TICK_MARK_STROKE);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'paint' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("Paa+Emw[n", combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Rectangle rectangle0 = new Rectangle();
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Color color0 = Color.GRAY;
      scatterRenderer0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle0, 818.7287846023361, color0, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      assertFalse(scatterRenderer0.getUseOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds(defaultBoxAndWhiskerCategoryDataset0);
      assertEquals(Double.NaN, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(1.0F, 10);
      // Undeclared exception!
//      try { 
        barRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, 0.2);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, layeredBarRenderer0);
      AffineTransform affineTransform0 = AffineTransform.getShearInstance(0.0F, 0.0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 5, chartRenderingInfo0);
      Rectangle2D rectangle2D0 = affineTransformOp0.getBounds2D(bufferedImage0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      layeredBarRenderer0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
      assertEquals(0.8, cyclicNumberAxis0.getLowerBound(), 0.01);
      assertEquals(1.0, cyclicNumberAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'generator' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("KB*yWMToR9Q99PR");
      stackedBarRenderer3D0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      boolean boolean0 = stackedBarRenderer3D0.equals(stackedBarRenderer3D1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("");
      stackedBarRenderer3D0.setSeriesURLGenerator(1740, (CategoryURLGenerator) standardCategoryURLGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      boolean boolean0 = stackedBarRenderer3D0.equals(stackedBarRenderer3D1);
      assertTrue(stackedBarRenderer3D1.equals((Object)stackedBarRenderer3D0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setSeriesURLGenerator(10, (CategoryURLGenerator) null, false);
      assertFalse(scatterRenderer0.getBaseItemLabelsVisible());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      CategoryToolTipGenerator categoryToolTipGenerator0 = lineRenderer3D0.getBaseToolTipGenerator();
      assertSame(categoryToolTipGenerator0, intervalCategoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      boxAndWhiskerRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      assertEquals(3, boxAndWhiskerRenderer0.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setSeriesItemLabelGenerator(420, (CategoryItemLabelGenerator) null, false);
      assertTrue(ganttRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      scatterRenderer0.drawItemLabel((Graphics2D) null, (PlotOrientation) null, defaultMultiValueCategoryDataset0, (-1670), 3152, false, 1044.76268, (-1.0), false);
      assertEquals(0.2, scatterRenderer0.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
//      try { 
        scatterRenderer0.setSeriesURLGenerator((-1176), (CategoryURLGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedBarRenderer3D0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = layeredBarRenderer0.getSeriesURLGenerator(1);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = lineRenderer3D0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[0][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultIntervalCategoryDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("H D\"?WM@7.<", barRenderer3D0.DEFAULT_VALUE_LABEL_FONT, spiderWebPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(9999, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle rectangle0 = new Rectangle(1247, 10);
      CategoryAxis categoryAxis0 = new CategoryAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis0, numberAxis3D0, barRenderer3D0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        barRenderer3D0.createHotSpotShape(graphics2D0, rectangle0, categoryPlot0, categoryAxis0, numberAxis3D0, defaultIntervalCategoryDataset0, 10, 10, true, categoryItemRendererState0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Not implemented.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("");
      lineRenderer3D0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      LineRenderer3D lineRenderer3D1 = (LineRenderer3D)lineRenderer3D0.clone();
      assertEquals(0, lineRenderer3D1.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = statisticalBarRenderer0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) null);
      assertTrue(stackedAreaRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart(spiderWebPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(0.4, (-3057.47751386), 25.5, 0.0);
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.drawBackground(graphics2D0, (CategoryPlot) null, rectangle2D0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = minMaxCategoryRenderer0.getSeriesItemLabelGenerator(2);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = minMaxCategoryRenderer0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.removeAnnotations();
      assertFalse(layeredBarRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("=D\"J3?", "=D\"J3?", "=D\"J3?");
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      CategoryURLGenerator categoryURLGenerator0 = stackedBarRenderer3D0.getBaseURLGenerator();
      assertSame(categoryURLGenerator0, standardCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryURLGenerator categoryURLGenerator0 = stackedAreaRenderer0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset(0.2);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, thermometerPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, (CategoryDataset) null, 2, 0, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double();
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(8, 8, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      boxAndWhiskerRenderer0.drawOutline(graphics2D0, combinedDomainCategoryPlot0, rectangle2D0);
      assertFalse(boxAndWhiskerRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      DrawingSupplier drawingSupplier0 = layeredBarRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-1253), 920);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Base item URL generator not cloneable.");
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(dimension0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Rectangle2D rectangle2D0 = extendedCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS.createAdjustedRectangle(rectangle0, lengthAdjustmentType0, lengthAdjustmentType0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getDomainAxisEdge(3);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.getItemMiddle(8.0, stackedBarRenderer3D0.ZERO, slidingGanttCategoryDataset0, extendedCategoryAxis0, rectangle2D0, rectangleEdge0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      int int0 = barRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      int int0 = lineRenderer3D0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("{O");
      minMaxCategoryRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = minMaxCategoryRenderer0.getLegendItemURLGenerator();
      assertSame(categorySeriesLabelGenerator0, standardCategorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = areaRenderer0.getLegendItemLabelGenerator();
      areaRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      AreaRenderer areaRenderer1 = (AreaRenderer)areaRenderer0.clone();
      assertEquals(0, areaRenderer1.getRowCount());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Number[][] numberArray0 = new Number[1][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Range range0 = levelRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryToolTipGenerator categoryToolTipGenerator0 = lineRenderer3D0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot((CategoryDataset) null);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      stackedBarRenderer3D0.setSeriesItemLabelGenerator(9, categoryItemLabelGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      boolean boolean0 = stackedBarRenderer3D0.equals(stackedBarRenderer3D1);
      assertTrue(stackedBarRenderer3D1.equals((Object)stackedBarRenderer3D0));
      assertFalse(boolean0);
  }
}
