/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 11:13:34 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.lang.reflect.Array;
import java.sql.Connection;
import java.text.DateFormat;
import java.text.NumberFormat;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.Crosshair;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.TextTitle;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.Size2D;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.pie.DefaultPieDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(24, 0.0F, 24.0F, 1051.574F);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = layeredBarRenderer0.createState(plotRenderingInfo0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      boolean boolean0 = statisticalBarRenderer0.hitTest(2.0E7, 0.0, (Graphics2D) null, rectangle2D_Float0, combinedDomainCategoryPlot0, categoryAxis3D0, (ValueAxis) null, taskSeriesCollection0, 24, 2364, false, categoryItemRendererState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Color color0 = (Color)TextTitle.DEFAULT_TEXT_PAINT;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(color0, color0, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_OUTLINE_PAINT);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      waterfallBarRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultMultiValueCategoryDataset0, 10, (-4491), true, 0.0, 3972.729, false);
      assertFalse(waterfallBarRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 0.2, "Null 'stroke' argument.");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, cyclicNumberAxis0, stackedBarRenderer3D0);
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      stackedBarRenderer3D0.updateCrosshairValues(categoryCrosshairState0, "Null 'stroke' argument.", true, 0.05, 192, 0.0, 0.0, plotOrientation0);
      assertTrue(stackedBarRenderer3D0.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1419.1138937901, 20.0, "Null 'generator' argument.");
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, cyclicNumberAxis0, waterfallBarRenderer0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setPlot(categoryPlot0);
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.getLegendItem((-2791), 500);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'dataset' argument.
//         //
//         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 0.0, 0.0, 0.0);
      Rectangle2D rectangle2D0 = rectangle2D_Double0.createIntersection(rectangle2D_Double0);
      NumberAxis numberAxis0 = new NumberAxis();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle2D0, numberAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(4.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1630);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      JViewport jViewport0 = new JViewport();
      Rectangle rectangle0 = jViewport0.getViewRect();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(statisticalBarRenderer0.DEFAULT_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, categoryPlot0.DEFAULT_OUTLINE_PAINT, minMaxCategoryRenderer0.DEFAULT_PAINT);
      waterfallBarRenderer0.drawDomainLine(graphics2D0, categoryPlot0, rectangle0, 0.2, minMaxCategoryRenderer0.DEFAULT_OUTLINE_PAINT, categoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      assertTrue(minMaxCategoryRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(3.0, 0.2, 0.2, (double) layeredBarRenderer0.ZERO, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.BACKGROUND;
      boxAndWhiskerRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      boolean boolean0 = boxAndWhiskerRenderer0.removeAnnotation(categoryLineAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.removeAnnotations();
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue((Number) 0.2, (Comparable) 0, (Comparable) 0);
      stackedBarRenderer3D0.addEntity(entityCollection0, waterfallBarRenderer0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, 0, 0, false, 1801.59246658, 0.2);
      assertEquals(1, entityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, extendedCategoryAxis0, numberAxis3D0, stackedBarRenderer3D0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(1176.406F, 0.0F, 2.0F, 0.0F);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = boxAndWhiskerRenderer0.initialise(graphics2D0, rectangle2D_Float0, categoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
      assertEquals(1.7999999999999998, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      ganttRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      CategoryURLGenerator categoryURLGenerator0 = ganttRenderer0.getURLGenerator(2958465, 2958465, true);
      assertSame(categoryURLGenerator0, customCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D0.getToolTipGenerator((-20), (-20), true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator1 = (BoxAndWhiskerToolTipGenerator)scatterRenderer0.getToolTipGenerator((-926), (-926), false);
      assertEquals("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", boxAndWhiskerToolTipGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryURLGenerator categoryURLGenerator0 = stackedAreaRenderer0.getSeriesURLGenerator(621);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = minMaxCategoryRenderer0.getSeriesToolTipGenerator(5636);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueAxis valueAxis0 = boxAndWhiskerRenderer0.getRangeAxis(combinedDomainCategoryPlot0, 12);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 52, (-1587));
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.JFreeChart");
      NumberAxis numberAxis0 = new NumberAxis("org.jfree.chart.JFreeChart");
      numberAxis0.resizeRange(781.4563311726591, 0.05);
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingGanttCategoryDataset0, subCategoryAxis0, numberAxis0, waterfallBarRenderer0);
      ValueAxis valueAxis0 = waterfallBarRenderer0.getRangeAxis(categoryPlot0, (-1587));
      assertEquals(2.0F, valueAxis0.getMinorTickMarkOutsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, 0.0, "Null 'minute'argument.");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      CyclicNumberAxis cyclicNumberAxis1 = (CyclicNumberAxis)stackedBarRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, (-4025));
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-728.1251986), (-728.1251986));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ValueAxis valueAxis0 = defaultCategoryItemRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("{2}");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, numberAxis0, statisticalBarRenderer0);
      CategoryPlot categoryPlot1 = statisticalBarRenderer0.getPlot();
      assertTrue(categoryPlot1.isOutlineVisible());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DrawingSupplier drawingSupplier0 = statisticalLineAndShapeRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer");
      DateAxis dateAxis0 = new DateAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, subCategoryAxis0, dateAxis0, waterfallBarRenderer0);
      CategoryAxis categoryAxis0 = minMaxCategoryRenderer0.getDomainAxis(categoryPlot0, defaultStatisticalCategoryDataset0);
      assertEquals(0.05, CategoryAxis.DEFAULT_AXIS_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("JDBCCategoryDataset.executeQuery() : insufficient columns returned from the database.");
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      CategoryURLGenerator categoryURLGenerator0 = statisticalLineAndShapeRenderer0.getBaseURLGenerator();
      assertSame(categoryURLGenerator0, standardCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((double) minMaxCategoryRenderer0.ZERO, (double) minMaxCategoryRenderer0.ZERO);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      barRenderer3D0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      CategoryToolTipGenerator categoryToolTipGenerator0 = barRenderer3D0.getBaseToolTipGenerator();
      assertSame(categoryToolTipGenerator0, boxAndWhiskerToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = minMaxCategoryRenderer0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      Range range0 = lineRenderer3D0.findRangeBounds((CategoryDataset) defaultCategoryDataset0, true);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      defaultKeyedValues2DDataset0.addValue((Number) minMaxCategoryRenderer0.ZERO, (Comparable) 8.0, (Comparable) minMaxCategoryRenderer0.ZERO);
      Range range0 = minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, true);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      Number[][] numberArray0 = new Number[1][4];
      Number[] numberArray1 = new Number[2];
      numberArray1[0] = (Number) 0.2;
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Range range0 = layeredBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertEquals(0.1, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      Range range0 = boxAndWhiskerRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      double[][] doubleArray0 = new double[2][3];
      double[] doubleArray1 = new double[9];
      doubleArray1[2] = (-1715.0702429183);
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = stackedAreaRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(1715.0702429183, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      Range range0 = stackedBarRenderer3D0.findRangeBounds(defaultMultiValueCategoryDataset0);
      assertEquals(1.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      boolean boolean0 = boxAndWhiskerRenderer0.equals(ganttRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.createState(plotRenderingInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("<!UL4EFMm({U");
      DateAxis dateAxis0 = new DateAxis("<!UL4EFMm({U");
      Rectangle2D rectangle2D0 = statisticalBarRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, extendedCategoryAxis0, dateAxis0, defaultMultiValueCategoryDataset0, 13, 304, true, categoryItemRendererState0, (Rectangle2D) null);
      assertNull(rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = (MinMaxCategoryRenderer)minMaxCategoryRenderer0.clone();
      assertTrue(minMaxCategoryRenderer1.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.setSeriesURLGenerator((-1791), (CategoryURLGenerator) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.setSeriesURLGenerator((-326), (CategoryURLGenerator) customCategoryURLGenerator0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.setSeriesToolTipGenerator((-1303), (CategoryToolTipGenerator) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      // Undeclared exception!
//      try { 
        groupedStackedBarRenderer0.setSeriesToolTipGenerator((-2243), (CategoryToolTipGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2.0, 446.63788572983);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.setSeriesItemLabelGenerator((-244), (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      // Undeclared exception!
//      try { 
        layeredBarRenderer0.setSeriesItemLabelGenerator((-1550), (CategoryItemLabelGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      double[][] doubleArray0 = new double[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-255.0), 0.0, true);
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Rectangle2D rectangle2D0 = defaultCaret0.getFrame();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.initialise(graphics2D0, rectangle2D0, categoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      Line2D.Double line2D_Double0 = new Line2D.Double(1072.98, 3.0, 1458.8293, 0.0);
      Rectangle rectangle0 = line2D_Double0.getBounds();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      JFreeChart jFreeChart0 = new JFreeChart("b%ew#qxWv", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 2958465, 10, 11, 10, 8, 854, true, true, true, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
//      try { 
        intervalBarRenderer0.initialise((Graphics2D) null, rectangle0, combinedDomainCategoryPlot0, taskSeriesCollection0, plotRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.data.KeyedObjects");
      LogAxis logAxis0 = new LogAxis();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
//      try { 
        stackedBarRenderer0.hitTest(115, 115, (Graphics2D) null, (Rectangle2D) null, (CategoryPlot) null, subCategoryAxis0, logAxis0, defaultMultiValueCategoryDataset0, 5, 14, false, (CategoryItemRendererState) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Rectangle rectangle0 = new Rectangle((-94), (-94));
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.hitTest(0.0, 0.0, (Graphics2D) null, rectangle0, (CategoryPlot) null, categoryAxis3D0, (ValueAxis) null, defaultStatisticalCategoryDataset0, 726, 1, true, categoryItemRendererState0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 1, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.getRangeAxis((CategoryPlot) null, (-909));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      LegendTitle legendTitle0 = new LegendTitle(boxAndWhiskerRenderer0);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.getItemMiddle(0.2, 0.05, (CategoryDataset) null, (CategoryAxis) null, rectangle2D0, legendTitle0.DEFAULT_POSITION);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      RectangleEdge rectangleEdge0 = RectangleEdge.RIGHT;
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.getItemMiddle(0.0F, 0.0F, jDBCCategoryDataset0, categoryAxis0, rectangle2D_Float0, rectangleEdge0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid category index: -1
//         //
//         verifyException("org.jfree.chart.axis.CategoryAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.getDomainAxis((CategoryPlot) null, (CategoryDataset) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      double[][] doubleArray0 = new double[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.getDomainAxis(combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 1506, 1506);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.findRangeBounds((CategoryDataset) slidingGanttCategoryDataset0, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      double[][] doubleArray0 = new double[8][8];
      double[] doubleArray1 = new double[1];
      doubleArray0[3] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
//      try { 
        layeredBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Comparable<StandardCategoryURLGenerator>[] comparableArray0 = (Comparable<StandardCategoryURLGenerator>[]) Array.newInstance(Comparable.class, 0);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(comparableArray0, comparableArray0, (Number[][]) null, (Number[][]) null);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultIntervalCategoryDataset0, 3244, 4137);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.findRangeBounds(slidingCategoryDataset0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      double[][] doubleArray0 = new double[8][9];
      double[] doubleArray1 = new double[4];
      doubleArray0[4] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 4
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(357.232294543505, 1.0F, "");
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ValueMarker valueMarker0 = new ValueMarker(0.2);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0F, (-3333.46), 802.575, (-1.0));
      // Undeclared exception!
//      try { 
        ganttRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, cyclicNumberAxis0, valueMarker0, rectangle2D_Double0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.drawOutline((Graphics2D) null, combinedRangeCategoryPlot0, (Rectangle2D) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.Plot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("j2[crA}{G'~8Tb");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker(0.05, layeredBarRenderer0.DEFAULT_OUTLINE_PAINT, layeredBarRenderer0.DEFAULT_STROKE);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(10, (-1433.17F), (-1081.9733F), 1.0F, 0.0F, (-517.075F));
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      // Undeclared exception!
//      try { 
        lineAndShapeRenderer0.drawDomainMarker((Graphics2D) null, combinedDomainCategoryPlot0, extendedCategoryAxis0, categoryMarker0, rectangle2D0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) stackedBarRenderer3D0.ZERO, 3.0, 3.0, 0.2);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.drawBackground((Graphics2D) null, categoryPlot0, rectangle2D_Double0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.BarRenderer3D", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      double[][] doubleArray0 = new double[6][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Layer layer0 = Layer.BACKGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'negativePaint' argument.", "Null 'negativePaint' argument.", 2124.61341);
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'negativePaint' argument.", categoryTextAnnotation0.DEFAULT_FONT, piePlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 8);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("QYcZH?hhAU|D5Tv=#z");
      DateAxis dateAxis0 = new DateAxis("Null 'negativePaint' argument.");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, extendedCategoryAxis0, dateAxis0, stackedBarRenderer3D0);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.drawAnnotations(graphics2D0, (Rectangle2D) null, extendedCategoryAxis0, dateAxis0, layer0, plotRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid category index: -1
//         //
//         verifyException("org.jfree.chart.axis.CategoryAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) waterfallBarRenderer0.ZERO);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float();
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, categoryAxis0, cyclicNumberAxis0, taskSeriesCollection0, 10, 500, true, (CategoryItemRendererState) null, rectangle2D0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'annotation' argument.", combinedDomainCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3459, 10, 3.0, (-590.21371), chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(3459, 10);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("ZOOM_RESET_RANGE");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.createHotSpotBounds(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, subCategoryAxis0, (ValueAxis) null, jDBCCategoryDataset0, 200, 10, false, categoryItemRendererState0, rectangle2D0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, 3.0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle rectangle0 = new Rectangle(500, 10, 10, 9);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State((PlotRenderingInfo) null);
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultIntervalCategoryDataset0, 500, 1131, true, categoryStepRenderer_State0, rectangle0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, categoryPlot0.DEFAULT_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'base' argument.
//         //
//         verifyException("org.jfree.chart.util.RectangleInsets", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(357.232294543505, 1.0F, "dDB9qU[/+c5");
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      PlotOrientation plotOrientation0 = combinedDomainCategoryPlot0.getOrientation();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, cyclicNumberAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'base' argument.
//         //
//         verifyException("org.jfree.chart.util.RectangleInsets", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      double[][] doubleArray0 = new double[0][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, layeredBarRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 1924, 1924, false, 3.0, 3.0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'row' argument is out of bounds.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.addEntity((EntityCollection) null, layeredBarRenderer0.DEFAULT_SHAPE, jDBCCategoryDataset0, (-2571), 5, true, 566.5696967231, (-1825.54));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      String[] stringArray0 = new String[3];
      SymbolAxis symbolAxis0 = new SymbolAxis("ctSf&j2t", stringArray0);
      Paint paint0 = symbolAxis0.getGridBandPaint();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(layeredBarRenderer0.DEFAULT_PAINT, minMaxCategoryRenderer0.DEFAULT_OUTLINE_PAINT, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, paint0);
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.addEntity((EntityCollection) null, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, (CategoryDataset) null, 0, 0, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Color color0 = Color.WHITE;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(ganttRenderer0.DEFAULT_PAINT, color0, ganttRenderer0.DEFAULT_OUTLINE_PAINT, ganttRenderer0.DEFAULT_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.addEntity(standardEntityCollection0, ganttRenderer0.DEFAULT_SHAPE, taskSeriesCollection0, (-3072), 1215, false);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(scatterRenderer0.ZERO, 1198.848150884544, scatterRenderer0.ZERO, 1000.0, layeredBarRenderer0.DEFAULT_OUTLINE_PAINT, layeredBarRenderer0.DEFAULT_OUTLINE_STROKE);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, (Layer) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("7kVg|:-:h");
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, (CategoryPlot) null, extendedCategoryAxis0, (ValueAxis) null, jDBCCategoryDataset0, 11, (-1327), true, categoryItemRendererState0, (Rectangle2D) null);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(statisticalBarRenderer0.ZERO, 930.18, 0.2, 930.18, layeredBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_OUTLINE_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      statisticalBarRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      assertFalse(statisticalBarRenderer0.isDrawBarOutline());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      assertTrue(statisticalLineAndShapeRenderer0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      statisticalLineAndShapeRenderer0.setSeriesURLGenerator(220, (CategoryURLGenerator) null, true);
      assertFalse(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryURLGenerator categoryURLGenerator0 = ganttRenderer0.getURLGenerator(2958465, 2958465, true);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      layeredBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, true);
      assertEquals(2.0, layeredBarRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setSeriesToolTipGenerator(1939, (CategoryToolTipGenerator) null, true);
      assertTrue(statisticalLineAndShapeRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = scatterRenderer0.getBaseItemLabelGenerator();
      assertSame(categoryItemLabelGenerator0, intervalCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      stackedBarRenderer0.setSeriesItemLabelGenerator(1900, (CategoryItemLabelGenerator) null, true);
      assertTrue(stackedBarRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = statisticalBarRenderer0.getItemLabelGenerator(10, 10, false);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryPlot categoryPlot0 = levelRenderer0.getPlot();
      assertNull(categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.createState(plotRenderingInfo0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("<!UL4EFMm({U");
      DateAxis dateAxis0 = new DateAxis("<!UL4EFMm({U");
      boolean boolean0 = statisticalBarRenderer0.hitTest(0.0, 1588.7, (Graphics2D) null, (Rectangle2D) null, (CategoryPlot) null, extendedCategoryAxis0, dateAxis0, defaultMultiValueCategoryDataset0, (-299), (-3401), true, categoryItemRendererState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle((-94), 10);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.createState(plotRenderingInfo0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultStatisticalCategoryDataset0, 10, (-658));
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.hitTest(0.2, 10, (Graphics2D) null, rectangle0, (CategoryPlot) null, categoryAxis3D0, (ValueAxis) null, slidingCategoryDataset0, 15, (-658), true, categoryItemRendererState0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      waterfallBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.addEntity(standardEntityCollection0, waterfallBarRenderer0.DEFAULT_SHAPE, defaultMultiValueCategoryDataset0, 333, 3651, true);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 333, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("r&hqC", numberFormat0);
      waterfallBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.addEntity(standardEntityCollection0, statisticalBarRenderer0.DEFAULT_SHAPE, defaultMultiValueCategoryDataset0, 3464, 1213, false);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 3464, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.setPlot(combinedDomainCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, defaultMultiValueCategoryDataset0, 10, 10, false, 0.2, (-1501.070749467));
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      stackedBarRenderer3D0.setPlot(combinedDomainCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, defaultBoxAndWhiskerCategoryDataset0, 3, 10, true, 10, (-5101.091653842906));
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 3, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, (Shape) null, defaultMultiValueCategoryDataset0, 10, 10, false, 0.2, (-1501.070749467));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultMultiValueCategoryDataset0, (-1030), (-1030), true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'hotspot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      stackedBarRenderer3D0.setPlot(combinedDomainCategoryPlot0);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.getLegendItems();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LegendItemCollection legendItemCollection0 = statisticalBarRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ValueAxis valueAxis0 = ganttRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      assertEquals(2.0F, valueAxis0.getMinorTickMarkOutsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      scatterRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertTrue(scatterRenderer1.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("({0}, {1}) = {3} - {4}");
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
//      try { 
        scatterRenderer0.clone();
//        fail("Expecting exception: CloneNotSupportedException");
      
//      } catch(CloneNotSupportedException e) {
//         //
//         // Base item URL generator not cloneable.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertEquals(3, scatterRenderer1.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'negativePaint' argument.", "Null 'negativePaint' argument.", 2124.61341);
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      PiePlot piePlot0 = new PiePlot(defaultPieDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("Null 'negativePaint' argument.", categoryTextAnnotation0.DEFAULT_FONT, piePlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 8);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("QYcZH?hhAU|D5Tv=#z");
      DateAxis dateAxis0 = new DateAxis("Null 'negativePaint' argument.");
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.drawAnnotations(graphics2D0, (Rectangle2D) null, extendedCategoryAxis0, dateAxis0, layer0, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.annotations.CategoryTextAnnotation", e);
//      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, extendedCategoryAxis0, numberAxis3D0, waterfallBarRenderer0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      // Undeclared exception!
      jFreeChart0.createBufferedImage(1352, 75, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, 0.0, "Null 'minute'argument.");
      Layer layer0 = Layer.BACKGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      stackedBarRenderer3D0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, categoryAxis3D0, cyclicNumberAxis0, layer0, plotRenderingInfo0);
      assertEquals(0.0F, Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH, 0.01F);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      LogAxis logAxis0 = new LogAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, extendedCategoryAxis0, logAxis0, stackedBarRenderer3D0);
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      stackedBarRenderer3D0.updateCrosshairValues(categoryCrosshairState0, 0.05, 10, 2.0F, 7, 500, 2.0F, plotOrientation0);
      assertEquals(0.2, stackedBarRenderer3D0.getItemMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.updateCrosshairValues((CategoryCrosshairState) null, 0.0F, true, 10, 75, (-2.147483648E9), (-2.147483648E9), plotOrientation0);
      assertEquals(1.0, stackedBarRenderer3D0.getMaximumBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis(" Hh=ui");
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(categoryAxis0.DEFAULT_AXIS_LABEL_PAINT, categoryAxis0.DEFAULT_TICK_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, categoryAxis0.DEFAULT_TICK_LABEL_PAINT);
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.updateCrosshairValues(categoryCrosshairState0, statisticalBarRenderer0.ZERO, 3.0, 0.2, 3459, 2.0F, 0.0, (PlotOrientation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'orientation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      PlotOrientation plotOrientation0 = combinedRangeCategoryPlot0.getOrientation();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.updateCrosshairValues(categoryCrosshairState0, 0.05, 10, 2.0F, 7, 500, 2.0F, plotOrientation0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, (CategoryAxis) null, (ValueAxis) null, ganttRenderer0);
      DrawingSupplier drawingSupplier0 = ganttRenderer0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(false);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("4f", stackedAreaRenderer1.ZERO, (double) stackedAreaRenderer0.ZERO, 3321.541);
      assertTrue(stackedAreaRenderer1.equals((Object)stackedAreaRenderer0));
      
      stackedAreaRenderer1.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      boolean boolean0 = stackedAreaRenderer0.equals(stackedAreaRenderer1);
      assertFalse(stackedAreaRenderer1.equals((Object)stackedAreaRenderer0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      stackedAreaRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(false);
      boolean boolean0 = stackedAreaRenderer0.equals(stackedAreaRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(false);
      boolean boolean0 = stackedAreaRenderer0.equals(stackedAreaRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("v*m}=!/?w#2K$P", dateFormat0);
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(false);
      boolean boolean0 = stackedAreaRenderer0.equals(stackedAreaRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Object object0 = scatterRenderer0.clone();
      boolean boolean0 = scatterRenderer0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      RectangleInsets rectangleInsets0 = RectangleInsets.ZERO_INSETS;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D0, rectangle2D0, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.util.RectangleAnchor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-2269.83), (-3532.791438885008), 8.0, 12.0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, rectangle2D_Double0, extendedCategoryAxis0.DEFAULT_TICK_LABEL_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
      assertEquals((-3522.791438885008), point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      LabelBlock labelBlock0 = new LabelBlock("");
      RectangleAnchor rectangleAnchor0 = labelBlock0.getTextAnchor();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, (Rectangle2D) null, (Rectangle2D) null, categoryAxis3D0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.util.RectangleAnchor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) ganttRenderer0.ZERO, 0.0, 2550.57073, 3.0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("/VlS;V70k1%");
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Ellipse2D.Float ellipse2D_Float0 = new Ellipse2D.Float();
      Rectangle2D rectangle2D0 = ellipse2D_Float0.getBounds2D();
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle2D0, subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
      assertEquals(3.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      IntervalMarker intervalMarker0 = new IntervalMarker(0, 3);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(89.7F, 3, 1435.353F, 2206.16F);
      NumberAxis numberAxis0 = new NumberAxis();
      stackedBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis0, intervalMarker0, rectangle2D_Float0);
      assertEquals(0.5F, combinedRangeCategoryPlot0.getBackgroundImageAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0F, 1.0F);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 2, 1.0F, 5002.636F);
      stackedBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, valueAxis0, intervalMarker0, rectangle2D_Float0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart("^vzZEIHvl", spiderWebPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10011, 10, (double) 1.0F, (-2002.42529679146), (ChartRenderingInfo) null);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.0, false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1120.0), 1.0F, numberAxis0.DEFAULT_AXIS_LINE_PAINT);
      stackedBarRenderer3D0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis0, intervalMarker0, defaultCaret0);
      assertEquals(0.0, stackedBarRenderer3D0.getBase(), 0.01);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, (double) waterfallBarRenderer0.ZERO);
      IntervalMarker intervalMarker0 = new IntervalMarker(2, 10, ganttRenderer0.DEFAULT_OUTLINE_PAINT);
      ganttRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, cyclicNumberAxis0, intervalMarker0, rectangle2D_Float0);
      assertFalse(cyclicNumberAxis0.isInverted());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      NumberAxis numberAxis0 = new NumberAxis();
      GeneralPath generalPath0 = new GeneralPath(combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX);
      Rectangle2D rectangle2D0 = generalPath0.getBounds2D();
      ganttRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, numberAxis0, (Marker) null, rectangle2D0);
      assertEquals(1, combinedDomainCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("!co87ly", combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      valueMarker0.setLabel("!co87ly");
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0F, 1.0F, 2.0F, 0.05);
      groupedStackedBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, numberAxis3D0, valueMarker0, rectangle2D_Double0);
      assertFalse(combinedDomainCategoryPlot0.isRangeMinorGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 10.0F, 0.1F, 0.1F);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      ValueMarker valueMarker0 = new ValueMarker(0.0, groupedStackedBarRenderer0.DEFAULT_OUTLINE_PAINT, groupedStackedBarRenderer0.DEFAULT_OUTLINE_STROKE, groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE, 1.0F);
      JFreeChart jFreeChart0 = new JFreeChart("=?VsNYlQL7zWJvf", combinedDomainCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      LogAxis logAxis0 = new LogAxis();
      groupedStackedBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, valueMarker0, rectangle2D_Float0);
      assertEquals(0.0F, logAxis0.getMinorTickMarkInsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(8.0, 0.0, "");
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ValueMarker valueMarker0 = new ValueMarker(4.0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(4.0, 802.575, 500, (-1181.0));
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      ganttRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, cyclicNumberAxis0, valueMarker0, rectangle2D_Double0);
      assertEquals(802.575, rectangle2D_Double0.getMinY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ValueMarker valueMarker0 = new ValueMarker(1.0E-8, numberAxis3D0.DEFAULT_AXIS_LABEL_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart("Z02z%e;DYA5+>", piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(273, 40);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      FontRenderContext fontRenderContext0 = new FontRenderContext((AffineTransform) null, true, false);
      Rectangle2D rectangle2D0 = jFreeChart0.DEFAULT_TITLE_FONT.getStringBounds("Z02z%e;DYA5+>", fontRenderContext0);
      groupedStackedBarRenderer0.drawRangeMarker(graphics2D0, categoryPlot0, numberAxis3D0, valueMarker0, rectangle2D0);
      assertEquals(1, categoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker((-180.0), 3);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(89.7F, 3, 1435.3527F, 2206.16F);
      stackedBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, valueAxis0, intervalMarker0, rectangle2D_Float0);
      assertEquals(1525.0526580810547, rectangle2D_Float0.getMaxX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0, 0.2);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, (CategoryAxis) null, cyclicNumberAxis0, statisticalLineAndShapeRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, cyclicNumberAxis0.DEFAULT_TICK_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE);
      statisticalLineAndShapeRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, defaultCaret0);
      assertEquals(1.05, cyclicNumberAxis0.getPeriod(), 0.01);
      assertEquals(0.0, cyclicNumberAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.2);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      combinedRangeCategoryPlot0.setOrientation(plotOrientation0);
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, cyclicNumberAxis0, defaultCaret0, 0, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, polarPlot0.DEFAULT_OUTLINE_STROKE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((double) levelRenderer0.ZERO, 0.0, 0.05, 0.0F);
      waterfallBarRenderer0.drawRangeLine((Graphics2D) null, (CategoryPlot) null, numberAxis0, rectangle2D_Double0, 4.0, numberAxis0.DEFAULT_TICK_LABEL_PAINT, numberAxis0.DEFAULT_TICK_MARK_STROKE);
      assertTrue(waterfallBarRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle0, 0, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(statisticalBarRenderer0.DEFAULT_PAINT, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT);
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis3D0);
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, (Rectangle2D) null, 0.0F, numberAxis3D0.DEFAULT_TICK_LABEL_PAINT, (Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'stroke' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 12.0, "");
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(categoryAxis3D0.DEFAULT_AXIS_LINE_PAINT, categoryAxis3D0.DEFAULT_AXIS_LABEL_PAINT, categoryAxis3D0.DEFAULT_AXIS_LINE_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      Stroke stroke0 = combinedRangeCategoryPlot0.getDomainCrosshairStroke();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      // Undeclared exception!
//      try { 
        waterfallBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Double0, 0.0, (Paint) null, stroke0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'paint' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 2, 1.0F, 5002.636F);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.drawDomainLine(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0, 1.0F, jFreeChart0.DEFAULT_BACKGROUND_PAINT, minMaxCategoryRenderer0.DEFAULT_OUTLINE_STROKE);
      assertEquals(11.0, rectangle2D_Float0.getMaxX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)AbstractRenderer.DEFAULT_SHAPE;
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
      assertEquals(0, statisticalBarRenderer0.getColumnCount());
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Size2D size2D0 = new Size2D();
      Crosshair crosshair0 = new Crosshair();
      RectangleAnchor rectangleAnchor0 = crosshair0.getLabelAnchor();
      Rectangle2D rectangle2D0 = RectangleAnchor.createRectangle(size2D0, 0.0, 0.0, rectangleAnchor0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'generator' argument.", combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1473, 1, (-1940.3065380397), (-1.0), (ChartRenderingInfo) null);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-1.0F), (-1.0F), 1.0F, 0.5F);
      CategoryItemRendererState categoryItemRendererState0 = layeredBarRenderer0.initialise(graphics2D0, rectangle2D_Float0, combinedRangeCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      assertEquals(0, layeredBarRenderer0.getColumnCount());
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      double[][] doubleArray0 = new double[7][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      statisticalLineAndShapeRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0, (PlotRenderingInfo) null);
      assertEquals(7, statisticalLineAndShapeRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
//      try { 
        scatterRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'generator' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = scatterRenderer0.getLegendItemLabelGenerator();
      scatterRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      assertTrue(scatterRenderer0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("http://www.jfree.org/jfreechart/index.html", stackedAreaRenderer0.ZERO, (-2981.951883978688));
      Layer layer0 = Layer.BACKGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(false);
      boolean boolean0 = stackedAreaRenderer0.equals(stackedAreaRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      // Undeclared exception!
//      try { 
        ganttRenderer0.addAnnotation((CategoryAnnotation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setSeriesURLGenerator(212, (CategoryURLGenerator) null, false);
      assertFalse(minMaxCategoryRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(false);
      boolean boolean0 = stackedAreaRenderer0.equals(stackedAreaRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setSeriesToolTipGenerator(1342, (CategoryToolTipGenerator) null, false);
      assertFalse(statisticalLineAndShapeRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      NumberFormat numberFormat0 = mockSimpleDateFormat0.getNumberFormat();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("=JlP,V#'YDc3yS65", numberFormat0, numberFormat0);
      scatterRenderer0.setSeriesItemLabelGenerator(12, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      assertEquals(1, scatterRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
//      try { 
        scatterRenderer0.setPlot((CategoryPlot) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'plot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      stackedAreaRenderer0.setSeriesURLGenerator(248, (CategoryURLGenerator) customCategoryURLGenerator0);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(false);
      boolean boolean0 = stackedAreaRenderer0.equals(stackedAreaRenderer1);
      assertFalse(boolean0);
      assertTrue(stackedAreaRenderer1.equals((Object)stackedAreaRenderer0));
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.createState(plotRenderingInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("<!UL4EFMm({U");
      DateAxis dateAxis0 = new DateAxis();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.createHotSpotShape((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, extendedCategoryAxis0, dateAxis0, defaultMultiValueCategoryDataset0, 78, 78, true, categoryItemRendererState0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Not implemented.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      NumberFormat numberFormat0 = mockSimpleDateFormat0.getNumberFormat();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("=JlP,V#'YDc3yS65", numberFormat0, numberFormat0);
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = scatterRenderer0.getItemLabelGenerator(12, 12, false);
      assertSame(categoryItemLabelGenerator0, standardCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      stackedAreaRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer(false);
      boolean boolean0 = stackedAreaRenderer1.equals(stackedAreaRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      int int0 = defaultCategoryItemRenderer0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) null);
      assertEquals(4.0, groupedStackedBarRenderer0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertEquals(1, scatterRenderer1.getPassCount());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 2, 1.0F, 5002.636F);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.drawBackground(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0);
      assertFalse(combinedRangeCategoryPlot0.isDomainPannable());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedBarRenderer0.getSeriesItemLabelGenerator(115);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = groupedStackedBarRenderer0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertTrue(scatterRenderer1.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryURLGenerator categoryURLGenerator0 = scatterRenderer0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1024);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(10, 2, 1.0F, 5002.636F);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.drawOutline(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0);
      assertFalse(combinedRangeCategoryPlot0.isRangePannable());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      LegendItem legendItem0 = minMaxCategoryRenderer0.getLegendItem(79, 79);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-2500), 15);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      JTable jTable0 = new JTable(15, 15);
      Rectangle rectangle0 = jTable0.getCellRect(15, (-4143), true);
      RectangleEdge rectangleEdge0 = RectangleEdge.TOP;
      // Undeclared exception!
//      try { 
        scatterRenderer0.getItemMiddle(stackedAreaRenderer0.ZERO, stackedAreaRenderer0.ZERO, slidingGanttCategoryDataset0, categoryAxis3D0, rectangle0, rectangleEdge0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = scatterRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      int int0 = stackedBarRenderer3D0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = scatterRenderer0.getLegendItemLabelGenerator();
      scatterRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertFalse(scatterRenderer1.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = statisticalLineAndShapeRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = waterfallBarRenderer0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      layeredBarRenderer0.setSeriesItemLabelGenerator(2462, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(2462, (double) layeredBarRenderer0.ZERO);
      boolean boolean0 = layeredBarRenderer0.equals(stackedBarRenderer3D0);
      assertFalse(boolean0);
  }
}
