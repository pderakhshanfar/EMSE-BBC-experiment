/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 22 15:43:45 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.SystemColor;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.RescaleOp;
import java.lang.reflect.Array;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.TimeZone;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.text.DefaultCaret;
import javax.swing.text.JTextComponent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.BorderArrangement;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.XYBlockRenderer;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.Hour;
import org.jfree.data.time.Minute;
import org.jfree.data.time.Quarter;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Second;
import org.jfree.data.time.Year;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      levelRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      // Undeclared exception!
//      try { 
        levelRenderer0.addEntity((EntityCollection) null, fastScatterPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultStatisticalCategoryDataset0, 10, (-3263), true);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      minMaxCategoryRenderer0.setPlot(combinedRangeCategoryPlot0);
      double[][] doubleArray0 = new double[1][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultIntervalCategoryDataset0, 36, 16, false, 4020.57422654, 36);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'row' argument is out of bounds.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      BorderArrangement borderArrangement0 = new BorderArrangement();
      LegendTitle legendTitle0 = new LegendTitle(boxAndWhiskerRenderer0, borderArrangement0, borderArrangement0);
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicLocation();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Point2D.Double point2D_Double0 = (Point2D.Double)boxAndWhiskerRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, defaultCaret0, legendTitle0.DEFAULT_PADDING, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DateAxis dateAxis0 = new DateAxis("I7]oNn)waCE4B");
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle rectangle0 = line2D_Double0.getBounds();
      Point2D.Double point2D_Double0 = (Point2D.Double)levelRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, defaultCaret0, rectangle0, categoryAxis3D0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals((-3.0), point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.data.Range");
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Point2D.Double point2D_Double0 = (Point2D.Double)levelRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D_Double0, subCategoryAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(3.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("<hHfT3u");
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, subCategoryAxis0, valueAxis0, defaultCategoryItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 500, 3, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-4140.725F), 0.0F, 1.0F, 2);
      defaultCategoryItemRenderer0.drawDomainLine(graphics2D0, categoryPlot0, rectangle2D_Float0, (-1584.90324491), subCategoryAxis0.DEFAULT_AXIS_LABEL_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_STROKE);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("{2}");
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(0);
      double double0 = levelRenderer0.getItemMiddle(levelRenderer0.ZERO, levelRenderer0.ZERO, defaultCategoryDataset0, subCategoryAxis0, rectangle0, rectangleEdge0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      NumberAxis numberAxis0 = new NumberAxis("mr(foE9,R>>>eL");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(">", statisticalLineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1674, 10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      statisticalLineAndShapeRenderer0.drawBackground(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0);
      assertEquals(0.0, rectangle2D_Float0.getMinX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, 15, 11, 9, 3, 2, (-1), true, true, true, true, true, true);
      Rectangle rectangle0 = chartPanel0.getBounds((Rectangle) null);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2961.6, 201.418364);
      Layer layer0 = Layer.BACKGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      waterfallBarRenderer0.drawAnnotations((Graphics2D) null, rectangle0, categoryAxis3D0, cyclicNumberAxis0, layer0, plotRenderingInfo0);
      assertNull(categoryAxis3D0.getLabelURL());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      double[][] doubleArray0 = new double[4][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      minMaxCategoryRenderer0.addEntity(standardEntityCollection0, statisticalLineAndShapeRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 2, 2, false, (-277.72634), 2271.181538);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      lineAndShapeRenderer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setSeriesToolTipGenerator(4347, (CategoryToolTipGenerator) null);
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("8ORX9=W`?%oZw^.{B9");
      DateAxis dateAxis0 = new DateAxis("8ORX9=W`?%oZw^.{B9");
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, extendedCategoryAxis0, dateAxis0, statisticalLineAndShapeRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("8ORX9=W`?%oZw^.{B9", scatterRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      MockDate mockDate0 = new MockDate(10, 10, 10, 15, 10);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("8ORX9=W`?%oZw^.{B9", mockDate0, 15, 0.5F);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.END;
      categoryPointerAnnotation0.setCategoryAnchor(categoryAnchor0);
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      // Undeclared exception!
      jFreeChart0.createBufferedImage(500, 500, 10, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("WJ;U%@9x[z`P1", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      categoryStepRenderer0.initialise((Graphics2D) null, defaultCaret0, categoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
      assertEquals(2, categoryStepRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("4o dMxd['UMu)%*>", numberFormat0);
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator1 = (BoxAndWhiskerToolTipGenerator)statisticalLineAndShapeRenderer0.getToolTipGenerator(10, (-1382), true);
      assertEquals("4o dMxd['UMu)%*>", boxAndWhiskerToolTipGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = boxAndWhiskerRenderer0.getSeriesItemLabelGenerator(4733);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      String[] stringArray0 = new String[6];
      Number[][] numberArray0 = new Number[0][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, numberArray0, numberArray0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, 0.2, "<;");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis0, cyclicNumberAxis0, stackedBarRenderer3D0);
      cyclicNumberAxis0.setVerticalTickLabels(true);
      ValueAxis valueAxis0 = stackedBarRenderer3D0.getRangeAxis(categoryPlot0, 10);
      assertTrue(valueAxis0.isTickMarksVisible());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("<hHfT3u");
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, subCategoryAxis0, valueAxis0, defaultCategoryItemRenderer0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      ValueAxis valueAxis1 = categoryStepRenderer0.getRangeAxis(categoryPlot0, (-1042));
      assertEquals(2.0F, valueAxis1.getTickMarkOutsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 4453, 261);
      CategoryAxis categoryAxis0 = new CategoryAxis("~:");
      Range range0 = ValueAxis.DEFAULT_RANGE;
      Range range1 = Range.scale(range0, (double) statisticalLineAndShapeRenderer0.ZERO);
      ModuloAxis moduloAxis0 = new ModuloAxis("~K%xZ>_%qB!;F", range1);
      CategoryPlot categoryPlot0 = new CategoryPlot(slidingGanttCategoryDataset0, categoryAxis0, moduloAxis0, statisticalLineAndShapeRenderer0);
      ValueAxis valueAxis0 = statisticalLineAndShapeRenderer0.getRangeAxis(categoryPlot0, 677);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      String[] stringArray0 = new String[5];
      SymbolAxis symbolAxis0 = new SymbolAxis(stringArray0[1], stringArray0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(symbolAxis0);
      ValueAxis valueAxis0 = defaultCategoryItemRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 15);
      assertFalse(valueAxis0.isVerticalTickLabels());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.5F, 15);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-3213.0), 0.12);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ValueAxis valueAxis0 = stackedBarRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, (-1295));
      assertEquals(0.05, valueAxis0.getLowerMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      double[][] doubleArray0 = new double[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("jMgc4UBN88]Q");
      DateAxis dateAxis0 = new DateAxis("6|+}");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, dateAxis0, defaultCategoryItemRenderer0);
      CategoryPlot categoryPlot1 = defaultCategoryItemRenderer0.getPlot();
      assertEquals(1.0F, categoryPlot1.getForegroundAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = defaultCategoryItemRenderer0.getItemLabelGenerator(2213, 2596, false);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator1 = (StandardCategoryItemLabelGenerator)levelRenderer0.getItemLabelGenerator((-1630), 0, false);
      assertEquals("{2}", standardCategoryItemLabelGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = lineRenderer3D0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, true);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      String[] stringArray0 = new String[0];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis0, symbolAxis0, lineRenderer3D0);
      CategoryAxis categoryAxis1 = lineAndShapeRenderer0.getDomainAxis(categoryPlot0, defaultStatisticalCategoryDataset0);
      assertEquals(0.2, categoryAxis1.getCategoryMargin(), 0.01);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalLineAndShapeRenderer0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      CategoryURLGenerator categoryURLGenerator0 = statisticalLineAndShapeRenderer0.getBaseURLGenerator();
      assertSame(categoryURLGenerator0, standardCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Locale locale0 = Locale.ITALY;
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", locale0);
      NumberFormat numberFormat0 = mockSimpleDateFormat0.getNumberFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", numberFormat0);
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      CategoryToolTipGenerator categoryToolTipGenerator0 = statisticalLineAndShapeRenderer0.getBaseToolTipGenerator();
      assertSame(categoryToolTipGenerator0, standardCategoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) null, true);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Number[][] numberArray0 = new Number[4][4];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) 0.2;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[6];
      numberArray2[0] = (Number) 3.0;
      numberArray0[2] = numberArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Range range0 = levelRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertNotNull(range0);
      assertEquals(2.8, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      double[][] doubleArray0 = new double[1][0];
      double[] doubleArray1 = new double[1];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = defaultCategoryItemRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      double[][] doubleArray0 = new double[9][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      Range range0 = barRenderer3D0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      double[][] doubleArray0 = new double[3][4];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (double) 1.0F;
      doubleArray0[0] = doubleArray1;
      doubleArray0[1] = doubleArray1;
      doubleArray0[2] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      Range range0 = minMaxCategoryRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(1.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.add((Number) 0, (Number) 1.0F, (Comparable) 0.0F, (Comparable) 10);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      Range range0 = barRenderer3D0.findRangeBounds(defaultStatisticalCategoryDataset0);
      assertEquals(0.0, range0.getLength(), 0.01);
      assertNotNull(range0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      MockDate mockDate0 = new MockDate(1, 1, (-1253), 1, 768);
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.ITALY;
      Year year0 = new Year(mockDate0, timeZone0, locale0);
      Quarter quarter0 = new Quarter(1, year0);
      defaultStatisticalCategoryDataset0.add((Number) 0.2, (Number) 3.0, (Comparable) 8.0, (Comparable) quarter0);
      Range range0 = barRenderer3D0.findRangeBounds(defaultStatisticalCategoryDataset0);
      assertNotNull(range0);
      assertEquals(0.1, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      Long long0 = new Long((-1L));
      defaultStatisticalCategoryDataset0.add((Number) long0, (Number) 1.0F, (Comparable) 10, (Comparable) true);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Range range0 = stackedBarRenderer3D0.findRangeBounds(defaultStatisticalCategoryDataset0);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      boolean boolean0 = statisticalLineAndShapeRenderer0.equals(statisticalLineAndShapeRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean0 = scatterRenderer0.equals(boxAndWhiskerRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      // Undeclared exception!
//      try { 
        lineRenderer3D0.updateCrosshairValues(categoryCrosshairState0, (Comparable) null, "j0", (-1036.8171945314), (-2403), (-1036.8171945314), 23, plotOrientation0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
//      try { 
        scatterRenderer0.setSeriesURLGenerator((-1), (CategoryURLGenerator) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
//      try { 
        scatterRenderer0.setSeriesURLGenerator((-2545), (CategoryURLGenerator) customCategoryURLGenerator0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      // Undeclared exception!
//      try { 
        lineRenderer3D0.setSeriesToolTipGenerator((-680), (CategoryToolTipGenerator) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
//      try { 
        scatterRenderer0.setSeriesItemLabelGenerator((-162), (CategoryItemLabelGenerator) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.setSeriesItemLabelGenerator((-1199), (CategoryItemLabelGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      double[][] doubleArray0 = new double[2][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      DateAxis dateAxis0 = new DateAxis("I7]oNn)waCE4B");
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("I7]oNn)waCE4B");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, subCategoryAxis0, dateAxis0, defaultCategoryItemRenderer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, defaultIntervalCategoryDataset0, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("({0}, {1}) = {2}", combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
//      try { 
        lineRenderer3D0.initialise(graphics2D0, (Rectangle2D) null, (CategoryPlot) null, (CategoryDataset) null, plotRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'plot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      String[] stringArray0 = new String[7];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      // Undeclared exception!
//      try { 
        scatterRenderer0.hitTest((-5931.114), (-335.5997), (Graphics2D) null, rectangle2D0, (CategoryPlot) null, categoryAxis0, symbolAxis0, (CategoryDataset) null, 500, 500, true, categoryStepRenderer_State0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      String[] stringArray0 = new String[7];
      SymbolAxis symbolAxis0 = new SymbolAxis("Cannot accept XYSeries that allow duplicate values. Use XYSeries(seriesName, <sort>, false) constructor.", stringArray0);
      // Undeclared exception!
//      try { 
        scatterRenderer0.hitTest(1.0F, 0.0F, (Graphics2D) null, rectangle2D0, (CategoryPlot) null, categoryAxis0, symbolAxis0, taskSeriesCollection0, 500, 10, true, categoryStepRenderer_State0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      double[][] doubleArray0 = new double[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      String[] stringArray0 = new String[1];
      SymbolAxis symbolAxis0 = new SymbolAxis("GzTl$tY:a", stringArray0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double();
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("l,c,mytLJeZ*iCT");
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
//      try { 
        scatterRenderer0.hitTest(0.2, 0.0, (Graphics2D) null, rectangle2D0, categoryPlot0, categoryAxis3D0, symbolAxis0, defaultIntervalCategoryDataset0, 88, 10, true, (CategoryItemRendererState) null);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 10
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      // Undeclared exception!
//      try { 
        lineAndShapeRenderer0.getRangeAxis((CategoryPlot) null, 10);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart("U", spiderWebPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 1.0F, (-1200.50164), chartRenderingInfo0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      float[] floatArray0 = new float[4];
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, renderingHints0);
      Rectangle2D rectangle2D0 = rescaleOp0.getBounds2D(bufferedImage0);
      RectangleEdge rectangleEdge0 = RectangleEdge.BOTTOM;
      // Undeclared exception!
//      try { 
        scatterRenderer0.getItemMiddle(1.0F, 1.0F, (CategoryDataset) null, categoryAxis3D0, rectangle2D0, rectangleEdge0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      double[][] doubleArray0 = new double[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.getDomainAxis((CategoryPlot) null, defaultIntervalCategoryDataset0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      double[][] doubleArray0 = new double[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      LogAxis logAxis0 = new LogAxis();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      // Undeclared exception!
//      try { 
        lineRenderer3D0.getDomainAxis(combinedRangeCategoryPlot0, defaultIntervalCategoryDataset0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 2399, 2399);
      // Undeclared exception!
//      try { 
        scatterRenderer0.findRangeBounds((CategoryDataset) slidingGanttCategoryDataset0, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      double[][] doubleArray0 = new double[2][9];
      double[] doubleArray1 = new double[8];
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 8
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
//      try { 
        barRenderer3D0.findRangeBounds(defaultIntervalCategoryDataset0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      double[][] doubleArray0 = new double[7][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(3.0, 10);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultIntervalCategoryDataset0, (-700), 10);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.findRangeBounds(slidingCategoryDataset0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // DefaultIntervalCategoryDataset.getValue(): category index out of range.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Number[][] numberArray0 = new Number[7][8];
      Number[] numberArray1 = new Number[5];
      numberArray0[1] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Comparable[]) null, (Comparable[]) null, numberArray0, numberArray0);
      // Undeclared exception!
//      try { 
        scatterRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 5
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) 10);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle rectangle0 = new Rectangle(221, 3);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 2.5E-6);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, valueAxis0, intervalMarker0, rectangle0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BufferedImage bufferedImage0 = new BufferedImage(15, 15, 10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      SystemColor systemColor0 = SystemColor.windowText;
      ValueMarker valueMarker0 = new ValueMarker((-1221.8024), systemColor0, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_STROKE);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(10);
      RegularTimePeriod regularTimePeriod0 = fixedMillisecond0.next();
      PeriodAxis periodAxis0 = new PeriodAxis("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", regularTimePeriod0, fixedMillisecond0);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, periodAxis0, valueMarker0, rectangle2D_Double0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Range(double, double): require lower (11.0) <= upper (10.0).
//         //
//         verifyException("org.jfree.data.Range", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Requires StatisticalCategoryDataset.", lineRenderer3D0.DEFAULT_VALUE_LABEL_FONT, spiderWebPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 12, 3, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      // Undeclared exception!
//      try { 
        lineRenderer3D0.drawOutline(graphics2D0, combinedRangeCategoryPlot0, (Rectangle2D) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.LineRenderer3D", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.2, 360.3807524241225);
      CategoryAxis categoryAxis0 = new CategoryAxis("CONTRACT");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CategoryMarker categoryMarker0 = new CategoryMarker(false, cyclicNumberAxis0.DEFAULT_TICK_MARK_PAINT, stackedBarRenderer0.DEFAULT_STROKE, categoryAxis0.DEFAULT_AXIS_LABEL_PAINT, stackedBarRenderer3D0.DEFAULT_OUTLINE_STROKE, 0.0F);
      BorderLayout borderLayout0 = new BorderLayout();
      JTabbedPane jTabbedPane0 = new JTabbedPane();
      Dimension dimension0 = borderLayout0.preferredLayoutSize(jTabbedPane0);
      Rectangle rectangle0 = new Rectangle(dimension0);
      // Undeclared exception!
//      try { 
        stackedBarRenderer0.drawDomainMarker((Graphics2D) null, combinedDomainCategoryPlot0, categoryAxis0, categoryMarker0, rectangle0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      String[] stringArray0 = new String[5];
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("nWpqF}%`6k_");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, extendedCategoryAxis0, symbolAxis0, defaultCategoryItemRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) null, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, extendedCategoryAxis0, categoryMarker0, (Rectangle2D) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'key' argument.
//         //
//         verifyException("org.jfree.data.KeyedObjects2D", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = scatterRenderer0.getPlot();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.drawDomainLine((Graphics2D) null, (CategoryPlot) null, rectangle2D0, 0.0, categoryPlot0.DEFAULT_GRIDLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.drawBackground((Graphics2D) null, categoryPlot0, (Rectangle2D) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.Plot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("({0}, {1}) = {2}", combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("({0}, {1}) = {2}");
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ");
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawAnnotations(graphics2D0, rectangle2D_Double0, subCategoryAxis0, logarithmicAxis0, (Layer) null, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DateAxis dateAxis0 = new DateAxis("L<J.?I0L!Q$S,t");
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("L<J.?I0L!Q$S,t");
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      Comparable<CategoryLineAnnotation>[] comparableArray0 = (Comparable<CategoryLineAnnotation>[]) Array.newInstance(Comparable.class, 0);
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(comparableArray0, comparableArray0, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.createHotSpotBounds((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, subCategoryAxis0, dateAxis0, defaultIntervalCategoryDataset0, 0, 1, true, categoryItemRendererState0, defaultCaret0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      DateAxis dateAxis0 = new DateAxis("I7]oNn)waCE4B");
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("I7]oNn)waCE4B");
      CategoryPlot categoryPlot0 = new CategoryPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.createHotSpotBounds((Graphics2D) null, defaultCaret0, categoryPlot0, subCategoryAxis0, dateAxis0, defaultIntervalCategoryDataset0, 9, 0, true, categoryItemRendererState0, defaultCaret0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      mockSimpleDateFormat0.setTimeZone((TimeZone) null);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("", mockSimpleDateFormat0);
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      // Undeclared exception!
//      try { 
        levelRenderer0.clone();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Calendar", e);
//      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      TimeZone timeZone0 = TimeZone.getDefault();
      DateAxis dateAxis0 = new DateAxis("{2}", timeZone0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_LEFT;
      // Undeclared exception!
//      try { 
        levelRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'base' argument.
//         //
//         verifyException("org.jfree.chart.util.RectangleInsets", e);
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(12.0, 0.0, 0.0, (double) defaultCategoryItemRenderer0.ZERO);
      // Undeclared exception!
//      try { 
        lineRenderer3D0.addEntity((EntityCollection) null, ellipse2D_Double0, (CategoryDataset) null, 0, 0, true, 0, 0.0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
//      try { 
        lineRenderer3D0.addEntity(standardEntityCollection0, defaultPolarItemRenderer0.DEFAULT_SHAPE, defaultCategoryDataset0, 111, 111, true, 2301.8712974686, (-166.7521));
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 111, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, levelRenderer0.DEFAULT_SHAPE, defaultBoxAndWhiskerCategoryDataset0, (-1175), (-737), true, 0.0, (double) levelRenderer0.ZERO);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
//      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, fastScatterPlot0.DEFAULT_LEGEND_ITEM_BOX, (CategoryDataset) null, 2, 2, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryStepRenderer_State0.getEntityCollection();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
//      try { 
        scatterRenderer0.addEntity(entityCollection0, categoryStepRenderer_State0.line, defaultStatisticalCategoryDataset0, (-163), 1, false);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", scatterRenderer0.ZERO, (double) defaultCategoryItemRenderer0.ZERO);
      // Undeclared exception!
//      try { 
        scatterRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, (Layer) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", "", (double) stackedAreaRenderer0.ZERO);
      Layer layer0 = Layer.FOREGROUND;
      stackedAreaRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      boolean boolean0 = stackedAreaRenderer0.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
//      try { 
        scatterRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
      CategoryURLGenerator categoryURLGenerator0 = scatterRenderer0.getURLGenerator(6, 6, false);
      assertSame(categoryURLGenerator0, standardCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryURLGenerator categoryURLGenerator0 = defaultCategoryItemRenderer0.getURLGenerator(244, 3, true);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryToolTipGenerator categoryToolTipGenerator0 = lineRenderer3D0.getToolTipGenerator((-680), (-4411), true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, true);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = (IntervalCategoryItemLabelGenerator)levelRenderer0.getBaseItemLabelGenerator();
      assertEquals("({0}, {1}) = {3} - {4}", intervalCategoryItemLabelGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null, true);
      assertTrue(stackedBarRenderer3D0.getShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = levelRenderer0.getSeriesToolTipGenerator(2405);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("PJcEr");
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.createHotSpotBounds((Graphics2D) null, defaultCaret0, categoryPlot0, subCategoryAxis0, logarithmicAxis0, defaultCategoryDataset0, 52, 61, true, categoryItemRendererState0, (Rectangle2D) null);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 61, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Locale locale0 = Locale.ITALY;
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", locale0);
      NumberFormat numberFormat0 = mockSimpleDateFormat0.getNumberFormat();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("", numberFormat0);
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0, false);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultCategoryDataset0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = stackedBarRenderer0.createState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addEntity(entityCollection0, multiplePiePlot0.DEFAULT_LEGEND_ITEM_BOX, defaultCategoryDataset0, 0, (-1), false);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
//      try { 
        scatterRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultBoxAndWhiskerCategoryDataset0, 1, 1, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'hotspot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      Second second0 = new Second();
      PeriodAxis periodAxis0 = new PeriodAxis("(SN}> X28$&jQo(HL~?", second0, second0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, periodAxis0, boxAndWhiskerRenderer0);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.getLegendItems();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LegendItemCollection legendItemCollection0 = scatterRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ValueAxis valueAxis0 = statisticalLineAndShapeRenderer0.getRangeAxis(categoryPlot0, 781);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      double[][] doubleArray0 = new double[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("jMgc4UBN8K]Q");
      DateAxis dateAxis0 = new DateAxis((String) null);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, dateAxis0, defaultCategoryItemRenderer0);
      ValueAxis valueAxis0 = defaultCategoryItemRenderer0.getRangeAxis(categoryPlot0, 0);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, false);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = (StatisticalLineAndShapeRenderer)statisticalLineAndShapeRenderer0.clone();
      assertTrue(statisticalLineAndShapeRenderer1.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
//      try { 
        statisticalLineAndShapeRenderer0.clone();
//        fail("Expecting exception: CloneNotSupportedException");
      
//      } catch(CloneNotSupportedException e) {
//         //
//         // Base item URL generator not cloneable.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("4o dMxd['UMu)%*>", numberFormat0);
      statisticalLineAndShapeRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = (StatisticalLineAndShapeRenderer)statisticalLineAndShapeRenderer0.clone();
      assertTrue(statisticalLineAndShapeRenderer1.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      levelRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      LevelRenderer levelRenderer1 = (LevelRenderer)levelRenderer0.clone();
      assertEquals(3, levelRenderer1.getDefaultEntityRadius());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      double[][] doubleArray0 = new double[2][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) defaultCategoryItemRenderer0.ZERO);
      CompassPlot compassPlot0 = new CompassPlot(defaultValueDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("2%QKz&^wp!PbR.wCx3", compassPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 577);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      scatterRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultIntervalCategoryDataset0, 740, (-1037), true, 740, 816.2205547, false);
      assertTrue(scatterRenderer0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("og.jfree.chart.imagemap.DynamicDriveToolTipTag'ragmentGenerator");
      PeriodAxis periodAxis0 = new PeriodAxis("og.jfree.chart.imagemap.DynamicDriveToolTipTag'ragmentGenerator");
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis3D0, periodAxis0, lineRenderer3D0);
      categoryPlot0.setRangeCrosshairLockedOnData(false);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      lineRenderer3D0.updateCrosshairValues(categoryCrosshairState0, true, 2.0F, 0.0F, 500, (-405.45373088), 1670.96223428, plotOrientation0);
      assertEquals(0, lineRenderer3D0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      MockDate mockDate0 = (MockDate)DateAxis.DEFAULT_ANCHOR_DATE;
      Second second0 = new Second(mockDate0);
      PeriodAxis periodAxis0 = new PeriodAxis("bF*w;xGe5bhPd^", second0, second0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis0, periodAxis0, lineRenderer3D0);
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      lineRenderer3D0.updateCrosshairValues(categoryCrosshairState0, 1.0F, levelRenderer0.ZERO, 2225.870177040752, 4010, 0.0, 2739.9, plotOrientation0);
      assertEquals(1001.0, periodAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
//      try { 
        lineRenderer3D0.updateCrosshairValues(categoryCrosshairState0, defaultCategoryItemRenderer0.ZERO, defaultCategoryItemRenderer0.ZERO, 0.0, 1, 210.168977095125, (-1709.3), (PlotOrientation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'orientation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      double[][] doubleArray0 = new double[2][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      DateAxis dateAxis0 = new DateAxis("I7]oNn)waCE4B");
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("I7]oNn)waCE4B");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, subCategoryAxis0, dateAxis0, defaultCategoryItemRenderer0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      lineRenderer3D0.updateCrosshairValues((CategoryCrosshairState) null, true, 2.0F, 0, 10, (-1290.39589), (-1082.361562821385), plotOrientation0);
      assertFalse(lineRenderer3D0.getUseSeriesOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      double[][] doubleArray0 = new double[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("jMgc4UBN8K]Q");
      DateAxis dateAxis0 = new DateAxis((String) null);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, dateAxis0, defaultCategoryItemRenderer0);
      DrawingSupplier drawingSupplier0 = defaultCategoryItemRenderer0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      assertTrue(scatterRenderer1.equals((Object)scatterRenderer0));
      
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Unknown layer.", "Unknown layer.", 2.0E7);
      Layer layer0 = Layer.BACKGROUND;
      scatterRenderer1.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      boolean boolean0 = scatterRenderer0.equals(scatterRenderer1);
      assertFalse(scatterRenderer1.equals((Object)scatterRenderer0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("jDrf", "D2WXFur,<)[#", "");
      scatterRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.equals(scatterRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer1.equals(scatterRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LegendItem legendItem0 = levelRenderer0.getLegendItem(0, 10);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      levelRenderer0.setPlot(combinedDomainCategoryPlot0);
      // Undeclared exception!
//      try { 
        levelRenderer0.getLegendItem((-3526), 10);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'dataset' argument.
//         //
//         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      RectangleAnchor rectangleAnchor0 = xYBlockRenderer0.getBlockAnchor();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
//      try { 
        levelRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, defaultCaret0, defaultCaret0, combinedRangeXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.util.RectangleAnchor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("I7]oNn)waCE4B");
      Rectangle rectangle0 = new Rectangle();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      // Undeclared exception!
//      try { 
        levelRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle0, rectangle0, dateAxis0.DEFAULT_TICK_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.util.RectangleAnchor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JTextArea jTextArea0 = new JTextArea(13, 13);
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jTextArea0.new AccessibleJTextComponent();
      Rectangle rectangle0 = jTextComponent_AccessibleJTextComponent0.getCharacterBounds(2530);
      TimeZone timeZone0 = TimeZone.getDefault();
      DateAxis dateAxis0 = new DateAxis("{2}", timeZone0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      // Undeclared exception!
//      try { 
        levelRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, rectangle0, dateAxis0.DEFAULT_AXIS_LABEL_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'base' argument.
//         //
//         verifyException("org.jfree.chart.util.RectangleInsets", e);
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("({0}, {1}) = {2}", combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 15, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ");
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.5, 1.0F);
      Rectangle rectangle0 = new Rectangle(500, 10);
      boxAndWhiskerRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logarithmicAxis0, intervalMarker0, rectangle0);
      assertTrue(boxAndWhiskerRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis(" ?r`!");
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 0.0, 0.0, 422.6);
      JFreeChart jFreeChart0 = new JFreeChart(" ?r`!", combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(234, 93, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      IntervalMarker intervalMarker0 = new IntervalMarker((-515.725604022), 335.476473);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, logarithmicAxis0, intervalMarker0, rectangle2D_Double0);
      assertTrue(logarithmicAxis0.isVisible());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle rectangle0 = new Rectangle(221, 1);
      IntervalMarker intervalMarker0 = new IntervalMarker(1, 1.0F);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DateAxis dateAxis0 = new DateAxis();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(dateAxis0);
      JFreeChart jFreeChart0 = new JFreeChart("nqUCDyu8", combinedDomainXYPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      boxAndWhiskerRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, dateAxis0, intervalMarker0, rectangle0);
      assertFalse(dateAxis0.isMinorTickMarksVisible());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("({0}, {1}) = {2}", combinedDomainCategoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(76, 1233, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("({0}, {1}) = {2}");
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Paint paint0 = defaultPolarItemRenderer0.getItemFillPaint(21, 0, false);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 180.0, paint0);
      boxAndWhiskerRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logarithmicAxis0, intervalMarker0, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.getCenterX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BufferedImage bufferedImage0 = new BufferedImage(15, 15, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ");
      ValueMarker valueMarker0 = new ValueMarker(1.0F, logarithmicAxis0.DEFAULT_TICK_MARK_PAINT, boxAndWhiskerRenderer0.DEFAULT_STROKE);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0E-100, 2.0F, 2.302585092994046, 1.0F);
      valueMarker0.setLabel("~");
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      boxAndWhiskerRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logarithmicAxis0, valueMarker0, rectangle2D_Double0);
      assertEquals(5.0, combinedDomainCategoryPlot0.getGap(), 0.01);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      combinedDomainCategoryPlot0.setOrientation(plotOrientation0);
      JFreeChart jFreeChart0 = new JFreeChart("({0}, {1}) = {2}", combinedDomainCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 15);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ");
      ValueMarker valueMarker0 = new ValueMarker(1.0F, logarithmicAxis0.DEFAULT_TICK_MARK_PAINT, boxAndWhiskerRenderer0.DEFAULT_STROKE);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      boxAndWhiskerRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logarithmicAxis0, valueMarker0, rectangle2D_Double0);
      assertEquals(0.0, rectangle2D_Double0.getMinY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      ValueMarker valueMarker0 = new ValueMarker(500);
      boxAndWhiskerRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, valueAxis0, valueMarker0, defaultCaret0);
      assertEquals(1, combinedRangeCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle rectangle0 = new Rectangle(0, 1);
      boxAndWhiskerRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, valueAxis0, (Marker) null, rectangle0);
      assertEquals(0.0F, valueAxis0.getTickMarkInsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryMarker categoryMarker0 = new CategoryMarker(1.0F, fastScatterPlot0.DEFAULT_OUTLINE_PAINT, scatterRenderer0.DEFAULT_OUTLINE_STROKE);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      String[] stringArray0 = new String[5];
      SymbolAxis symbolAxis0 = new SymbolAxis(stringArray0[1], stringArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, extendedCategoryAxis0, symbolAxis0, defaultCategoryItemRenderer0);
      defaultCategoryItemRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, extendedCategoryAxis0, categoryMarker0, (Rectangle2D) null);
      assertTrue(defaultCategoryItemRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      DateAxis dateAxis0 = new DateAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, dateAxis0, statisticalLineAndShapeRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("", scatterRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, true);
      MockDate mockDate0 = new MockDate(10);
      dateAxis0.setMaximumDate(mockDate0);
      // Undeclared exception!
      jFreeChart0.createBufferedImage(1671, 500, 10, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.data.Range");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Minute minute0 = new Minute();
      PeriodAxis periodAxis0 = new PeriodAxis("", minute0, minute0);
      boxAndWhiskerRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, periodAxis0, rectangle2D0, 2.0, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, xYBlockRenderer0.DEFAULT_STROKE);
      assertEquals(2.0, xYBlockRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("{2}");
      // Undeclared exception!
//      try { 
        lineRenderer3D0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, logarithmicAxis0, (Rectangle2D) null, 1.0F, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.axis.LogarithmicAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      MeterPlot meterPlot0 = new MeterPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", meterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 270);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.drawDomainLine(graphics2D0, (CategoryPlot) null, (Rectangle2D) null, 10, lineRenderer3D0.DEFAULT_WALL_PAINT, (Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'stroke' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      double[][] doubleArray0 = new double[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("jMgc4UBN8K]Q");
      DateAxis dateAxis0 = new DateAxis((String) null);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, dateAxis0, defaultCategoryItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(18, 500, 3, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(2.0F, 500, 0.0F, 3.0F);
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.drawDomainLine(graphics2D0, categoryPlot0, rectangle2D_Float0, (-2039.33801288251), (Paint) null, dateAxis0.DEFAULT_AXIS_LINE_STROKE);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'paint' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      double[][] doubleArray0 = new double[1][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("jMgc4UBN8K]Q");
      DateAxis dateAxis0 = new DateAxis((String) null);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, dateAxis0, defaultCategoryItemRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(18, 500, 3, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(2.0F, 500, 0.0F, 3.0F);
      defaultCategoryItemRenderer0.drawDomainLine(graphics2D0, categoryPlot0, rectangle2D_Float0, 2851.8470158, defaultPolarItemRenderer0.DEFAULT_PAINT, defaultPolarItemRenderer0.DEFAULT_STROKE);
      assertEquals(0, defaultCategoryItemRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      DateAxis dateAxis0 = new DateAxis((String) null);
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, extendedCategoryAxis0, dateAxis0, scatterRenderer0);
      scatterRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      assertFalse(scatterRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 8);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(8, 0.0, 10, 0.0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.initialise(graphics2D0, rectangle2D_Double0, combinedDomainCategoryPlot0, defaultBoxAndWhiskerCategoryDataset0, plotRenderingInfo0);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("Y4");
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, defaultCaret0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      double[][] doubleArray0 = new double[2][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      DateAxis dateAxis0 = new DateAxis("I7]oNn)waCE4B");
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("I7]oNn)waCE4B");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, subCategoryAxis0, dateAxis0, defaultCategoryItemRenderer0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.initialise((Graphics2D) null, defaultCaret0, categoryPlot0, defaultIntervalCategoryDataset0, (PlotRenderingInfo) null);
      assertEquals(2, levelRenderer0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
//      try { 
        scatterRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'generator' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalBarRenderer0.getLegendItemLabelGenerator();
      lineRenderer3D0.setLegendItemLabelGenerator(categorySeriesLabelGenerator0);
      assertFalse(lineRenderer3D0.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      // Undeclared exception!
//      try { 
        layeredBarRenderer0.addAnnotation((CategoryAnnotation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("`o|t;Bg");
      defaultCategoryItemRenderer0.setSeriesURLGenerator(5, (CategoryURLGenerator) standardCategoryURLGenerator0, false);
      assertFalse(defaultCategoryItemRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      levelRenderer0.setSeriesURLGenerator(10, (CategoryURLGenerator) standardCategoryURLGenerator0, true);
      // Undeclared exception!
//      try { 
        levelRenderer0.addEntity((EntityCollection) null, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultStatisticalCategoryDataset0, 10, 10, false);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("", dateFormat0);
      lineRenderer3D0.setSeriesToolTipGenerator(217, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      assertEquals(0, lineRenderer3D0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setSeriesToolTipGenerator(3, (CategoryToolTipGenerator) null, false);
      assertTrue(statisticalBarRenderer0.getShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setSeriesItemLabelGenerator(2966, (CategoryItemLabelGenerator) null, false);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.setPlot((CategoryPlot) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'plot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      scatterRenderer0.setSeriesURLGenerator(66, (CategoryURLGenerator) customCategoryURLGenerator0);
      assertTrue(scatterRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = statisticalLineAndShapeRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryURLGenerator categoryURLGenerator0 = scatterRenderer0.getSeriesURLGenerator(6912);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = levelRenderer0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ChartPanel chartPanel0 = new ChartPanel((JFreeChart) null, false);
      Rectangle2D rectangle2D0 = chartPanel0.getScreenDataArea(15, 15);
      CategoryAxis categoryAxis0 = new CategoryAxis("PRINT");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      DateAxis dateAxis0 = new DateAxis("ZOOM_RESET_BOTH");
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.createHotSpotShape((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, categoryAxis0, dateAxis0, defaultStatisticalCategoryDataset0, 14, 14, true, (CategoryItemRendererState) null);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Not implemented.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 500, (-789));
      // Undeclared exception!
//      try { 
        scatterRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, slidingGanttCategoryDataset0, (-789), 18, false, 0.0, 9999, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(477.95260533, (-2914.524231055557));
      int int0 = stackedBarRenderer3D0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      // Undeclared exception!
//      try { 
        levelRenderer0.setSeriesToolTipGenerator((-4830), (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer1.equals(scatterRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = lineRenderer3D0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.removeAnnotations();
      assertFalse(defaultCategoryItemRenderer0.getUseFillPaint());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[7][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      boxAndWhiskerRenderer0.addEntity(standardEntityCollection0, thermometerPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultIntervalCategoryDataset0, 1, 2, true);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("", levelRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 88, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      levelRenderer0.drawOutline(graphics2D0, combinedDomainCategoryPlot0, defaultCaret0);
      assertTrue(combinedDomainCategoryPlot0.isOutlineVisible());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      DrawingSupplier drawingSupplier0 = defaultCategoryItemRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.data.Range");
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.0, (-670.389070144));
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("");
      Hour hour0 = new Hour();
      Number[][] numberArray0 = new Number[4][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(numberAxis3D0);
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation(500);
      RectangleEdge rectangleEdge0 = Plot.resolveRangeAxisLocation(axisLocation0, plotOrientation0);
      // Undeclared exception!
//      try { 
        barRenderer3D0.getItemMiddle(hour0, 0.2, defaultIntervalCategoryDataset0, subCategoryAxis0, rectangle2D_Double0, rectangleEdge0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid category index: -1
//         //
//         verifyException("org.jfree.chart.axis.CategoryAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      int int0 = levelRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = scatterRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("");
      statisticalLineAndShapeRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer1 = (StatisticalLineAndShapeRenderer)statisticalLineAndShapeRenderer0.clone();
      assertFalse(statisticalLineAndShapeRenderer1.getUseOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = levelRenderer0.getLegendItemLabelGenerator();
      levelRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator0);
      LevelRenderer levelRenderer1 = (LevelRenderer)levelRenderer0.clone();
      assertTrue(levelRenderer1.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.data.Range");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double();
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D0, combinedDomainCategoryPlot0, defaultKeyedValues2DDataset0, plotRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("|??JdQ5", scatterRenderer0.ZERO, (double) scatterRenderer0.ZERO, 0.0);
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer1.equals(scatterRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      CategoryToolTipGenerator categoryToolTipGenerator0 = lineAndShapeRenderer0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      lineRenderer3D0.setSeriesItemLabelGenerator(3216, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      assertTrue(lineRenderer3D0.getBaseSeriesVisibleInLegend());
  }
}
