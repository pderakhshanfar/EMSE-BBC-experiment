/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 11:13:18 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.ColorModel;
import java.awt.image.LookupOp;
import java.awt.image.ShortLookupTable;
import java.io.IOException;
import java.math.BigInteger;
import java.net.URI;
import java.net.URL;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParsePosition;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Stack;
import javax.swing.Icon;
import javax.swing.JEditorPane;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JTextPane;
import javax.swing.JViewport;
import javax.swing.event.RowSorterEvent;
import javax.swing.filechooser.FileSystemView;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.multi.MultiTextUI;
import javax.swing.text.DefaultCaret;
import javax.swing.text.JTextComponent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.evosuite.runtime.mock.javax.swing.MockJFileChooser;
import org.evosuite.runtime.mock.javax.swing.filechooser.MockFileSystemView;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.LegendItemSource;
import org.jfree.chart.RenderingSource;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.FlowArrangement;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.needle.ArrowNeedle;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CompassPlot;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.AbstractRenderer;
import org.jfree.chart.renderer.AreaRendererEndType;
import org.jfree.chart.renderer.DefaultPolarItemRenderer;
import org.jfree.chart.renderer.WaferMapRenderer;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GradientBarPainter;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.renderer.xy.DefaultXYItemRenderer;
import org.jfree.chart.renderer.xy.XYBlockRenderer;
import org.jfree.chart.text.TextBlock;
import org.jfree.chart.text.TextBox;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.Title;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.DefaultShadowGenerator;
import org.jfree.chart.util.GradientPaintTransformer;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.SortOrder;
import org.jfree.chart.util.StandardGradientPaintTransformer;
import org.jfree.chart.util.TableOrder;
import org.jfree.data.KeyToGroupMap;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.GanttCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DatasetGroup;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.pie.DefaultPieDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.statistics.SimpleHistogramBin;
import org.jfree.data.time.Day;
import org.jfree.data.time.Month;
import org.jfree.data.time.SerialDate;
import org.jfree.data.time.SpreadsheetDate;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.time.Week;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      boxAndWhiskerRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      boxAndWhiskerRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = (BoxAndWhiskerRenderer)boxAndWhiskerRenderer0.clone();
      assertTrue(boxAndWhiskerRenderer1.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      statisticalBarRenderer0.setPlot(combinedRangeCategoryPlot0);
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator("Null 'labelFormat' argument.", numberFormat0);
      statisticalBarRenderer0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultMultiValueCategoryDataset0, 10, 10, false, 10, 10);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      boxAndWhiskerRenderer0.clone();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      lineAndShapeRenderer0.getBaseShapesFilled();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = boxAndWhiskerRenderer0.getItemLabelGenerator((-1600), (-1600), true);
      assertSame(categoryItemLabelGenerator0, intervalCategoryItemLabelGenerator0);
      assertNotNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LogAxis logAxis0 = new LogAxis();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ValueMarker valueMarker0 = new ValueMarker(0.0, logAxis0.DEFAULT_AXIS_LABEL_PAINT, logAxis0.DEFAULT_TICK_MARK_STROKE, logAxis0.DEFAULT_TICK_LABEL_PAINT, logAxis0.DEFAULT_TICK_MARK_STROKE, 0.0F);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("org.jfree.chart.plot.IntervalMarker");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryMarker categoryMarker0 = new CategoryMarker(logarithmicAxis0.DEFAULT_TICK_UNIT, statisticalBarRenderer1.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_STROKE);
      statisticalBarRenderer1.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, logAxis0, categoryMarker0, rectangle2D_Double0);
      Object object0 = statisticalBarRenderer0.clone();
      boolean boolean0 = statisticalBarRenderer1.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-974.6030958091212), 0.0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ValueAxis valueAxis0 = boxAndWhiskerRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, valueAxis0, categoryStepRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, true, false, false);
      Graphics2D graphics2D0 = null;
      Color color0 = null;
//      try {
        color0 = new Color(0.0F, 1.0F, (-287.22232F), 0.0F);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Color parameter outside of expected range: Blue
//         //
//         verifyException("java.awt.Color", e);
//      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      Number[][] numberArray0 = new Number[5][6];
      Number[] numberArray1 = new Number[0];
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[1];
      numberArray2[0] = (Number) 8.0;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[7];
      numberArray3[0] = (Number) 12.0;
      numberArray3[1] = (Number) 8.0;
      numberArray3[2] = (Number) stackedBarRenderer3D0.ZERO;
      numberArray3[3] = (Number) 0.2;
      BigInteger bigInteger0 = BigInteger.TEN;
      numberArray3[4] = (Number) bigInteger0;
      numberArray3[5] = (Number) 0.2;
      numberArray3[6] = (Number) 0.2;
      numberArray0[2] = numberArray3;
      Number[] numberArray4 = new Number[1];
      numberArray4[0] = (Number) 12.0;
      numberArray0[3] = numberArray4;
      Number[] numberArray5 = new Number[3];
      numberArray5[0] = (Number) 3.0;
      numberArray5[1] = (Number) 0.2;
      numberArray5[2] = (Number) 12.0;
      numberArray0[4] = numberArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      Range range0 = stackedBarRenderer3D0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(1.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setDrawOutlines(true);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      BarRenderer.getDefaultShadowsVisible();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = (BoxAndWhiskerRenderer)boxAndWhiskerRenderer0.clone();
      waterfallBarRenderer0.getShadowPaint();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = (IntervalCategoryItemLabelGenerator)boxAndWhiskerRenderer1.getBaseItemLabelGenerator();
      assertNotSame(intervalCategoryItemLabelGenerator1, intervalCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      bufferedImage0.createGraphics();
      double[][] doubleArray0 = new double[5][9];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 0.0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = 0.0;
      doubleArray2[2] = (double) 1.0F;
      doubleArray2[3] = 0.0;
      doubleArray2[4] = 0.0;
      JViewport jViewport0 = new JViewport();
      Point point0 = jViewport0.getViewPosition();
      Point point1 = new Point(point0);
      point1.move(0, 479);
      rectangle2D_Double0.setFrameFromCenter((Point2D) point1, (Point2D) point1);
      doubleArray2[5] = (-1397.4622650961549);
      doubleArray2[6] = (-3688.0);
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[2];
      doubleArray3[0] = (-3688.0);
      doubleArray3[1] = (double) 1.0F;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[1];
      doubleArray4[0] = (double) 1.0F;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[1];
      doubleArray5[0] = (double) 1.0F;
      doubleArray0[4] = doubleArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Range range0 = minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals((-1843.5), range0.getCentralValue(), 0.01);
      assertNotNull(range0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, (-4201.4543));
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, (CategoryAxis) null, cyclicNumberAxis0, boxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(taskSeriesCollection0);
      JFreeChart jFreeChart1 = multiplePiePlot0.getPieChart();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, true, true, true, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Stroke stroke0 = categoryPlot0.getRangeMinorGridlineStroke();
      CategoryMarker categoryMarker0 = new CategoryMarker((Comparable) null, multiplePiePlot0.DEFAULT_OUTLINE_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE, categoryPlot0.DEFAULT_OUTLINE_PAINT, stroke0, 1.0F);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, defaultCaret0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'columnKey' argument.
//         //
//         verifyException("org.jfree.data.gantt.TaskSeriesCollection", e);
//      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("pm+iI5:Km}G03", scatterRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      double[][] doubleArray0 = new double[8][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      boxAndWhiskerRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      scatterRenderer0.setDrawOutlines(true);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      levelRenderer0.equals(layeredBarRenderer0);
      boxAndWhiskerRenderer0.clone();
      Range range0 = levelRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
      assertEquals(0.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      DateAxis dateAxis0 = new DateAxis();
      Layer layer0 = Layer.BACKGROUND;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      double[][] doubleArray0 = new double[1][1];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 521.1197092030187;
      doubleArray1[1] = 548.93;
      doubleArray1[2] = 0.05;
      doubleArray1[3] = 1.0E-8;
      doubleArray1[4] = (double) 2.0F;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Range range0 = minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertEquals(274.465000005, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[1][8];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (-1260.616234);
      doubleArray1[1] = 250000.0;
      doubleArray1[2] = (-572.19225231337);
      doubleArray1[3] = 0.0;
      doubleArray1[4] = 1.0E10;
      doubleArray1[5] = 6206.2464811883;
      doubleArray1[6] = 225.0;
      doubleArray1[7] = (-5340.9);
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Range range0 = minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals(1.0E10, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = (MinMaxCategoryRenderer)minMaxCategoryRenderer0.clone();
      BoxAndWhiskerToolTipGenerator boxAndWhiskerToolTipGenerator0 = new BoxAndWhiskerToolTipGenerator();
      minMaxCategoryRenderer1.setBaseToolTipGenerator((CategoryToolTipGenerator) boxAndWhiskerToolTipGenerator0, true);
      double[][] doubleArray0 = new double[12][0];
      minMaxCategoryRenderer0.equals(minMaxCategoryRenderer1);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      assertTrue(barRenderer3D0.getDefaultShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      double[][] doubleArray0 = new double[3][6];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = 0.2;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) statisticalBarRenderer0.ZERO;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[1];
      doubleArray3[0] = 2182.4746755;
      doubleArray0[2] = doubleArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.equals(statisticalBarRenderer0);
      Range range0 = minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertNotNull(range0);
      assertEquals(1091.23733775, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Object object0 = minMaxCategoryRenderer0.clone();
      double[][] doubleArray0 = new double[3][3];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray1[1] = (-189.3139462828696);
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      minMaxCategoryRenderer0.equals(object0);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer1.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(boxAndWhiskerRenderer0.ZERO, (double) boxAndWhiskerRenderer0.ZERO, boxAndWhiskerRenderer0.ZERO, (double) boxAndWhiskerRenderer0.ZERO, boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_STROKE);
      double[][] doubleArray0 = new double[1][0];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray1[2] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray1[3] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.equals(boxAndWhiskerRenderer0);
      Range range0 = minMaxCategoryRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, false);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      EntityCollection entityCollection0 = categoryItemRendererState0.getEntityCollection();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo(entityCollection0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo1.getPlotInfo();
      defaultCategoryItemRenderer0.createState(plotRenderingInfo1);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle rectangle0 = new Rectangle((-1902), 1326);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 3138, 10);
      boolean boolean0 = statisticalBarRenderer0.hitTest(200.0, 1672.410166375675, (Graphics2D) null, rectangle0, combinedDomainCategoryPlot0, categoryAxis0, logAxis0, slidingGanttCategoryDataset0, (-1800), 1326, true, categoryItemRendererState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-30.0), (-2431.58));
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, 1703);
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(taskSeriesCollection0);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesItemLabelFont(0);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, (Font) null, spiderWebPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, true, false, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = boxAndWhiskerRenderer0.createState(plotRenderingInfo0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = new CategoryAxis("ZOOM_IN_DOMAIN");
      FileSystemHandling.shouldAllThrowIOExceptions();
      RoundRectangle2D.Double roundRectangle2D_Double0 = new RoundRectangle2D.Double(0.0, (-2203.25), (-1.0), 1.0F, 10, 1733.3595);
      Rectangle2D rectangle2D0 = roundRectangle2D_Double0.getBounds2D();
      Rectangle2D rectangle2D1 = statisticalBarRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, categoryAxis0, cyclicNumberAxis0, slidingGanttCategoryDataset0, 1703, 1610, false, categoryItemRendererState0, rectangle2D0);
      assertNull(rectangle2D1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      bufferedImage0.setAccelerationPriority(0.0F);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      BasicStroke basicStroke0 = new BasicStroke();
      basicStroke0.createStrokedShape(defaultCategoryItemRenderer0.DEFAULT_SHAPE);
      ValueMarker valueMarker0 = new ValueMarker(1.0F, defaultCategoryItemRenderer0.DEFAULT_PAINT, basicStroke0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("k");
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logarithmicAxis0, valueMarker0, rectangle2D_Double0);
      CategoryAxis categoryAxis0 = new CategoryAxis("q");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 10, 4214);
      JFreeChart jFreeChart0 = new JFreeChart("k", logarithmicAxis0.DEFAULT_AXIS_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, false, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = defaultCategoryItemRenderer0.createState(plotRenderingInfo0);
      boolean boolean0 = statisticalBarRenderer0.hitTest(5004.686, (-399.29487), graphics2D0, (Rectangle2D) null, combinedDomainCategoryPlot0, categoryAxis0, cyclicNumberAxis0, slidingGanttCategoryDataset0, (-605), (-2115), true, categoryItemRendererState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      statisticalBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      statisticalBarRenderer0.setPlot(combinedRangeCategoryPlot0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_BOX, defaultMultiValueCategoryDataset0, 10, (-496), false, 10, 1.0F);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      DateAxis dateAxis0 = new DateAxis();
      Layer layer0 = Layer.BACKGROUND;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("#Rc)|wh(9nFaIu", "#Rc)|wh(9nFaIu", 0.0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, dateAxis0, boxAndWhiskerRenderer0);
      CategoryAnchor categoryAnchor0 = categoryPlot0.getDomainGridlinePosition();
      categoryTextAnnotation0.setCategoryAnchor(categoryAnchor0);
      boxAndWhiskerRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("#Rc)|wh(9nFaIu");
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, subCategoryAxis0, dateAxis0, layer0, plotRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid category index: -1
//         //
//         verifyException("org.jfree.chart.axis.CategoryAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      LogAxis logAxis0 = new LogAxis();
      JFreeChart jFreeChart0 = new JFreeChart("b{IgbL35L?CH~CnH k", minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 500, 2978.3, 0.0, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, logAxis0, rectangle0, 1.0F, minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_PAINT, (Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      defaultCategoryItemRenderer0.setBaseLegendShape(combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      BasicStroke basicStroke0 = new BasicStroke();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, defaultCategoryItemRenderer0.DEFAULT_PAINT, basicStroke0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("%,f)^\"CHJ6>.{\"y.+");
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logarithmicAxis0, valueMarker0, rectangle2D_Double0);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset((CategoryDataset) null, 34, 34);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.findRangeBounds(slidingCategoryDataset0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.category.SlidingCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.modelToView((-2691));
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      IntervalMarker intervalMarker0 = new IntervalMarker(2, 3);
      RectangleAnchor rectangleAnchor0 = intervalMarker0.getLabelAnchor();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'base' argument.
//         //
//         verifyException("org.jfree.chart.util.RectangleInsets", e);
//      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) boxAndWhiskerRenderer0.ZERO, (double) statisticalBarRenderer0.ZERO);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, cyclicNumberAxis0, boxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      CategoryMarker categoryMarker0 = new CategoryMarker(200, categoryPlot0.DEFAULT_BACKGROUND_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, categoryAxis0.DEFAULT_AXIS_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_STROKE, 0.0F);
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("PROPERTIES");
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot1 = boxAndWhiskerRenderer0.getPlot();
      Polygon polygon0 = new Polygon();
      SortOrder sortOrder0 = categoryPlot1.getColumnRenderingOrder();
      logarithmicAxis0.setFixedDimension(0.0);
      categoryPlot0.setColumnRenderingOrder(sortOrder0);
      Rectangle rectangle0 = polygon0.getBounds();
      Rectangle2D rectangle2D0 = cyclicNumberAxis0.DEFAULT_TICK_LABEL_INSETS.createOutsetRectangle((Rectangle2D) rectangle0, true, true);
      statisticalBarRenderer1.drawRangeMarker((Graphics2D) null, categoryPlot1, logarithmicAxis0, categoryMarker0, rectangle2D0);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, cyclicNumberAxis0, boxAndWhiskerRenderer0);
      boxAndWhiskerRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, false, true, true, true);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      boxAndWhiskerRenderer0.updateCrosshairValues(categoryCrosshairState0, "SAVE", 1.0F, 10, 420, 10, 0.5F, plotOrientation0);
      assertEquals(1, boxAndWhiskerRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("~yTEiemz9QOGaalv");
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      DateAxis dateAxis0 = new DateAxis();
      Layer layer0 = Layer.BACKGROUND;
      rectangle2D_Double0.setFrameFromCenter((double) 2.0F, 0.2, 1676.3531093054385, 0.2);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, subCategoryAxis0, dateAxis0, layer0, plotRenderingInfo0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.createHotSpotShape((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, subCategoryAxis0, dateAxis0, defaultKeyedValues2DDataset0, 10, 1335, true, categoryItemRendererState0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Not implemented.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      BasicStroke basicStroke0 = (BasicStroke)PolarPlot.DEFAULT_GRIDLINE_STROKE;
      ValueMarker valueMarker0 = new ValueMarker(1.0F, defaultCategoryItemRenderer0.DEFAULT_PAINT, basicStroke0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("%,f)`\"C?J6>.{\"y.+");
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logarithmicAxis0, valueMarker0, rectangle2D_Double0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      double[][] doubleArray0 = new double[2][2];
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) 1.0F;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = (double) 1.0F;
      doubleArray1[3] = (double) 2.0F;
      doubleArray1[4] = 1.0E-100;
      doubleArray1[5] = 0.05;
      doubleArray1[6] = (double) scatterRenderer0.ZERO;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 1.0E-100;
      doubleArray2[1] = (double) 500;
      doubleArray2[2] = (double) 1.0F;
      doubleArray2[3] = 1.0E-8;
      doubleArray2[4] = 0.0;
      doubleArray2[5] = (double) 500;
      doubleArray0[1] = doubleArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.initialise(graphics2D0, rectangle2D_Double0, combinedDomainCategoryPlot0, defaultIntervalCategoryDataset0, (PlotRenderingInfo) null);
      scatterRenderer0.drawItem(graphics2D0, categoryItemRendererState0, rectangle2D_Double0, combinedDomainCategoryPlot0, (CategoryAxis) null, logarithmicAxis0, defaultIntervalCategoryDataset0, 15, 15, true, 15);
      assertEquals(7, scatterRenderer0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) boxAndWhiskerRenderer0.ZERO, (double) statisticalBarRenderer0.ZERO);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, cyclicNumberAxis0, boxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      boxAndWhiskerRenderer0.updateCrosshairValues(categoryCrosshairState0, "SAVE", 1.0F, 10, 420, 10, 0.5F, plotOrientation0);
      CategoryMarker categoryMarker0 = new CategoryMarker(200, categoryPlot0.DEFAULT_BACKGROUND_PAINT, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_STROKE, categoryAxis0.DEFAULT_AXIS_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_STROKE, 0.0F);
      Rectangle rectangle0 = new Rectangle(0, 2136, 10, 420);
      Rectangle2D rectangle2D0 = categoryAxis0.DEFAULT_AXIS_LABEL_INSETS.createInsetRectangle((Rectangle2D) rectangle0, false, false);
      boxAndWhiskerRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis0, categoryMarker0, rectangle2D0);
      assertTrue(boxAndWhiskerRenderer0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      CategoryPlot categoryPlot1 = jFreeChart0.getCategoryPlot();
      statisticalBarRenderer0.setPlot(categoryPlot1);
      standardEntityCollection0.iterator();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultMultiValueCategoryDataset0, 1, 636, true, 0.5F, 10);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 1, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1526.25813), 1.0E-8);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Ugzh3mbOSf*]", statisticalBarRenderer0.DEFAULT_VALUE_LABEL_FONT, spiderWebPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1806, 500, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(10, 1.0F, 0.05, 0.1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle2D_Double0);
      JFreeChart jFreeChart1 = new JFreeChart(combinedDomainCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart1, 16, 15, 10, 16, (-5468), (-5468), true, true, false, true, false, false, true);
      // Undeclared exception!
//      try { 
        chartPanel0.createGraphics2D();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.ChartPanel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.2, 0.2);
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", scatterRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 600, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      GeneralPath generalPath0 = new GeneralPath(combinedDomainCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE);
      Rectangle rectangle0 = generalPath0.getBounds();
      statisticalBarRenderer1.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, numberAxis0, intervalMarker0, rectangle0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      statisticalBarRenderer1.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot1, numberAxis0, intervalMarker0, rectangle0);
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0);
      CategoryPlot categoryPlot1 = jFreeChart0.getCategoryPlot();
      statisticalBarRenderer0.setPlot(categoryPlot1);
      standardEntityCollection0.iterator();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultMultiValueCategoryDataset0, (-4), (-4), true, (-4), (-4));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.getLastBarPaint();
      waterfallBarRenderer0.lookupSeriesShape(334);
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset((GanttCategoryDataset) null, 334, 334);
      barRenderer3D0.setWallPaint(waterfallBarRenderer0.DEFAULT_PAINT);
      boolean boolean0 = false;
      // Undeclared exception!
//      try { 
        barRenderer3D0.findRangeBounds((CategoryDataset) slidingGanttCategoryDataset0, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.gantt.SlidingGanttCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ArrowNeedle arrowNeedle0 = new ArrowNeedle(false);
      arrowNeedle0.getFillPaint();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Double1, 0.0, (Paint) null, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'paint' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("X0=W#VL6csB");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("Y(L-%)@H-Khs");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "Y(L-%)@H-Khs");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-76.87734935424596), 0.0);
      stackedBarRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      int int0 = boxAndWhiskerRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis("ZOOM_IN_DOMAIN");
      BufferedImage bufferedImage0 = new BufferedImage(200, 200, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP;
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, (PlotOrientation) null, rectangle2D0, rectangle2D0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.util.RectangleAnchor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 500);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      Font font0 = defaultPolarItemRenderer0.getItemLabelFont(10, 10, true);
      JFreeChart jFreeChart0 = new JFreeChart("Ugzh3mbOSf*]", font0, combinedDomainCategoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer1.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle2D0);
      double[][] doubleArray0 = new double[0][3];
      double[][] doubleArray1 = new double[1][4];
      double[] doubleArray2 = new double[1];
      doubleArray2[0] = (double) 500;
      doubleArray1[0] = doubleArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = null;
//      try {
        defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // DefaultIntervalCategoryDataset: the number of series in the start value dataset does not match the number of series in the end value dataset.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) statisticalBarRenderer0.ZERO);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, cyclicNumberAxis0, boxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, (-16), (-16), 500, 500, 10, true, false, false, false, true, false);
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      boxAndWhiskerRenderer0.updateCrosshairValues(categoryCrosshairState0, 300, "ZOOM_RANGE_BOTH", 0.05, 500, 15, 3.0, plotOrientation0);
      boxAndWhiskerRenderer0.getDrawingSupplier();
      boxAndWhiskerRenderer0.setMedianVisible(false);
      assertFalse(boxAndWhiskerRenderer0.getAutoPopulateSeriesOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle2D_Double0, (RectangleInsets) null, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis("ZOOM_IN_DOMAIN");
      BufferedImage bufferedImage0 = new BufferedImage(200, 200, 10);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ZOOM_IN_DOMAIN");
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ValueMarker valueMarker0 = new ValueMarker(0.05, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_STROKE);
      valueMarker0.setLabel("~_wo;>");
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, valueMarker0, rectangle2D0);
      assertEquals(1.0E-100, logAxis0.getSmallestValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) scatterRenderer0.ZERO, 10, scatterRenderer0.DEFAULT_OUTLINE_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double(1.0E-8, 1.0E-8, 10, 1.0F);
      logAxis0.setTickMarkStroke(statisticalBarRenderer0.DEFAULT_STROKE);
      intervalMarker0.setOutlinePaint(statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      JFreeChart jFreeChart0 = new JFreeChart("Ugzh3mbOSf*]", logAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = new BufferedImage(10, 15, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle2D_Double0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.setXOffset(4.0);
      assertEquals(2.0, lineRenderer3D0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("A1E{w|iBR@IK`o");
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      DateAxis dateAxis0 = new DateAxis();
      Layer layer0 = Layer.BACKGROUND;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("A1E{w|iBR@IK`o", 500, 0.0);
      boxAndWhiskerRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, subCategoryAxis0, dateAxis0, layer0, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.annotations.CategoryTextAnnotation", e);
//      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker((-773.357284667665), 10, scatterRenderer0.DEFAULT_OUTLINE_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      intervalMarker0.setLabel("Null 'stroke' argument.");
      logAxis0.setTickMarkStroke(statisticalBarRenderer0.DEFAULT_STROKE);
      JFreeChart jFreeChart0 = new JFreeChart("Ugzh3mbOSf*]", logAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = new BufferedImage(10, 15, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle2D_Double0);
      statisticalBarRenderer0.setGradientPaintTransformer((GradientPaintTransformer) null);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      CategoryItemRendererState categoryItemRendererState0 = scatterRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, defaultCategoryDataset0, (PlotRenderingInfo) null);
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.drawVerticalItem(graphics2D0, categoryItemRendererState0, rectangle2D0, combinedDomainCategoryPlot0, categoryAxis0, logAxis0, defaultStatisticalCategoryDataset0, 1296, 500, 500, true);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 500, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 1195.2544);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM_RIGHT;
      statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D_Double0, rectangle2D_Double0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Double0, categoryAxis0, (ValueAxis) null, (Layer) null, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) boxAndWhiskerRenderer0.ZERO);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, (CategoryAxis) null, cyclicNumberAxis0, boxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-1188), 15, (-1188), 1, 500, 151, false, true, true, false, false, false);
      categoryPlot0.getFixedLegendItems();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.getLegendItems();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(3.0, 3.0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.RIGHT;
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JTextPane jTextPane0 = new JTextPane();
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jTextPane0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getCharacterBounds(0);
      RectangleInsets rectangleInsets0 = Plot.DEFAULT_INSETS;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, rectangleInsets0, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'base' argument.
//         //
//         verifyException("org.jfree.chart.util.RectangleInsets", e);
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, 2.0F, scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      Font font0 = Axis.DEFAULT_TICK_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Ugzh3mbOSf*]", font0, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle2D_Double0);
      double[][] doubleArray0 = new double[6][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Rectangle rectangle0 = new Rectangle();
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
      assertEquals(0.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("ygQ-%9?6.;jS");
      minMaxCategoryRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
//      try { 
        minMaxCategoryRenderer0.clone();
//        fail("Expecting exception: CloneNotSupportedException");
      
//      } catch(CloneNotSupportedException e) {
//         //
//         // Base item URL generator not cloneable.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LegendTitle legendTitle0 = new LegendTitle(combinedDomainCategoryPlot0);
      legendTitle0.getLegendItemGraphicAnchor();
      combinedDomainCategoryPlot0.getOrientation();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, (-13.933238572459382));
      intervalMarker0.getLabelOffsetType();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LogAxis logAxis0 = new LogAxis();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      Week week0 = new Week(1755, 24);
      PeriodAxis periodAxis0 = new PeriodAxis("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", week0, week0);
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, periodAxis0, rectangle2D_Double0, 0.0, logAxis0.DEFAULT_TICK_MARK_PAINT, statisticalBarRenderer0.DEFAULT_STROKE);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Range(double, double): require lower (1.39240928132E12) <= upper (1.392409281319E12).
//         //
//         verifyException("org.jfree.data.Range", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) statisticalBarRenderer0.ZERO);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, cyclicNumberAxis0, boxAndWhiskerRenderer0);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.MIDDLE;
      categoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      categoryAxis0.setLabelPaint(cyclicNumberAxis0.DEFAULT_AXIS_LINE_PAINT);
      boxAndWhiskerRenderer0.lookupSeriesPaint(10);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 500, (-2), (-2), 500, 500, 10, true, false, true, false, true, false);
      categoryPlot0.getFixedLegendItems();
      boxAndWhiskerRenderer0.getLegendItems();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      AreaRendererEndType areaRendererEndType0 = stackedAreaRenderer0.getEndType();
      stackedAreaRenderer0.setEndType(areaRendererEndType0);
      assertFalse(stackedAreaRenderer0.getAutoPopulateSeriesOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, (double) boxAndWhiskerRenderer0.ZERO);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, cyclicNumberAxis0, boxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      ValueAxis valueAxis0 = stackedBarRenderer3D0.getRangeAxis(categoryPlot0, (-2));
      assertEquals(500, ValueAxis.MAXIMUM_TICK_COUNT);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, true, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      JFreeChart jFreeChart1 = new JFreeChart("PROPERTIES", jFreeChart0.DEFAULT_TITLE_FONT, fastScatterPlot0, true);
      BufferedImage bufferedImage0 = new BufferedImage(200, 200, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      bufferedImageRenderingSource0.getSelectionState(defaultPieDataset0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ValueMarker valueMarker0 = new ValueMarker(0.2, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_STROKE);
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, valueMarker0, rectangle2D0);
      LegendTitle legendTitle0 = new LegendTitle(fastScatterPlot0);
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicAnchor();
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D0, logAxis0.DEFAULT_AXIS_LABEL_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, true, true, true);
      chartPanel0.getChartRenderingInfo();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      JFreeChart jFreeChart1 = new JFreeChart("PROPERTIES", jFreeChart0.DEFAULT_TITLE_FONT, fastScatterPlot0, true);
      BufferedImage bufferedImage0 = new BufferedImage(200, 200, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      bufferedImageRenderingSource0.getSelectionState(defaultPieDataset0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ValueMarker valueMarker0 = new ValueMarker(1.0E-8, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_STROKE);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0, 0.0);
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle2D_Double0);
      fastScatterPlot0.drawBackgroundImage(graphics2D0, rectangle2D_Double0);
      WaferMapRenderer waferMapRenderer0 = new WaferMapRenderer(10, 4);
      WaferMapPlot waferMapPlot0 = waferMapRenderer0.getPlot();
      LegendTitle legendTitle0 = new LegendTitle((LegendItemSource) null);
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicAnchor();
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) 500, 4.0, (double) 10, (double) 680);
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, 3);
      Rectangle2D rectangle2D0 = affineTransformOp0.getBounds2D(bufferedImage0);
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D_Double0, rectangle2D0, waferMapPlot0.DEFAULT_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
      assertEquals(100.7385373339057, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) statisticalBarRenderer0.ZERO);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, cyclicNumberAxis0, boxAndWhiskerRenderer0);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer1.getPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = new BoxAndWhiskerRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("`8!PD,HdVB\"h;");
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, categoryPlot0, categoryAxis0, cyclicNumberAxis0, taskSeriesCollection0, (-507), (-507), false, (CategoryItemRendererState) null, (Rectangle2D) null);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, true, true, true);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      JFreeChart jFreeChart1 = new JFreeChart("PROPERTIES", jFreeChart0.DEFAULT_TITLE_FONT, fastScatterPlot0, true);
      BufferedImage bufferedImage0 = new BufferedImage(200, 200, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      bufferedImageRenderingSource0.getSelectionState(defaultPieDataset0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ValueMarker valueMarker0 = new ValueMarker(0.0, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_STROKE);
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, valueMarker0, rectangle2D0);
      LegendTitle legendTitle0 = new LegendTitle(fastScatterPlot0);
      RectangleAnchor rectangleAnchor0 = legendTitle0.getLegendItemGraphicAnchor();
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalBarRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D0, logAxis0.DEFAULT_AXIS_LABEL_INSETS, (LengthAdjustmentType) null, rectangleAnchor0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getOrientation();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false, false, false, false, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setTickMarkStroke(statisticalBarRenderer0.DEFAULT_OUTLINE_STROKE);
      JFreeChart jFreeChart1 = new JFreeChart("PROPERTIES", jFreeChart0.DEFAULT_TITLE_FONT, fastScatterPlot0, false);
      BufferedImage bufferedImage0 = new BufferedImage(200, 200, 10);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      DateAxis dateAxis0 = new DateAxis("ZOOM_IN_BOTH");
      CategoryItemRendererState categoryItemRendererState0 = boxAndWhiskerRenderer0.initialise(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, (CategoryDataset) null, (PlotRenderingInfo) null);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.createHotSpotBounds(graphics2D0, rectangle2D0, combinedDomainCategoryPlot0, categoryAxis3D0, dateAxis0, (CategoryDataset) null, 10, 15, false, categoryItemRendererState0, rectangle2D0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      LinkedList<JLabel> linkedList0 = new LinkedList<JLabel>();
      customCategoryURLGenerator0.addURLSeries(linkedList0);
      lineAndShapeRenderer0.setSeriesURLGenerator(2, (CategoryURLGenerator) customCategoryURLGenerator0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)55;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte)13;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      lineAndShapeRenderer0.setLegendTextFont(2, levelRenderer0.DEFAULT_VALUE_LABEL_FONT);
      lineAndShapeRenderer0.getSeriesLinesVisible(1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(levelRenderer0.DEFAULT_STROKE);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getItemShapeFilled((-521), 2);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      plotRenderingInfo0.equals(categoryStepRenderer0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      categoryItemRendererState0.getCrosshairState();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      lineAndShapeRenderer0.updateCrosshairValues((CategoryCrosshairState) null, categoryStepRenderer0.ZERO, scatterRenderer0.ZERO, 0.0, 1, (double) levelRenderer0.ZERO, 574.4918, plotOrientation0);
      assertTrue(levelRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      Month month0 = new Month(10, (-2004));
      PeriodAxis periodAxis0 = new PeriodAxis("", month0, month0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis0, periodAxis0, levelRenderer0);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      Stroke stroke0 = categoryAxis0.getAxisLineStroke();
      levelRenderer0.drawRangeLine(graphics2D0, categoryPlot0, periodAxis0, rectangle2D0, 1943.8144655236, categoryPlot0.DEFAULT_GRIDLINE_PAINT, stroke0);
      // Undeclared exception!
//      try { 
        levelRenderer0.getLegendItem(10, 10);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'dataset' argument.
//         //
//         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) boxAndWhiskerRenderer0.ZERO);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot(defaultValueDataset0);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-82);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-79);
      byteArray0[3] = (byte) (-5);
      byteArray0[4] = (byte)31;
      byteArray0[5] = (byte) (-6);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boxAndWhiskerRenderer0.setMeanVisible(false);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(valueAxis0);
      boxAndWhiskerRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 1);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.getErrorIndicatorStroke();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.0, 1592.0);
      barRenderer3D0.getYOffset();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("^zkUz(};:f#i\"9");
      barRenderer3D0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      BarRenderer.setDefaultShadowsVisible(true);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      chartRenderingInfo0.getChartArea();
      logAxis0.setTickMarkStroke(statisticalBarRenderer0.DEFAULT_STROKE);
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Ugzh3mbOSf*]", font0, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 23, (double) 15, (double) 2.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setAxisLinePaint(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, logAxis0, rectangle2D_Double0, 2.0F, stackedBarRenderer3D0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      Graphics2D graphics2D1 = bufferedImage0.createGraphics();
      CategoryAxis categoryAxis0 = new CategoryAxis("An~E<yS|j3_+");
      Layer layer0 = Layer.FOREGROUND;
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Layer layer1 = Layer.BACKGROUND;
      boxAndWhiskerRenderer0.drawAnnotations(graphics2D1, rectangle2D_Double0, categoryAxis0, numberAxis3D0, layer1, plotRenderingInfo0);
      assertEquals(0.05, CategoryAxis.DEFAULT_AXIS_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      LogAxis logAxis1 = new LogAxis();
      logAxis1.setTickMarkStroke(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Ngh(C18", logAxis0.DEFAULT_TICK_LABEL_FONT, combinedDomainCategoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(4, 11, (double) 1.0F, 0.0, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setAxisLinePaint(combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      TextBlock textBlock0 = new TextBlock();
      TextBox textBox0 = new TextBox(textBlock0);
      Stroke stroke0 = textBox0.getOutlineStroke();
      defaultCategoryItemRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, logAxis0, rectangle2D0, 1.0, stackedBarRenderer3D0.DEFAULT_WALL_PAINT, stroke0);
      bufferedImage0.createGraphics();
      CategoryAxis categoryAxis0 = new CategoryAxis("Ugzh3mbOSf*]");
      Layer layer0 = Layer.FOREGROUND;
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
//      try { 
        plotRenderingInfo0.getSubplotInfo(500);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 500, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      logAxis0.setTickMarkStroke(statisticalBarRenderer0.DEFAULT_STROKE);
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Ugzh3mbOSf*]", font0, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 23, (double) 15, (double) 2.0F, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setAxisLinePaint(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, logAxis0, rectangle2D0, 1.0E-8, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, statisticalBarRenderer0.DEFAULT_STROKE);
      Graphics2D graphics2D1 = bufferedImage0.createGraphics();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      Layer layer0 = Layer.FOREGROUND;
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      boxAndWhiskerRenderer0.drawAnnotations(graphics2D1, rectangle2D_Double0, categoryAxis0, logAxis0, layer0, plotRenderingInfo0);
      assertEquals(0.0, logAxis0.getLabelAngle(), 0.01);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      String[] stringArray0 = new String[8];
      SymbolAxis symbolAxis0 = new SymbolAxis("8Cawy$;0eS-2", stringArray0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, symbolAxis0, boxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-806), 500, (-1150), 8, 16, 500, true, true, false, false, true, false);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      boxAndWhiskerRenderer0.updateCrosshairValues(categoryCrosshairState0, 500, true, 1958.72281, 15, (-444.65347958), 15.0, plotOrientation0);
      boxAndWhiskerRenderer0.getLegendItems();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(2243.4542714, 1967.7423);
      barRenderer3D0.setMaximumBarWidth(10);
      assertTrue(barRenderer3D0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("PieLabelLinkStyle.CUBIC_CURVE");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("PieLabelLinkStyle.CUBIC_CURVE");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.hitTest(1.0F, (-10.0), (Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, categoryAxis3D0, numberAxis3D0, (CategoryDataset) null, 10, 500, false, (CategoryItemRendererState) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      String[] stringArray0 = new String[8];
      SymbolAxis symbolAxis0 = new SymbolAxis("8Cawy$;dfeSU2", stringArray0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer1.getPlot();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("8Cawy$;dfeSU2");
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D_Double0, (CategoryPlot) null, categoryAxis3D0, symbolAxis0, (CategoryDataset) null, (-2175), (-2175), false, (CategoryItemRendererState) null, rectangle2D_Double0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("TM7");
      minMaxCategoryRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      minMaxCategoryRenderer0.clone();
      double[][] doubleArray0 = new double[9][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Range range0 = ganttRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      String[] stringArray0 = new String[8];
      SymbolAxis symbolAxis0 = new SymbolAxis("8Cawy$;0eS-2", stringArray0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      NumberAxis numberAxis0 = new NumberAxis();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(taskSeriesCollection0, categoryAxis0, symbolAxis0, boxAndWhiskerRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-806), 500, 2672, 16, (-591), 10, false, false, false, true, true, true);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      boxAndWhiskerRenderer0.updateCrosshairValues(categoryCrosshairState0, 2.0F, true, 500, (-1150), 99.5503, 0.0, plotOrientation0);
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, (-1567.5));
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      Rectangle2D rectangle2D0 = combinedDomainCategoryPlot0.DEFAULT_INSETS.createAdjustedRectangle(rectangle2D_Double0, lengthAdjustmentType0, lengthAdjustmentType0);
      boxAndWhiskerRenderer0.drawOutline(graphics2D0, combinedDomainCategoryPlot0, rectangle2D0);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.lookupSeriesPaint(10);
      LegendItemCollection legendItemCollection0 = minMaxCategoryRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.setSeriesItemLabelGenerator((-2793), (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawOutline((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Double0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.plot.Plot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getLegendItem(10, 10);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      String string0 = "-]50nH(MbkrDoRW#[Z^";
      JFreeChart jFreeChart0 = new JFreeChart("-]50nH(MbkrDoRW#[Z^", fastScatterPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 1297);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Point point0 = new Point();
      Point point1 = new Point(point0);
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(point1, dimension0);
      CategoryPlot categoryPlot0 = null;
      ValueAxis valueAxis0 = null;
      double[][] doubleArray0 = new double[5][0];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) 0.5F;
      doubleArray1[1] = (double) 0.5F;
      doubleArray1[2] = (double) 0;
      doubleArray1[3] = (double) ganttRenderer0.ZERO;
      doubleArray1[4] = (double) 0.0F;
      doubleArray1[5] = (double) 1.0F;
      doubleArray1[6] = (double) 2.0F;
      doubleArray1[7] = (double) 0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[9];
      doubleArray2[0] = (double) 10;
      doubleArray2[1] = 3.0;
      doubleArray2[2] = (double) 0.5F;
      doubleArray2[3] = (double) 0.5F;
      doubleArray2[4] = (double) 2.0F;
      doubleArray2[5] = 3.0;
      doubleArray2[6] = 0.05;
      doubleArray2[7] = (double) stackedAreaRenderer0.ZERO;
      doubleArray2[8] = 0.0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[3];
      doubleArray3[0] = (double) levelRenderer0.ZERO;
      doubleArray3[1] = 0.2;
      doubleArray3[2] = (double) 1.0F;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[9];
      doubleArray4[0] = 3.0;
      doubleArray4[1] = (double) 0;
      doubleArray4[2] = (double) 0;
      doubleArray4[3] = (double) 0;
      doubleArray4[4] = (double) 0;
      doubleArray4[5] = (double) 10;
      doubleArray4[6] = (double) 1.0F;
      doubleArray4[7] = 878.723;
      doubleArray4[8] = (double) 0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[9];
      doubleArray5[0] = (double) 0;
      doubleArray5[1] = (double) 10;
      doubleArray5[2] = (double) 0;
      doubleArray5[3] = (double) 0;
      doubleArray5[4] = (double) 15;
      doubleArray5[5] = (double) 10;
      doubleArray5[6] = (double) 0;
      doubleArray5[7] = (double) stackedAreaRenderer0.ZERO;
      doubleArray5[8] = (double) 15;
      doubleArray0[4] = doubleArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        ganttRenderer0.createHotSpotBounds(graphics2D0, rectangle0, (CategoryPlot) null, categoryAxis3D0, (ValueAxis) null, defaultIntervalCategoryDataset0, 2332, 5, true, categoryItemRendererState0, rectangle0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0F, 0.0);
      stackedBarRenderer3D0.lookupSeriesShape((-1553));
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      stackedBarRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, 10);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.isMeanVisible();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      levelRenderer0.calculateSeriesWidth(521.704833994, categoryAxis0, 427, 60);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      LegendItem legendItem0 = scatterRenderer0.getLegendItem(10, 3316);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, scatterRenderer0.DEFAULT_OUTLINE_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      logAxis0.setTickMarkStroke(statisticalBarRenderer0.DEFAULT_STROKE);
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Ugzh3mbOSf*]", font0, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 23, (double) 15, (double) 2.0F, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle2D_Double0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setAxisLinePaint(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.drawRangeLine(graphics2D0, combinedDomainCategoryPlot0, logAxis0, rectangle2D0, 1.0E-8, combinedDomainCategoryPlot0.DEFAULT_GRIDLINE_PAINT, statisticalBarRenderer0.DEFAULT_STROKE);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      scatterRenderer0.setItemMargin(0.2);
      assertTrue(scatterRenderer0.getAutoPopulateSeriesPaint());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, scatterRenderer0.DEFAULT_OUTLINE_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      chartRenderingInfo0.getChartArea();
      logAxis0.setTickMarkStroke(statisticalBarRenderer0.DEFAULT_STROKE);
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      defaultPolarItemRenderer0.getSeriesItemLabelsVisible(0);
      defaultCategoryItemRenderer0.setSeriesShapesVisible(500, (Boolean) null);
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setAxisLinePaint(categoryPlot0.DEFAULT_OUTLINE_PAINT);
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, logAxis0, (Rectangle2D) null, 0.0, defaultPolarItemRenderer0.DEFAULT_VALUE_LABEL_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.axis.LogAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultCategoryDataset0);
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setSeriesShapesVisible(10, (Boolean) null);
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      numberAxis3D0.setAxisLinePaint(categoryPlot0.DEFAULT_GRIDLINE_PAINT);
      defaultCategoryItemRenderer0.drawRangeLine((Graphics2D) null, (CategoryPlot) null, numberAxis3D0, (Rectangle2D) null, 3.0, statisticalBarRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_OUTLINE_STROKE);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setItemMargin((double) statisticalBarRenderer0.ZERO);
      assertFalse(statisticalBarRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getOrientation();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setTickMarkStroke(statisticalBarRenderer0.DEFAULT_OUTLINE_STROKE);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(60.94258341824067, 0.0, (-2630.14404173574), 10);
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1969, 1024, chartRenderingInfo1);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      levelRenderer0.drawBackground(graphics2D0, combinedRangeCategoryPlot0, rectangle2D0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryMarker categoryMarker0 = new CategoryMarker(true);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawDomainMarker(graphics2D0, combinedDomainCategoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      fastScatterPlot0.getOrientation();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(fastScatterPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, true, true, true, true, false);
      ChartRenderingInfo chartRenderingInfo0 = chartPanel0.getChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      logAxis0.setTickMarkStroke(statisticalBarRenderer0.DEFAULT_OUTLINE_STROKE);
      JFreeChart jFreeChart1 = new JFreeChart("org.jfree.chart.renderer.xy.SamplingXYLineRenderer", jFreeChart0.DEFAULT_TITLE_FONT, fastScatterPlot0, false);
      BufferedImage bufferedImage0 = new BufferedImage(200, 200, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ValueMarker valueMarker0 = new ValueMarker(0.0, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT, fastScatterPlot0.DEFAULT_OUTLINE_STROKE);
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, valueMarker0, rectangle2D0);
      Boolean boolean0 = new Boolean(true);
      boolean boolean1 = statisticalBarRenderer0.isDrawBarOutline();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.getPassCount();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.getRangeBounds(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      groupedStackedBarRenderer0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("#$W}ti?D~!UNo2O<!");
      categoryStepRenderer0.setAutoPopulateSeriesFillPaint(false);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultIntervalCategoryDataset0, categoryAxis3D0, (ValueAxis) null, stackedBarRenderer0);
      stackedBarRenderer0.getDomainAxis(categoryPlot0, defaultIntervalCategoryDataset0);
      categoryStepRenderer0.setAutoPopulateSeriesStroke(true);
      categoryStepRenderer0.getLegendItem(3, 5);
      AreaRenderer areaRenderer0 = new AreaRenderer();
      areaRenderer0.clone();
      categoryStepRenderer0.getLegendItem((-2998), 6);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItem(3, 39);
      minMaxCategoryRenderer0.setGroupPaint(groupedStackedBarRenderer0.DEFAULT_OUTLINE_PAINT);
      assertFalse(groupedStackedBarRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D_Double0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      assertTrue(stackedBarRenderer3D0.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = null;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getPlot();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(4075.77347672, (double) levelRenderer0.ZERO, 0.2, (-411.91063981567896));
      levelRenderer0.getLegendItem((-82), (-82));
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      // Undeclared exception!
//      try { 
        levelRenderer0.drawBackground((Graphics2D) null, (CategoryPlot) null, rectangle2D0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.clone();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis("");
      logAxis0.setTickMarkStroke(combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("NoV>_p 6", logAxis0.DEFAULT_AXIS_LABEL_FONT, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 3470, 10, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ValueMarker valueMarker0 = new ValueMarker(0.05);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, valueMarker0, (Rectangle2D) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.axis.LogAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0);
      Graphics2D graphics2D0 = null;
      CategoryDataset categoryDataset0 = null;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      categoryAxis3D0.setTickLabelFont((Comparable) true, logAxis0.DEFAULT_TICK_LABEL_FONT);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D_Double0, rectangle2D0, combinedDomainCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.util.RectangleAnchor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      statisticalLineAndShapeRenderer0.createState(plotRenderingInfo0);
      statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) null);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = null;
//      try {
        bufferedImageRenderingSource0 = new BufferedImageRenderingSource((BufferedImage) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'image' argument.
//         //
//         verifyException("org.jfree.chart.BufferedImageRenderingSource", e);
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      defaultMultiValueCategoryDataset0.getColumnCount();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Base tool tip generator not cloneable.");
      String[] stringArray0 = new String[3];
      stringArray0[1] = "Base tool tip generator not cloneable.";
      stringArray0[2] = "rr*r<r`";
      SymbolAxis symbolAxis0 = new SymbolAxis("rr*r<r`", stringArray0);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, extendedCategoryAxis0, symbolAxis0, statisticalBarRenderer0);
      ValueAxis valueAxis0 = barRenderer3D0.getRangeAxis(categoryPlot0, (-989));
      assertEquals(0.05, ValueAxis.DEFAULT_UPPER_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      int int0 = (-1);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Graphics2D graphics2D0 = null;
      String string0 = "_Ct";
      statisticalBarRenderer0.getPlot();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double((-411.91063981567896), 2249.43, 2249.43, 0.0);
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      // Undeclared exception!
//      try { 
        levelRenderer0.drawBackground((Graphics2D) null, (CategoryPlot) null, rectangle2D0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) statisticalBarRenderer0.ZERO, (double) statisticalBarRenderer0.ZERO);
      statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
      PolarPlot polarPlot0 = new PolarPlot();
      polarPlot0.getOrientation();
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      rectangle2D_Double0.setRect(rectangle2D0);
      LengthAdjustmentType lengthAdjustmentType1 = LengthAdjustmentType.NO_CHANGE;
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer2 = new StatisticalBarRenderer();
      statisticalBarRenderer2.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D0, rectangle2D0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType1, (RectangleAnchor) null);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      assertTrue(statisticalLineAndShapeRenderer0.getBaseShapesFilled());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.2, 0.2);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
      PolarPlot polarPlot0 = new PolarPlot();
      PlotOrientation plotOrientation0 = polarPlot0.getOrientation();
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.BOTTOM;
      statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D0, polarPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(polarPlot0.DEFAULT_OUTLINE_STROKE);
      CategoryURLGenerator categoryURLGenerator0 = statisticalLineAndShapeRenderer0.getURLGenerator(10, 1431, false);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker((-772.859139), 10, scatterRenderer0.DEFAULT_OUTLINE_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      logAxis0.setTickMarkStroke(statisticalBarRenderer0.DEFAULT_STROKE);
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Ugzh3mbOSf*]", font0, combinedDomainCategoryPlot0, false);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "}[#['q");
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3, (double) 15, (double) 2.0F, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      statisticalBarRenderer0.calculateDomainMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle2D0, rectangle2D_Double0, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, (RectangleAnchor) null);
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle2D_Double0);
      statisticalBarRenderer0.drawDomainLine(graphics2D0, combinedDomainCategoryPlot1, rectangle2D_Double0, 0.0F, stackedBarRenderer3D0.DEFAULT_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      scatterRenderer0.getUseOutlinePaint();
      double double0 = stackedBarRenderer3D0.getBase();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'date' argument.", 0.0, 0.0);
      Layer layer0 = Layer.BACKGROUND;
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultBoxAndWhiskerCategoryDataset0, 11, 6);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      FlowArrangement flowArrangement0 = new FlowArrangement();
      LegendTitle legendTitle0 = new LegendTitle(boxAndWhiskerRenderer0, flowArrangement0, flowArrangement0);
      RectangleEdge rectangleEdge0 = legendTitle0.getLegendItemGraphicEdge();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.getItemMiddle(0.0, 0.0, slidingCategoryDataset0, categoryAxis3D0, rectangle2D_Double0, rectangleEdge0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid category index: -1
//         //
//         verifyException("org.jfree.chart.axis.CategoryAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(3.0, 3.0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      Color color0 = (Color)PiePlot.DEFAULT_LABEL_SHADOW_PAINT;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.setValue((Number) 3.0, (Comparable) barRenderer3D0.ZERO, (Comparable) "{2}");
      waterfallBarRenderer0.findRangeBounds((CategoryDataset) defaultCategoryDataset0);
      int int0 = waterfallBarRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(8.0, 3.0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D(0, 3.0);
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      stackedBarRenderer3D1.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D1.addEntity(standardEntityCollection0, stackedBarRenderer3D0.DEFAULT_SHAPE, (CategoryDataset) null, 0, 1, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'dataset' argument.
//         //
//         verifyException("org.jfree.chart.labels.AbstractCategoryItemLabelGenerator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      double[][] doubleArray0 = new double[5][2];
      double[] doubleArray1 = new double[0];
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[5];
      doubleArray3[0] = 3.0;
      doubleArray3[2] = 0.0;
      doubleArray3[3] = (double) 0.0F;
      doubleArray3[4] = (double) statisticalBarRenderer0.ZERO;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[1];
      doubleArray4[0] = (double) 500;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[0];
      doubleArray0[4] = doubleArray5;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(1660.7, 846.1988);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItems();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainMinorGridlineStroke();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Double0, 0.0, combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, (Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'stroke' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(logAxis0);
      combinedDomainXYPlot0.getDomainMinorGridlineStroke();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Double0, (-771.9527061), combinedDomainXYPlot0.DEFAULT_CROSSHAIR_PAINT, categoryAxis3D0.DEFAULT_AXIS_LINE_STROKE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("awy$;0eS-2");
      String[] stringArray0 = new String[4];
      stringArray0[2] = "awy$;0eS-2";
      boxAndWhiskerRenderer0.getLegendItem(10, (-1364));
      SymbolAxis symbolAxis0 = new SymbolAxis("awy$;0eS-2", stringArray0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) taskSeriesCollection0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.05, 3.0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItems();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      combinedDomainXYPlot0.getDomainMinorGridlineStroke();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.drawDomainLine((Graphics2D) null, combinedDomainCategoryPlot0, rectangle2D_Double0, 0.05, barRenderer3D0.DEFAULT_OUTLINE_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryToolTipGenerator categoryToolTipGenerator0 = boxAndWhiskerRenderer0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker(10, 10, scatterRenderer0.DEFAULT_OUTLINE_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      logAxis0.setTickMarkStroke(statisticalBarRenderer0.DEFAULT_STROKE);
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Ugzh3mbOSf*]", font0, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3, (double) 15, (double) 2.0F, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle2D_Double0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      stackedBarRenderer3D0.setShadowVisible(false);
      double[][] doubleArray0 = new double[8][3];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 12.0;
      doubleArray1[1] = (double) 10;
      doubleArray1[2] = (double) 500;
      doubleArray1[3] = 8.0;
      doubleArray1[4] = (double) 3;
      doubleArray0[0] = doubleArray1;
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      statisticalBarRenderer1.findRangeBounds((CategoryDataset) defaultCategoryDataset0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(3.0, 4.0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItems();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      Stroke stroke0 = combinedDomainXYPlot0.getDomainMinorGridlineStroke();
      statisticalBarRenderer1.drawDomainLine(graphics2D0, combinedDomainCategoryPlot0, rectangle2D_Double0, 1353.744637649, groupedStackedBarRenderer0.DEFAULT_OUTLINE_PAINT, stroke0);
      assertEquals(0.0, combinedDomainCategoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("8Cawy$;0eS-2");
      String[] stringArray0 = new String[8];
      stringArray0[2] = "8Cawy$;0eS-2";
      SymbolAxis symbolAxis0 = new SymbolAxis("8Cawy$;0eS-2", stringArray0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 3296.169554, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryAxis categoryAxis0 = new CategoryAxis("8Cawy$;0eS-2");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, defaultCategoryDataset0, plotRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker((-772.859139), 10, scatterRenderer0.DEFAULT_OUTLINE_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      logAxis0.setTickMarkStroke(statisticalBarRenderer0.DEFAULT_STROKE);
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Ugzh3mbOSf*]", font0, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3, (double) 15, (double) 2.0F, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle2D_Double0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      stackedBarRenderer3D0.setShadowVisible(false);
      double[][] doubleArray0 = new double[8][3];
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 12.0;
      doubleArray1[1] = (double) 10;
      doubleArray1[2] = (double) 500;
      doubleArray1[3] = 8.0;
      doubleArray1[4] = (double) 3;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[6];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = (double) 1.0F;
      doubleArray2[2] = 0.0;
      doubleArray2[3] = 0.0;
      doubleArray2[4] = 0.0;
      doubleArray2[5] = 3.0;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[6];
      doubleArray3[0] = 0.2;
      doubleArray3[1] = 0.0;
      doubleArray3[2] = (-3223.079992617221);
      doubleArray3[3] = (double) statisticalBarRenderer0.ZERO;
      doubleArray3[4] = 0.0;
      doubleArray3[5] = (double) 10;
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[1];
      doubleArray4[0] = 0.0;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[6];
      doubleArray5[0] = (double) 1.0F;
      doubleArray5[1] = (double) 0.5F;
      doubleArray5[2] = (double) 10;
      doubleArray5[3] = (double) 3;
      doubleArray5[4] = (-3223.079992617221);
      doubleArray5[5] = 15.0;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[5];
      doubleArray6[0] = (double) 10;
      doubleArray6[1] = (double) 15;
      doubleArray6[2] = 3.0;
      doubleArray6[3] = 3.0;
      doubleArray6[4] = (double) stackedBarRenderer3D0.ZERO;
      doubleArray0[5] = doubleArray6;
      double[] doubleArray7 = new double[8];
      doubleArray7[0] = (double) 3;
      doubleArray7[1] = (-2520.0427630332806);
      doubleArray7[2] = 0.05;
      doubleArray7[3] = 4.0;
      doubleArray7[4] = (double) 500;
      doubleArray7[5] = 0.0;
      doubleArray7[6] = 8.0;
      doubleArray7[7] = 0.2;
      doubleArray0[6] = doubleArray7;
      double[] doubleArray8 = new double[8];
      doubleArray8[0] = 0.2;
      doubleArray8[1] = 4.0;
      doubleArray8[2] = 0.2;
      doubleArray8[3] = (double) 10;
      doubleArray8[4] = (double) 10;
      doubleArray8[5] = 12.0;
      doubleArray8[6] = (double) 10;
      doubleArray8[7] = 4.0;
      doubleArray0[7] = doubleArray8;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo1.getPlotInfo();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.initialise(graphics2D0, rectangle2D_Double0, combinedDomainCategoryPlot1, defaultIntervalCategoryDataset0, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clone();
      IntervalMarker intervalMarker0 = new IntervalMarker((-772.859139), 10, scatterRenderer0.DEFAULT_OUTLINE_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      chartRenderingInfo0.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      logAxis0.setTickMarkStroke(statisticalBarRenderer0.DEFAULT_STROKE);
      Font font0 = CompassPlot.DEFAULT_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("Ugzh3mbOSf*]", font0, combinedDomainCategoryPlot0, false);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 3, (double) 15, (double) 2.0F, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle2D_Double0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getLegendItem((-250), 6);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      double double0 = levelRenderer0.calculateSeriesWidth(10, categoryAxis3D0, 10, (-250));
      assertEquals((-0.0019999999999999996), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("8Cawy$;0eS-2");
      String[] stringArray0 = new String[8];
      stringArray0[2] = "8Cawy$;0eS-2";
      SymbolAxis symbolAxis0 = new SymbolAxis("8Cawy$;0eS-2", stringArray0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.0, 2.0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
//      try { 
        barRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, categoryPlot0, taskSeriesCollection0, (PlotRenderingInfo) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LogAxis logAxis0 = new LogAxis((String) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 3296.169554, true);
      chartRenderingInfo0.getPlotInfo();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      statisticalBarRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      statisticalBarRenderer0.getBaseToolTipGenerator();
      statisticalBarRenderer0.setSeriesToolTipGenerator(1612, (CategoryToolTipGenerator) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      ValueMarker valueMarker0 = new ValueMarker((-1.5707963267948966), scatterRenderer0.DEFAULT_VALUE_LABEL_PAINT, statisticalBarRenderer0.DEFAULT_OUTLINE_STROKE);
      statisticalBarRenderer1.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, logAxis0, valueMarker0, rectangle2D_Double0);
      assertEquals(0.0, combinedDomainCategoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("8Cawy$;0eS-2");
      String[] stringArray0 = new String[8];
      stringArray0[2] = "8Cawy$;0eS-2";
      SymbolAxis symbolAxis0 = new SymbolAxis("8Cawy$;0eS-2", stringArray0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = statisticalBarRenderer0.getPlot();
      statisticalBarRenderer0.getToolTipGenerator(500, 10, true);
      statisticalBarRenderer0.setSeriesToolTipGenerator(500, (CategoryToolTipGenerator) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, categoryPlot0.DEFAULT_OUTLINE_STROKE);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer1.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, symbolAxis0, valueMarker0, rectangle2D_Double0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("Null 'annotation' argument.", 12.0, 12.0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      boolean boolean0 = groupedStackedBarRenderer0.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.getUseOutlinePaint();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      int int0 = (-892);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "G}4-`s");
      DefaultPolarItemRenderer defaultPolarItemRenderer0 = new DefaultPolarItemRenderer();
      boolean boolean0 = false;
      String string0 = "tNR\\CymqZ{0q";
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("tNRCymqZ{0q", scatterRenderer0.ZERO, 0.0, 1150.67);
      Layer layer0 = Layer.BACKGROUND;
      statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      Boolean boolean1 = Boolean.FALSE;
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.setSeriesShapesFilled((-892), boolean1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.updateCrosshairValues(categoryCrosshairState0, (Comparable) null, (Comparable) null, 595.0, 2564, 0.0, 0.0, (PlotOrientation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'orientation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Rectangle rectangle0 = new Rectangle();
      scatterRenderer0.clone();
      IntervalMarker intervalMarker0 = new IntervalMarker((double) scatterRenderer0.ZERO, 4.0, boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      Rectangle2D rectangle2D0 = chartRenderingInfo1.getChartArea();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot1, logAxis0, intervalMarker0, rectangle2D0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      LogAxis logAxis0 = new LogAxis((String) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.createState((PlotRenderingInfo) null);
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.updateCrosshairValues(categoryCrosshairState0, 10, true, 0.0, 26, (-538.3), 1.0F, plotOrientation0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      stackedBarRenderer3D0.setShadowVisible(true);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedBarRenderer3D0.equals(stackedAreaRenderer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Font font0 = Axis.DEFAULT_AXIS_LABEL_FONT;
      JFreeChart jFreeChart0 = new JFreeChart("!;", font0, combinedDomainCategoryPlot0, true);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 4, 4, chartRenderingInfo0);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      MultiTextUI multiTextUI0 = new MultiTextUI();
      URL uRL0 = MockURL.getHttpExample();
      JEditorPane jEditorPane0 = null;
//      try {
        jEditorPane0 = new JEditorPane(uRL0);
//        fail("Expecting exception: IOException");
      
//      } catch(Throwable e) {
//         //
//         // Could not find: www.someFakeButWellFormedURL.org
//         //
//         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      LogAxis logAxis0 = new LogAxis((String) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState((PlotRenderingInfo) null);
      categoryItemRendererState0.getCrosshairState();
      FastScatterPlot fastScatterPlot0 = new FastScatterPlot();
      PlotOrientation plotOrientation0 = fastScatterPlot0.getOrientation();
      boxAndWhiskerRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 10, true, 0.0, 26, (-538.3), 1.0F, plotOrientation0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
      minMaxCategoryRenderer0.setSeriesItemLabelGenerator(4250, (CategoryItemLabelGenerator) null, false);
      minMaxCategoryRenderer0.isDrawLines();
      Color color0 = Color.cyan;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      double[][] doubleArray0 = new double[2][0];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray1[1] = 3.0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) boxAndWhiskerRenderer0.ZERO;
      doubleArray2[1] = 0.0;
      doubleArray2[3] = 4.0;
      doubleArray2[4] = (double) 1;
      doubleArray2[5] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray2[6] = 0.0;
      doubleArray2[7] = (double) 10;
      doubleArray0[1] = doubleArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Range range0 = ganttRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
      assertNotNull(range0);
      assertEquals(3.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) boxAndWhiskerRenderer0.ZERO, (double) boxAndWhiskerRenderer0.ZERO);
      stackedBarRenderer3D0.lookupSeriesShape(477);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      stackedBarRenderer3D0.getRangeAxis(combinedRangeCategoryPlot0, (-1095));
      stackedBarRenderer3D0.setShadowVisible(true);
      boolean boolean0 = BarRenderer.getDefaultShadowsVisible();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Rectangle rectangle0 = new Rectangle();
      scatterRenderer0.clone();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      IntervalMarker intervalMarker0 = new IntervalMarker(5217.8926352937615, 0.0F, stackedBarRenderer0.DEFAULT_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.drawRangeMarker((Graphics2D) null, combinedDomainCategoryPlot0, logAxis0, intervalMarker0, rectangle0);
      Rectangle2D rectangle2D0 = null;
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
//      try { 
        stackedBarRenderer0.initialise((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, taskSeriesCollection0, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      LogAxis logAxis0 = new LogAxis((String) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      logAxis0.zoomRange(0.0, 337.61959707593);
      Rectangle rectangle0 = new Rectangle();
      scatterRenderer0.clone();
      BarRenderer barRenderer0 = new BarRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker(5220.0, 0.0F, barRenderer0.DEFAULT_PAINT);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, logAxis0, intervalMarker0, rectangle0);
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, true);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LogAxis logAxis0 = new LogAxis((String) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.getPlotInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.setSeriesItemLabelGenerator(430, (CategoryItemLabelGenerator) null, false);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.getRangeAxis((CategoryPlot) null, (-860));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(7.0, 1582.5);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DecimalFormat decimalFormat0 = new DecimalFormat("The 'month' argument must be in the range 1 to 12.");
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("", decimalFormat0);
      Number[][] numberArray0 = new Number[2][9];
      Number[] numberArray1 = new Number[6];
      numberArray1[0] = (Number) 0.0;
      numberArray1[1] = (Number) 3.0;
      numberArray1[2] = (Number) 8.0;
      Double double0 = AbstractRenderer.ZERO;
      numberArray1[3] = (Number) double0;
      numberArray1[4] = (Number) 8.0;
      numberArray1[5] = (Number) 12.0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[6];
      numberArray2[0] = (Number) 3.0;
      numberArray2[1] = (Number) 3.0;
      numberArray2[2] = (Number) 0.0;
      numberArray2[3] = (Number) double0;
      numberArray2[4] = (Number) barRenderer3D0.ZERO;
      numberArray2[5] = (Number) 3.0;
      numberArray0[1] = numberArray2;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Comparable[]) null, (Comparable[]) null, numberArray0, numberArray0);
      intervalCategoryToolTipGenerator0.generateRowLabel(defaultIntervalCategoryDataset0, 0);
      barRenderer3D0.setSeriesToolTipGenerator(0, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      barRenderer3D0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null, true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      CategoryTextAnnotation categoryTextAnnotation0 = null;
//      try {
        categoryTextAnnotation0 = new CategoryTextAnnotation((String) null, 10, 0.0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'text' argument.
//         //
//         verifyException("org.jfree.chart.annotations.TextAnnotation", e);
//      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Kwy$;0eS-/");
      LogAxis logAxis0 = new LogAxis((String) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
      minMaxCategoryRenderer0.setSeriesItemLabelGenerator(4250, (CategoryItemLabelGenerator) null, false);
      minMaxCategoryRenderer0.isDrawLines();
      Color color0 = Color.cyan;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      stackedAreaRenderer1.getLegendItem(1368, (-1224));
      stackedAreaRenderer0.getSeriesToolTipGenerator(10);
      AffineTransform.getQuadrantRotateInstance(500, (double) (-1224), (double) 2.0F);
      AffineTransform affineTransform0 = new AffineTransform((double) stackedAreaRenderer0.ZERO, 10, 0.2, 0.0F, 1, 4250);
      PiePlot piePlot0 = new PiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("Kwy$;0eS-/", piePlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(305, 10, 3.0, 1209.472993950515, chartRenderingInfo0);
      BufferedImage bufferedImage1 = affineTransformOp0.createCompatibleDestImage(bufferedImage0, (ColorModel) null);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
//      try { 
        stackedAreaRenderer1.initialise(graphics2D0, rectangle2D_Double0, (CategoryPlot) null, taskSeriesCollection0, plotRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'plot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      PeriodAxis periodAxis0 = new PeriodAxis((String) null);
      CategoryMarker categoryMarker0 = new CategoryMarker(10);
      boxAndWhiskerRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, periodAxis0, categoryMarker0, rectangle2D_Double0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Kwy$;0eS-/");
      boxAndWhiskerRenderer0.getLegendItem(122, (-1352));
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 0, (-1075));
      // Undeclared exception!
//      try { 
        slidingGanttCategoryDataset0.getPercentComplete(500, (-590));
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 500, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(7.0, 1582.5);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      barRenderer3D0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) null, true);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueAxis valueAxis0 = barRenderer3D0.getRangeAxis(combinedDomainCategoryPlot0, 10);
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Rectangle2D.Double rectangle2D_Double1 = new Rectangle2D.Double(0.0, 1.0F, 0.0, 10);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Kwy$;0eS-/");
      extendedCategoryAxis0.setMinorTickMarkInsideLength(10);
      rectangle2D_Double0.setRect((double) 0.0F, 0.2, 533.37, (double) 0.0F);
      boxAndWhiskerRenderer0.getLegendItem(10, (-1352));
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 10, 0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.2);
      categoryMarker0.removeChangeListener(combinedDomainCategoryPlot0);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawDomainMarker((Graphics2D) null, combinedDomainCategoryPlot0, categoryAxis3D0, categoryMarker0, rectangle2D_Double0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("R5`XNTLWOUiEo[");
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(false);
      stackedAreaRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      stackedAreaRenderer0.lookupSeriesOutlineStroke(38);
      stackedAreaRenderer0.clearSeriesPaints(false);
      stackedAreaRenderer0.setAutoPopulateSeriesFillPaint(true);
      stackedAreaRenderer0.getLegendItemLabelGenerator();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = stackedAreaRenderer0.getLegendItemURLGenerator();
      assertSame(categorySeriesLabelGenerator0, standardCategorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Kwy$;0eS-/");
      LogAxis logAxis0 = new LogAxis((String) null);
      int int0 = (-140);
      boxAndWhiskerRenderer0.getItemLabelGenerator((-140), (-1426), true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      int int1 = 1;
      DateFormat dateFormat0 = DateFormat.getInstance();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator("Null 'painter' argument.", dateFormat0);
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.setSeriesToolTipGenerator((-1973), (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      Stack<StandardCategoryItemLabelGenerator> stack0 = new Stack<StandardCategoryItemLabelGenerator>();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StandardEntityCollection standardEntityCollection1 = new StandardEntityCollection();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection1, (Shape) null, defaultMultiValueCategoryDataset0, (-1950), (-1950), false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'hotspot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.removeAnnotation((CategoryAnnotation) null);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", "p|.*1x<sgrDApXb", 12.0, 8.0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) null, (Layer) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'orientation' argument.", xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      Number[][] numberArray0 = new Number[0][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      boolean boolean0 = true;
      groupedStackedBarRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultIntervalCategoryDataset0, 10, 10, true, 300, 200, true);
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.equals(groupedStackedBarRenderer1);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("l:+we/&Vh}+", "ZOOM_IN_BOTH", 4.0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, groupedStackedBarRenderer1.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 2003, 3999, true, 10, 1951.1034973);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'row' argument is out of bounds.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setDefaultEntityRadius(91);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      stackedBarRenderer3D1.getIgnoreZeroValues();
      LogAxis logAxis0 = new LogAxis();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      String string0 = null;
      double double0 = 0.0;
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D1.setSeriesToolTipGenerator((-776), (CategoryToolTipGenerator) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.getXOffset();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      minMaxCategoryRenderer0.findRangeBounds(defaultCategoryDataset0);
      minMaxCategoryRenderer0.setGroupPaint(lineRenderer3D0.DEFAULT_PAINT);
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(false);
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      waterfallBarRenderer0.setLegendShape(1, lineRenderer3D0.DEFAULT_SHAPE);
      waterfallBarRenderer0.getFirstBarPaint();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean0 = statisticalBarRenderer0.equals(boxAndWhiskerRenderer0);
      lineRenderer3D0.setSeriesShapesFilled(5, false);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean1 = scatterRenderer0.getDrawOutlines();
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'orientation' argument.", xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      Number[][] numberArray0 = new Number[0][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      groupedStackedBarRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultIntervalCategoryDataset0, 10, 10, true, 300, 200, true);
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      boolean boolean0 = groupedStackedBarRenderer0.equals(groupedStackedBarRenderer1);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("l:+we/&Vh}+", "ZOOM_IN_BOTH", 4.0);
      boolean boolean1 = groupedStackedBarRenderer0.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.equals(categoryTextAnnotation0);
      groupedStackedBarRenderer1.getLegendItem(0, 768);
      assertTrue(groupedStackedBarRenderer1.equals((Object)groupedStackedBarRenderer0));
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      double double0 = 0.0;
      double double1 = 894.8;
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      rectangle2D_Double0.clone();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Kwy$;0eS-/");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Kwy$;0eS-/";
      stringArray0[2] = "Kwy$;0eS-/";
      int int0 = (-1352);
      rectangle2D_Double0.setRect((double) 0.0F, 0.2, 533.37, (double) 0.0F);
      boxAndWhiskerRenderer0.getLegendItem(10, (-1352));
      SymbolAxis symbolAxis0 = new SymbolAxis("Kwy$;0eS-/", stringArray0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 10, 0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryMarker categoryMarker0 = new CategoryMarker(0.2);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawDomainMarker((Graphics2D) null, (CategoryPlot) null, categoryAxis3D0, categoryMarker0, rectangle2D_Double0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'orientation' argument.", xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      Number[][] numberArray0 = new Number[0][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      int int0 = (-184);
      groupedStackedBarRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultIntervalCategoryDataset0, 768, (-184), true, (-779.9), (-463.62161854), false);
      GroupedStackedBarRenderer groupedStackedBarRenderer1 = new GroupedStackedBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      groupedStackedBarRenderer0.equals(stackedAreaRenderer0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("PROPERTIES", "ZOOM_RESET_DOMAIN", (-1.0));
      groupedStackedBarRenderer1.removeAnnotation(categoryTextAnnotation0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("PROPERTIES");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
//      try { 
        groupedStackedBarRenderer0.getDomainAxis(combinedDomainCategoryPlot0, defaultCategoryDataset0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      KeyToGroupMap keyToGroupMap0 = new KeyToGroupMap();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setShadowXOffset(0.0);
      groupedStackedBarRenderer0.equals(keyToGroupMap0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("jLJ/^2vn}8My", "jLJ/^2vn}8My", 3.0);
      groupedStackedBarRenderer0.removeAnnotation(categoryTextAnnotation0);
      CategoryToolTipGenerator categoryToolTipGenerator0 = groupedStackedBarRenderer0.getToolTipGenerator(1991, 1991, true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.lookupSeriesShape(1);
      stackedBarRenderer3D0.setDefaultEntityRadius(1);
      stackedBarRenderer3D0.getIgnoreZeroValues();
      LogAxis logAxis0 = new LogAxis();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 0.05, 0.2);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double[][] doubleArray0 = new double[6][5];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) ganttRenderer0.ZERO;
      doubleArray1[1] = 0.2;
      doubleArray1[2] = 3.0;
      doubleArray1[3] = (double) ganttRenderer0.ZERO;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) ganttRenderer0.ZERO;
      doubleArray2[1] = (double) ganttRenderer0.ZERO;
      doubleArray2[2] = 3.0;
      doubleArray2[3] = (double) ganttRenderer0.ZERO;
      doubleArray2[4] = 3.0;
      doubleArray2[5] = 3.0;
      doubleArray2[6] = 3.0;
      doubleArray2[7] = (double) ganttRenderer0.ZERO;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      Locale locale0 = Locale.KOREAN;
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ganttRenderer0.setLegendTextPaint(5, ganttRenderer1.DEFAULT_VALUE_LABEL_PAINT);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-807.5), 3.0);
      Point point0 = new Point();
      Line2D.Double line2D_Double0 = new Line2D.Double(point0, point0);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultKeyedValues2DDataset0, 5, 0);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.addEntity(standardEntityCollection0, rectangle2D0, slidingCategoryDataset0, 0, 841, false);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      levelRenderer0.getMaximumItemWidth();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      stackedAreaRenderer0.getLegendItem(4, 0);
      int int0 = levelRenderer0.getRowCount();
      assertEquals(0, int0);
      
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setSeriesShapesVisible(35, false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(1.0, 0, false);
      GradientBarPainter gradientBarPainter0 = new GradientBarPainter();
      stackedBarRenderer3D0.setBarPainter(gradientBarPainter0);
      assertEquals(0, stackedBarRenderer3D0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double[][] doubleArray0 = new double[6][5];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) ganttRenderer0.ZERO;
      doubleArray1[1] = 0.2;
      doubleArray1[2] = 3.0;
      doubleArray1[3] = (double) ganttRenderer0.ZERO;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = (double) ganttRenderer0.ZERO;
      doubleArray2[1] = (double) ganttRenderer0.ZERO;
      doubleArray2[2] = 3.0;
      doubleArray2[3] = (double) ganttRenderer0.ZERO;
      doubleArray2[4] = (double) ganttRenderer0.ZERO;
      doubleArray2[5] = 3.0;
      doubleArray2[6] = 3.0;
      doubleArray2[7] = (double) ganttRenderer0.ZERO;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[4];
      doubleArray4[0] = 3.0;
      doubleArray4[1] = (double) ganttRenderer0.ZERO;
      doubleArray4[2] = 0.2;
      doubleArray4[3] = 0.2;
      doubleArray0[3] = doubleArray4;
      double[] doubleArray5 = new double[7];
      doubleArray5[0] = 3.0;
      doubleArray5[1] = 0.2;
      doubleArray5[2] = 0.2;
      doubleArray5[3] = 0.2;
      doubleArray5[4] = (double) ganttRenderer0.ZERO;
      doubleArray5[5] = (double) ganttRenderer0.ZERO;
      doubleArray5[6] = 0.2;
      doubleArray0[4] = doubleArray5;
      double[] doubleArray6 = new double[8];
      doubleArray6[0] = 3.0;
      doubleArray6[1] = 0.2;
      doubleArray6[2] = (double) ganttRenderer0.ZERO;
      doubleArray6[3] = 4.0;
      doubleArray6[4] = 2.5E-9;
      doubleArray6[5] = 3.0;
      doubleArray6[6] = 3.0;
      doubleArray6[7] = (-3627.1);
      doubleArray0[5] = doubleArray6;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
//      try { 
        ganttRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      XYPlot xYPlot0 = new XYPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'orientation' argument.", xYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      bufferedImageRenderingSource0.createGraphics2D();
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      Number[][] numberArray0 = new Number[0][5];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      groupedStackedBarRenderer0.drawItemLabel(graphics2D0, plotOrientation0, defaultIntervalCategoryDataset0, 10, 10, true, 300, 4.0, true);
      groupedStackedBarRenderer0.equals("org.jfree.chart.labels.StandardXYItemLabelGenerator");
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("org.jfree.chart.labels.StandardXYItemLabelGenerator", "jLJ/^2vn}8My", 2.0);
      boolean boolean0 = groupedStackedBarRenderer0.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Kwy$;0eS-/");
      LogAxis logAxis0 = new LogAxis((String) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
      minMaxCategoryRenderer0.setSeriesItemLabelGenerator(4250, (CategoryItemLabelGenerator) null, false);
      minMaxCategoryRenderer0.isDrawLines();
      Color color0 = Color.cyan;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      stackedAreaRenderer1.getLegendItem(1368, (-1224));
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 3, 1);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      StatisticalBarRenderer statisticalBarRenderer2 = new StatisticalBarRenderer();
      statisticalBarRenderer2.setSeriesToolTipGenerator(2109, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer1.addEntity((EntityCollection) null, boxAndWhiskerRenderer0.DEFAULT_SHAPE, taskSeriesCollection0, 75, 1, true, (double) statisticalBarRenderer2.ZERO, 0.2);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 75, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.2, 0.2);
      Locale locale0 = Locale.KOREAN;
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultMultiValueCategoryDataset0, tableOrder0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      statisticalBarRenderer1.setBaseItemLabelGenerator(categoryItemLabelGenerator0, true);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds(defaultMultiValueCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.2, 0.2);
      Locale locale0 = Locale.KOREAN;
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ganttRenderer0.setLegendTextPaint(0, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      statisticalLineAndShapeRenderer0.getBaseShapesFilled();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot(defaultMultiValueCategoryDataset0);
      TableOrder tableOrder0 = multiplePiePlot0.getDataExtractOrder();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultMultiValueCategoryDataset0, tableOrder0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0, false);
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds(defaultMultiValueCategoryDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Kwy$;0eS-/");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Kwy$;0eS-/";
      stringArray0[2] = "Kwy$;0eS-/";
      LegendItem legendItem0 = new LegendItem("Kwy$;0eS-/", "Kwy$;0eS-/", "Kwy$;0eS-/", "Kwy$;0eS-/", boxAndWhiskerRenderer0.DEFAULT_SHAPE, boxAndWhiskerRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      SymbolAxis symbolAxis0 = new SymbolAxis("Kwy$;0eS-/", stringArray0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-927), 40);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      EntityCollection entityCollection0 = null;
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.setSeriesToolTipGenerator((-927), (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.lookupSeriesShape(1);
      stackedBarRenderer3D0.setDefaultEntityRadius(1);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      stackedBarRenderer3D0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      stackedBarRenderer3D0.getIgnoreZeroValues();
      LogAxis logAxis0 = new LogAxis();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 0.05, 0.2);
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      // Undeclared exception!
//      try { 
        taskSeriesCollection0.getPercentComplete((Comparable) 0.05, (Comparable) true);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("Unknown layer.", "Unknown layer.", "Unknown layer.");
      lineRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0);
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      lineRenderer3D0.equals(rowSorterEvent_Type0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setStartPercent((-1530.68263592));
      assertEquals((-1530.68263592), ganttRenderer0.getStartPercent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Kwy$;0eS-/");
      LogAxis logAxis0 = new LogAxis((String) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      logAxis0.setPlot((Plot) null);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      statisticalBarRenderer0.getBaseURLGenerator();
      statisticalBarRenderer0.setSeriesURLGenerator(676, (CategoryURLGenerator) null, false);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getExpandedIcon();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.setMinIcon((Icon) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'icon' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.MinMaxCategoryRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LogAxis logAxis0 = new LogAxis((String) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      boolean boolean0 = true;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 3296.169554, true);
      chartRenderingInfo0.getPlotInfo();
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, taskSeriesCollection0, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getLegendItemURLGenerator();
      boxAndWhiskerRenderer0.setLegendItemURLGenerator((CategorySeriesLabelGenerator) null);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Kwy$;0eS-/");
      LogAxis logAxis0 = new LogAxis((String) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      scatterRenderer0.clone();
      BarRenderer barRenderer0 = new BarRenderer();
      // Undeclared exception!
//      try { 
        barRenderer0.calculateBarWidth((CategoryPlot) null, rectangle2D_Float0, taskSeriesCollection0, categoryItemRendererState0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Kwy$;0eS-/");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Kwy$;0eS-/";
      stringArray0[1] = "Kwy$;0eS-/";
      stringArray0[2] = "Kwy$;0eS-/";
      boxAndWhiskerRenderer0.getLegendItem(10, (-1356));
      SymbolAxis symbolAxis0 = new SymbolAxis("Kwy$;0eS-/", stringArray0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-927), 0);
      slidingGanttCategoryDataset0.getRowKeys();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.hitTest(0.0F, 0.2, (Graphics2D) null, rectangle2D_Double0, (CategoryPlot) null, categoryAxis3D0, symbolAxis0, taskSeriesCollection0, (-92), 376, true, (CategoryItemRendererState) null);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 376, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.lookupSeriesShape(1);
      KeyToGroupMap keyToGroupMap0 = new KeyToGroupMap(12.0);
      keyToGroupMap0.clone();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      statisticalBarRenderer0.getBaseURLGenerator();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer1.setSeriesURLGenerator((-7181), (CategoryURLGenerator) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      stackedBarRenderer0.equals(levelRenderer0);
      IntervalMarker intervalMarker0 = new IntervalMarker(0.2, (-1359.50037));
      intervalMarker0.getGradientPaintTransformer();
      stackedBarRenderer0.setGradientPaintTransformer((GradientPaintTransformer) null);
      stackedBarRenderer0.setNegativeItemLabelPositionFallback((ItemLabelPosition) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setStartPercent(898.4520743316);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      Number[][] numberArray0 = new Number[3][1];
      Number[] numberArray1 = new Number[0];
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[9];
      numberArray2[0] = (Number) stackedBarRenderer0.ZERO;
      numberArray2[1] = (Number) 0.2;
      numberArray2[2] = (Number) 3.0;
      numberArray2[3] = (Number) 0.2;
      numberArray2[4] = (Number) levelRenderer0.ZERO;
      int int0 = CategoryStepRenderer.STAGGER_WIDTH;
      numberArray2[5] = (Number) 5;
      numberArray2[6] = (Number) 0.2;
      numberArray2[7] = (Number) ganttRenderer0.ZERO;
      numberArray2[8] = (Number) 0.2;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[0];
      numberArray0[2] = numberArray3;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.getPreviousHeight(defaultIntervalCategoryDataset0, 1025, 180);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // DefaultIntervalCategoryDataset.getValue(): category index out of range.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.lookupSeriesShape(1);
      stackedBarRenderer3D0.setDefaultEntityRadius(1);
      stackedBarRenderer3D0.getIgnoreZeroValues();
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      String string0 = "";
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 0.05, 0.2);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setSeriesToolTipGenerator(10, (CategoryToolTipGenerator) null, true);
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      stackedAreaRenderer1.getLegendItem(0, (-3691));
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getLegendItems();
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.getSeriesShapesFilled((-1768));
      lineRenderer3D0.setSeriesShapesVisible(10, (Boolean) null);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      int int0 = (-927);
      AffineTransformOp affineTransformOp0 = null;
//      try {
        affineTransformOp0 = new AffineTransformOp((AffineTransform) null, (-927));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.awt.image.AffineTransformOp", e);
//      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      KeyToGroupMap keyToGroupMap0 = new KeyToGroupMap();
      KeyToGroupMap keyToGroupMap1 = new KeyToGroupMap();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      KeyToGroupMap keyToGroupMap2 = new KeyToGroupMap();
      groupedStackedBarRenderer0.equals(keyToGroupMap0);
      groupedStackedBarRenderer0.getItemLabelGenerator(0, 0, true);
      groupedStackedBarRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setCompletePaint(groupedStackedBarRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ganttRenderer0.setLegendTextPaint(39, groupedStackedBarRenderer0.DEFAULT_OUTLINE_PAINT);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D();
      // Undeclared exception!
//      try { 
        barRenderer3D0.addEntity(standardEntityCollection0, groupedStackedBarRenderer0.DEFAULT_SHAPE, (CategoryDataset) null, 0, (-1914), true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator((-1269), (-1269), false);
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("Base item URL generator not cloneable.", numberFormat0);
      minMaxCategoryRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      minMaxCategoryRenderer0.isDrawLines();
      Color color0 = Color.cyan;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setSeriesToolTipGenerator(549, (CategoryToolTipGenerator) null, false);
      stackedAreaRenderer0.getLegendItem(1, (-1269));
      LegendItemCollection legendItemCollection0 = minMaxCategoryRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      KeyToGroupMap keyToGroupMap0 = new KeyToGroupMap();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      keyToGroupMap0.equals(integer0);
      keyToGroupMap0.clone();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      statisticalBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, false);
      statisticalBarRenderer0.getBaseURLGenerator();
      statisticalBarRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) null, true);
      assertTrue(statisticalBarRenderer0.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getItemLabelGenerator((-1269), (-1269), false);
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("Base item URL generator not cloneable.", numberFormat0);
      minMaxCategoryRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, false);
      minMaxCategoryRenderer0.isDrawLines();
      Color color0 = Color.cyan;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItem((-442), (-1269));
      LegendItemCollection legendItemCollection0 = minMaxCategoryRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      categoryStepRenderer0.getSeriesURLGenerator(3315);
      categoryStepRenderer0.clone();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupPaint();
      Day.parseDay(" onMouseOver=\"return stm(['");
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      AreaRenderer areaRenderer0 = new AreaRenderer();
      ganttRenderer0.getPlot();
      // Undeclared exception!
//      try { 
        areaRenderer0.getDomainAxis((CategoryPlot) null, defaultCategoryDataset0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.2, (-1.0));
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 12.0, (-1.0));
      CategoryTextAnnotation categoryTextAnnotation1 = new CategoryTextAnnotation("", 0.2, 4.0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      groupedStackedBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      Boolean boolean0 = new Boolean("");
      barRenderer3D0.getLegendItemLabelGenerator();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.setRenderingSource((RenderingSource) null);
      chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
//      try { 
        barRenderer3D0.addEntity(standardEntityCollection0, groupedStackedBarRenderer0.DEFAULT_SHAPE, taskSeriesCollection0, (-3701), 551, false);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.2, (-1.0));
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 3.0, (-1.0));
      CategoryTextAnnotation categoryTextAnnotation1 = new CategoryTextAnnotation("", 0.2, 4.0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      groupedStackedBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      Boolean boolean0 = new Boolean("");
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.getLegendItem((-2987), 937);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = barRenderer3D0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BarRenderer3D barRenderer3D0 = new BarRenderer3D((double) minMaxCategoryRenderer0.ZERO, 300.08324417796706);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setMaximumBarWidth(300.08324417796706);
      Locale locale0 = Locale.KOREAN;
      DateFormat dateFormat0 = MockDateFormat.getDateInstance(0, locale0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("ZOOM_ESET_OAH", dateFormat0);
      statisticalBarRenderer0.getErrorIndicatorPaint();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      GanttRenderer ganttRenderer1 = new GanttRenderer();
      ganttRenderer1.setCompletePaint(barRenderer3D0.DEFAULT_OUTLINE_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ganttRenderer1.setLegendTextPaint(0, minMaxCategoryRenderer0.DEFAULT_VALUE_LABEL_PAINT);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      // Undeclared exception!
//      try { 
        barRenderer3D0.addEntity(standardEntityCollection0, minMaxCategoryRenderer0.DEFAULT_SHAPE, defaultCategoryDataset0, 26, 907, false);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 26, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      KeyToGroupMap keyToGroupMap0 = new KeyToGroupMap();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      KeyToGroupMap keyToGroupMap1 = new KeyToGroupMap();
      groupedStackedBarRenderer0.equals(keyToGroupMap0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("jLJ/^2vn}8My", "jLJ/^2vn}8My", 3.0);
      groupedStackedBarRenderer0.removeAnnotation(categoryTextAnnotation0);
      groupedStackedBarRenderer0.getSeriesItemLabelGenerator((-1790));
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      double double0 = scatterRenderer0.getItemMargin();
      assertEquals(0.2, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.lookupSeriesShape(1);
      stackedBarRenderer3D0.setDefaultEntityRadius(1);
      stackedBarRenderer3D0.getIgnoreZeroValues();
      stackedBarRenderer3D0.removeAnnotations();
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 0.05, 0.2);
      categoryTextAnnotation0.setFont(combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      // Undeclared exception!
//      try { 
        taskSeriesCollection0.getPercentComplete((Comparable) 0.05, (Comparable) true);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.2, 0.2);
      statisticalBarRenderer0.setMaximumBarWidth((-1217.17211));
      Locale locale0 = Locale.KOREAN;
      DateFormat dateFormat0 = MockDateFormat.getDateInstance(0, locale0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("Null 'timeZone' argument.", dateFormat0);
      statisticalBarRenderer0.getErrorIndicatorPaint();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setCompletePaint(statisticalBarRenderer0.DEFAULT_PAINT);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ganttRenderer0.setLegendTextPaint(0, statisticalBarRenderer0.DEFAULT_OUTLINE_PAINT);
      // Undeclared exception!
//      try { 
        barRenderer3D0.addEntity(standardEntityCollection0, ganttRenderer0.DEFAULT_SHAPE, defaultMultiValueCategoryDataset0, 0, 0, false);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultBoxAndWhiskerCategoryDataset0, (-1495), (-1269), true, (-3.0), 0.0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      groupedStackedBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null, true);
      KeyToGroupMap keyToGroupMap0 = new KeyToGroupMap();
      keyToGroupMap0.getGroupIndex(groupedStackedBarRenderer0.ZERO);
      groupedStackedBarRenderer0.setSeriesToGroupMap(keyToGroupMap0);
      CategoryURLGenerator categoryURLGenerator0 = groupedStackedBarRenderer0.getURLGenerator((-1), 26, false);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Kwy$;0eS-/");
      LogAxis logAxis0 = new LogAxis((String) null);
      boxAndWhiskerRenderer0.getItemLabelGenerator((-140), (-1426), true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.setSeriesItemLabelGenerator(1, (CategoryItemLabelGenerator) null, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer1.isDrawLines();
      Color color0 = Color.cyan;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      LegendItem legendItem0 = stackedAreaRenderer0.getLegendItem(0, (-140));
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.2, (-1.0));
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 3.0, (-1.0));
      CategoryTextAnnotation categoryTextAnnotation1 = new CategoryTextAnnotation("", 0.2, 4.0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      statisticalBarRenderer0.getBaseToolTipGenerator();
      groupedStackedBarRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) null);
      groupedStackedBarRenderer0.removeAnnotation(categoryTextAnnotation1);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = barRenderer3D0.getLegendItemLabelGenerator();
      assertNotNull(categorySeriesLabelGenerator0);
      
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      chartRenderingInfo0.setRenderingSource((RenderingSource) null);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = statisticalBarRenderer0.createState(plotRenderingInfo0);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Kwy$;0eS-/");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 0.0, true);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.setPlot((CategoryPlot) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'plot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Kwy$;0eS-/");
      LogAxis logAxis0 = new LogAxis((String) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = 1763;
      int int1 = (-359);
      boolean boolean0 = true;
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.0, 1.0E-8, false);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.initialise((Graphics2D) null, rectangle2D_Double0, (CategoryPlot) null, taskSeriesCollection0, plotRenderingInfo1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'plot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.clearSeriesPaints(true);
      scatterRenderer0.getLegendItem(1487, 2242);
      SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin((double) scatterRenderer0.ZERO, 315.0, false, false);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("ItemLabelGenerator not cloneable.", simpleHistogramBin0, 1487);
      Layer layer0 = Layer.FOREGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0, layer0);
      scatterRenderer0.getDrawingSupplier();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      defaultCategoryItemRenderer0.setUseOutlinePaint(true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double double0 = ganttRenderer0.getEndPercent();
      assertEquals(0.65, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2);
      Shape shape0 = cyclicNumberAxis0.getUpArrow();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      int int0 = 0;
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, shape0, defaultStatisticalCategoryDataset0, 0, 887, true, 0, (-378.669802));
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      KeyToGroupMap keyToGroupMap0 = new KeyToGroupMap();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      KeyToGroupMap keyToGroupMap1 = new KeyToGroupMap();
      keyToGroupMap1.getKeyCount(groupedStackedBarRenderer0.ZERO);
      groupedStackedBarRenderer0.setSeriesToGroupMap(keyToGroupMap1);
      groupedStackedBarRenderer0.getLegendItemURLGenerator();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseFillPaint(true);
      assertTrue(scatterRenderer0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.lookupSeriesShape(1);
      stackedBarRenderer3D0.setDefaultEntityRadius(1);
      CategoryAxis categoryAxis0 = new CategoryAxis("Null 'hotspot' argument.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      stackedBarRenderer3D0.setPlot(combinedDomainCategoryPlot0);
      stackedBarRenderer3D0.getIgnoreZeroValues();
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ValueMarker valueMarker0 = new ValueMarker(1605.99870548444, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, logAxis0.DEFAULT_AXIS_LINE_STROKE);
      combinedRangeCategoryPlot0.removeRangeMarker((Marker) valueMarker0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 0.05, 0.2);
      categoryTextAnnotation0.setFont(combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      // Undeclared exception!
//      try { 
        taskSeriesCollection0.getPercentComplete((Comparable) 0.05, (Comparable) true);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Line2D.Double line2D_Double0 = new Line2D.Double((-4991.95326129693), (-3303.03635), (-350.138961477377), (double) scatterRenderer0.ZERO);
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("O$jD`<M;V");
      LogAxis logAxis0 = new LogAxis("org.jfree.chart.util.DefaultShadowGenerator");
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      // Undeclared exception!
//      try { 
        scatterRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, categoryAxis3D0, logAxis0, taskSeriesCollection0, 0, (-437), false, categoryItemRendererState0, rectangle2D0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      KeyToGroupMap keyToGroupMap0 = new KeyToGroupMap();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.equals(keyToGroupMap0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("jLJ/^2vn}8My", "jLJ/^2vn}8My", 3.0);
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("jLJ/^2vn}8My");
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, false);
      assertTrue(stackedBarRenderer3D0.getBaseSeriesVisible());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Kwy$;0eS-/");
      LogAxis logAxis0 = new LogAxis((String) null);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
      minMaxCategoryRenderer0.setSeriesItemLabelGenerator(4250, (CategoryItemLabelGenerator) null, false);
      minMaxCategoryRenderer0.isDrawLines();
      Color color0 = Color.cyan;
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StackedAreaRenderer stackedAreaRenderer1 = new StackedAreaRenderer();
      stackedAreaRenderer1.getLegendItem(1368, (-1224));
      stackedAreaRenderer0.getSeriesToolTipGenerator(10);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(500, (double) (-1224), (double) 2.0F);
      AffineTransform affineTransform1 = new AffineTransform(affineTransform0);
      PiePlot piePlot0 = new PiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("Kwy$;0eS-/", piePlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform1, renderingHints0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(305, 10, 3.0, 1209.472993950515, chartRenderingInfo0);
      BufferedImage bufferedImage1 = affineTransformOp0.createCompatibleDestImage(bufferedImage0, (ColorModel) null);
      Graphics2D graphics2D0 = bufferedImage1.createGraphics();
      IntervalMarker intervalMarker0 = new IntervalMarker(1.0F, (double) stackedAreaRenderer0.ZERO, color0);
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, (CategoryPlot) null, logAxis0, intervalMarker0, rectangle2D_Double0);
      assertEquals(4.0, statisticalBarRenderer0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.lookupSeriesShape(1);
      stackedBarRenderer3D0.setDefaultEntityRadius(1);
      stackedBarRenderer3D0.getIgnoreZeroValues();
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("Null 'annotation' argument.", decimalFormat0, decimalFormat0);
      stackedBarRenderer3D0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 0.05, 0.2);
      categoryTextAnnotation0.setFont(combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      // Undeclared exception!
//      try { 
        taskSeriesCollection0.getPercentComplete((Comparable) 0.05, (Comparable) true);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.2, (-1.0));
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      statisticalBarRenderer0.setMaximumBarWidth((-1217.17211));
      Locale locale0 = Locale.KOREAN;
      DateFormat dateFormat0 = MockDateFormat.getDateInstance(0, locale0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("Null 'timeZone' argument.", dateFormat0);
      statisticalBarRenderer0.setSeriesItemLabelGenerator(0, (CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 3.0, (-1.0));
      categoryTextAnnotation0.setFont(barRenderer3D0.DEFAULT_VALUE_LABEL_FONT);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      // Undeclared exception!
//      try { 
        taskSeriesCollection0.getPercentComplete((Comparable) barRenderer3D0.ZERO, (Comparable) stackedBarRenderer3D0.ZERO);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Number[][] numberArray0 = new Number[5][6];
      Number[] numberArray1 = new Number[9];
      numberArray1[0] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray1[1] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray1[2] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray1[3] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray1[4] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray1[5] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray1[6] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray1[7] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray1[8] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[9];
      numberArray2[0] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray2[1] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray2[2] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray2[3] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray2[4] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray2[5] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray2[6] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray2[7] = (Number) boxAndWhiskerRenderer0.ZERO;
      boxAndWhiskerRenderer0.getColumnCount();
      numberArray2[8] = (Number) 0;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[6];
      DefaultIntervalXYDataset defaultIntervalXYDataset0 = new DefaultIntervalXYDataset();
      // Undeclared exception!
//      try { 
        defaultIntervalXYDataset0.getStartY(0, 750);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("_@y@qr", 0.2, 0.0);
      barRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      statisticalBarRenderer0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      boolean boolean0 = true;
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, barRenderer0.DEFAULT_SHAPE, defaultMultiValueCategoryDataset0, (-1178), 0, true, 0.0, (double) scatterRenderer0.ZERO);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.hashCode();
      boxAndWhiskerRenderer0.lookupSeriesFillPaint(1653);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      Rectangle2D.union(rectangle2D_Double0, rectangle2D_Double0, rectangle2D_Double0);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Kwy$;0eS-/");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "Kwy$;0eS-/";
      stringArray0[2] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-927), 0);
      slidingGanttCategoryDataset0.getRowKeys();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.hitTest(0.0, 894.8, (Graphics2D) null, rectangle2D_Double0, (CategoryPlot) null, extendedCategoryAxis0, symbolAxis0, slidingGanttCategoryDataset0, (-92), (-927), true, (CategoryItemRendererState) null);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      KeyToGroupMap keyToGroupMap0 = new KeyToGroupMap();
      groupedStackedBarRenderer0.setSeriesToGroupMap(keyToGroupMap0);
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      // Undeclared exception!
//      try { 
        groupedStackedBarRenderer0.getDomainAxis(combinedDomainCategoryPlot0, taskSeriesCollection0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      statisticalBarRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      statisticalBarRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
      BarRenderer3D barRenderer3D0 = new BarRenderer3D(0.2, (-1.0));
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      LegendItem legendItem0 = stackedAreaRenderer0.getLegendItem(937, 3541);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      boolean boolean0 = true;
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, stackedBarRenderer3D0.DEFAULT_SHAPE, defaultMultiValueCategoryDataset0, 0, 0, true, 0.2, 0.0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Line2D.Double line2D_Double0 = new Line2D.Double(0.0, 0.2, 0.0, (-4535.631097));
      line2D_Double0.getBounds2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      String string0 = "org.jfree.chart.util.DefaultShadowGenerator";
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.util.DefaultShadowGenerator");
      LogAxis logAxis0 = new LogAxis("");
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      double double0 = 0.001;
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(10, 5.0E8, 0.0);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardGradientPaintTransformer standardGradientPaintTransformer0 = new StandardGradientPaintTransformer();
      FontRenderContext fontRenderContext0 = null;
//      try {
        fontRenderContext0 = new FontRenderContext(affineTransform0, stackedAreaRenderer0, standardGradientPaintTransformer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // AA hint:org.jfree.chart.renderer.category.StackedAreaRenderer@a77ca158
//         //
//         verifyException("java.awt.font.FontRenderContext", e);
//      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      boolean boolean0 = true;
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.addEntity(standardEntityCollection0, barRenderer0.DEFAULT_SHAPE, defaultMultiValueCategoryDataset0, (-1178), 0, true, 0.0, (double) scatterRenderer0.ZERO);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Stroke stroke0 = statisticalLineAndShapeRenderer0.getItemOutlineStroke(0, 0, false);
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(stroke0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setMedianVisible(true);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      intervalBarRenderer0.setIncludeBaseInRange(true);
      DatasetGroup datasetGroup0 = new DatasetGroup();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      defaultStatisticalCategoryDataset0.setGroup(datasetGroup0);
      statisticalLineAndShapeRenderer0.getBaseURLGenerator();
      intervalBarRenderer0.setSeriesURLGenerator(0, (CategoryURLGenerator) null);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset1 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
//      try { 
        defaultStatisticalCategoryDataset1.removeColumn((Comparable) intervalBarRenderer0.ZERO);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Column key (0.0) not recognised.
//         //
//         verifyException("org.jfree.data.KeyedObjects2D", e);
//      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, false);
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("p|.*1x<sgrDApXb", statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO, (double) statisticalLineAndShapeRenderer0.ZERO);
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, (Layer) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      Graphics2D graphics2D0 = null;
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      boxAndWhiskerRenderer0.getPlot();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("Kwy$;0eS-/");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "Kwy$;0eS-/";
      stringArray0[2] = "";
      SymbolAxis symbolAxis0 = new SymbolAxis("", stringArray0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-927), 0);
      slidingGanttCategoryDataset0.getRowKeys();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.hitTest(0.0, 894.8, (Graphics2D) null, rectangle2D_Double0, (CategoryPlot) null, extendedCategoryAxis0, symbolAxis0, slidingGanttCategoryDataset0, (-92), (-927), true, (CategoryItemRendererState) null);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      BarRenderer barRenderer0 = new BarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Line2D.Double line2D_Double0 = new Line2D.Double(0.0, 0.2, 0.0, (-4535.631097));
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("org.jfree.chart.util.DefaultShadowGenerator");
      LogAxis logAxis0 = new LogAxis("");
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        scatterRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, subCategoryAxis0, logAxis0, taskSeriesCollection0, 680, 0, true, categoryItemRendererState0, rectangle2D0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.getDomainMarkers((-376), layer0);
      CategoryAxis categoryAxis0 = boxAndWhiskerRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("SOX)@hgJb2F]ZVW ", layeredBarRenderer0.ZERO, (double) layeredBarRenderer0.ZERO);
      layeredBarRenderer0.seriesBarWidthList = null;
      categoryTextAnnotation0.setRotationAngle((double) layeredBarRenderer0.ZERO);
      boolean boolean0 = layeredBarRenderer0.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean0);
      
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.getGroupStroke();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      stackedBarRenderer3D0.findRangeBounds((CategoryDataset) defaultStatisticalCategoryDataset0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      boolean boolean1 = lineRenderer3D0.equals(groupedStackedBarRenderer0);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator();
      minMaxCategoryRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      minMaxCategoryRenderer0.clone();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.getLegendItems();
      MinMaxCategoryRenderer minMaxCategoryRenderer1 = new MinMaxCategoryRenderer();
      LegendItemCollection legendItemCollection0 = new LegendItemCollection();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setSeriesShapesFilled(64, false);
      int int0 = minMaxCategoryRenderer1.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      minMaxCategoryRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0);
      minMaxCategoryRenderer0.clone();
      double[][] doubleArray0 = new double[1][0];
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray1[1] = (double) minMaxCategoryRenderer0.ZERO;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = (-1120.7665613207353);
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 0.0;
      doubleArray1[6] = (-2164.754);
      doubleArray1[7] = 0.0;
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.setShadowXOffset((-391.370217025));
      Range range0 = ganttRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0);
      assertEquals((-2164.754), range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("pm+iI5:Km}G03", scatterRenderer0.DEFAULT_VALUE_LABEL_FONT, combinedDomainCategoryPlot0, false);
      double[][] doubleArray0 = new double[8][3];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      boxAndWhiskerRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      scatterRenderer0.setDrawOutlines(true);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      levelRenderer0.equals(layeredBarRenderer0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer1 = (BoxAndWhiskerRenderer)boxAndWhiskerRenderer0.clone();
      assertTrue(boxAndWhiskerRenderer1.getBaseCreateEntities());
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Object object0 = scatterRenderer0.clone();
      statisticalLineAndShapeRenderer0.equals(object0);
      scatterRenderer0.setBaseShapesFilled(true);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1.0), (-1.0), true);
      String string0 = "yHy)&bg";
      JDBCCategoryDataset jDBCCategoryDataset0 = null;
//      try {
        jDBCCategoryDataset0 = new JDBCCategoryDataset("yHy)&bg", "yHy)&bg", "yHy)&bg", "8Yv;%}f;{\"P*6A..");
//        fail("Expecting exception: ClassNotFoundException");
      
//      } catch(Throwable e) {
//      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.clone();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 53, 10, 10, 1, 1, 10, false, false, true, false, true, false, true);
      // Undeclared exception!
//      try { 
        chartPanel0.createGraphics2D();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.ChartPanel", e);
//      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      intervalBarRenderer0.setIncludeBaseInRange(true);
      DatasetGroup datasetGroup0 = new DatasetGroup();
      defaultStatisticalCategoryDataset0.setGroup(datasetGroup0);
      intervalBarRenderer0.getBaseURLGenerator();
      // Undeclared exception!
//      try { 
        intervalBarRenderer0.setSeriesURLGenerator((-862), (CategoryURLGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      lineAndShapeRenderer0.setBaseShapesFilled(true);
      lineAndShapeRenderer0.getBaseURLGenerator();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.isMeanVisible();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("~|7~&6goj]oC");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(50000.0, 0.18, (double) boxAndWhiskerRenderer0.ZERO, 1.0F);
      ellipse2D_Double0.getBounds2D();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "#+vorP5ONM2!wfZ5X";
      stringArray0[1] = "~|7~&6goj]oC";
      Number[][] numberArray0 = new Number[3][0];
      Number[] numberArray1 = new Number[1];
      numberArray1[0] = (Number) 50000.0;
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[6];
      numberArray2[0] = (Number) stackedBarRenderer3D0.ZERO;
      numberArray2[1] = (Number) 1.0;
      numberArray2[2] = (Number) 3.0;
      numberArray2[3] = (Number) 2.0F;
      numberArray2[4] = (Number) 0.05;
      numberArray2[5] = (Number) boxAndWhiskerRenderer0.ZERO;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[4];
      numberArray3[0] = (Number) 50000.0;
      double double0 = LevelRenderer.DEFAULT_ITEM_MARGIN;
      numberArray3[1] = (Number) 0.2;
      numberArray3[2] = (Number) 1.0;
      numberArray3[3] = (Number) 0.18;
      numberArray0[2] = numberArray3;
      Number[][] numberArray4 = new Number[9][2];
      numberArray4[0] = numberArray1;
      numberArray4[1] = numberArray3;
      numberArray4[2] = numberArray2;
      numberArray4[3] = numberArray3;
      Number[] numberArray5 = new Number[9];
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      // Undeclared exception!
//      try { 
        timeTableXYDataset0.getY(305, 305);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 305, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      ParsePosition parsePosition0 = new ParsePosition((-1));
      decimalFormat0.parse("]&'3", parsePosition0);
      DefaultValueDataset defaultValueDataset0 = new DefaultValueDataset((Number) null);
      MeterPlot meterPlot0 = new MeterPlot(defaultValueDataset0);
      Paint paint0 = meterPlot0.getNeedlePaint();
      Color color0 = Color.YELLOW;
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer(paint0, paint0, color0, meterPlot0.DEFAULT_BACKGROUND_PAINT);
      waterfallBarRenderer0.setFirstBarPaint(color0);
      waterfallBarRenderer0.getSeriesURLGenerator((-1));
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      int int0 = 0;
      DefaultShadowGenerator defaultShadowGenerator0 = new DefaultShadowGenerator(10, color0, 1.0F, 0, (double) ganttRenderer0.ZERO);
      AffineTransform affineTransform0 = AffineTransform.getTranslateInstance(3.0, 2.5E9);
      AffineTransformOp affineTransformOp0 = null;
//      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, 1820);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Unknown interpolation type: 1820
//         //
//         verifyException("java.awt.image.AffineTransformOp", e);
//      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Stroke stroke0 = statisticalLineAndShapeRenderer0.getItemOutlineStroke(0, 0, false);
      statisticalLineAndShapeRenderer0.setErrorIndicatorStroke(stroke0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setMedianVisible(true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      scatterRenderer0.setUseSeriesOffset(false);
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((-1316.6355), (-1316.6355));
      statisticalLineAndShapeRenderer0.setDefaultEntityRadius(0);
      stackedBarRenderer3D0.setBaseLegendTextPaint(boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT);
      stackedBarRenderer3D0.getIgnoreZeroValues();
      stackedBarRenderer3D0.equals(scatterRenderer0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      lineAndShapeRenderer0.getLegendItemToolTipGenerator();
      statisticalLineAndShapeRenderer0.setLegendItemToolTipGenerator((CategorySeriesLabelGenerator) null);
      statisticalLineAndShapeRenderer0.getDrawOutlines();
      statisticalLineAndShapeRenderer0.getBaseShapesFilled();
      lineAndShapeRenderer0.getURLGenerator(0, 1, false);
      stackedBarRenderer3D0.setBaseURLGenerator((CategoryURLGenerator) null, true);
      assertFalse(stackedBarRenderer3D0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.lookupSeriesShape(1);
      stackedBarRenderer3D0.setDefaultEntityRadius(1);
      stackedBarRenderer3D0.getIgnoreZeroValues();
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 0.05, 0.2);
      categoryTextAnnotation0.setFont(combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT);
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      // Undeclared exception!
//      try { 
        taskSeriesCollection0.getPercentComplete((Comparable) 0.05, (Comparable) true);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      int int0 = (-1237);
      int int1 = 0;
      statisticalBarRenderer0.getItemLabelGenerator(0, 0, true);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.setSeriesItemLabelGenerator((-1237), (CategoryItemLabelGenerator) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      statisticalBarRenderer0.setMaximumBarWidth(0.2);
      Locale locale0 = Locale.KOREAN;
      DateFormat dateFormat0 = MockDateFormat.getDateInstance(0, locale0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("velI|I8=VMTcK~u6F", dateFormat0);
      statisticalBarRenderer0.getItemLabelGenerator(0, 0, true);
      statisticalBarRenderer0.setSeriesItemLabelGenerator(2910, (CategoryItemLabelGenerator) null);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("velI|I8=VMTcK~u6F", 0.2, 8.0);
      XYBlockRenderer xYBlockRenderer0 = new XYBlockRenderer();
      categoryTextAnnotation0.addChangeListener(xYBlockRenderer0);
      StackedBarRenderer3D stackedBarRenderer3D1 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      // Undeclared exception!
//      try { 
        taskSeriesCollection0.getPercentComplete((Comparable) 0.2, (Comparable) 0.2);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      int int0 = 3;
      int int1 = (-1230);
      minMaxCategoryRenderer0.getItemLabelGenerator(3, (-1230), true);
      boolean boolean0 = true;
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.setSeriesItemLabelGenerator((-1269), (CategoryItemLabelGenerator) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ganttRenderer0.findRangeBounds((CategoryDataset) defaultMultiValueCategoryDataset0);
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      BufferedImage bufferedImage0 = null;
//      try {
        bufferedImage0 = new BufferedImage(1143, 3087, (-9999));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Unknown image type -9999
//         //
//         verifyException("java.awt.image.BufferedImage", e);
//      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(false);
      categoryStepRenderer0.getLegendItem((-6029), (-6029));
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      int int0 = 34;
      int int1 = 872;
      BufferedImage bufferedImage0 = new BufferedImage(34, 872, 5);
      bufferedImage0.createGraphics();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      AffineTransform affineTransform0 = new AffineTransform();
      String string0 = "v-Djn";
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("v-Djn", statisticalBarRenderer0.DEFAULT_VALUE_LABEL_FONT, ringPlot0, false);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      AffineTransformOp affineTransformOp0 = new AffineTransformOp(affineTransform0, renderingHints0);
      affineTransformOp0.getBounds2D(bufferedImage0);
      // Undeclared exception!
//      try { 
        jFreeChart0.getCategoryPlot();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.jfree.chart.plot.RingPlot cannot be cast to org.jfree.chart.plot.CategoryPlot
//         //
//         verifyException("org.jfree.chart.JFreeChart", e);
//      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      Color color0 = Color.PINK;
      Color color1 = color0.darker();
      color1.getColorSpace();
      scatterRenderer0.setBaseLegendTextPaint(color1);
      scatterRenderer0.setUseFillPaint(false);
      SpreadsheetDate spreadsheetDate0 = new SpreadsheetDate(127);
      SerialDate serialDate0 = SerialDate.addDays(0, spreadsheetDate0);
      CategoryDataset categoryDataset0 = null;
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      Rectangle2D rectangle2D0 = null;
      RectangleEdge rectangleEdge0 = Title.DEFAULT_POSITION;
      // Undeclared exception!
//      try { 
        scatterRenderer0.getItemMiddle(serialDate0, spreadsheetDate0, (CategoryDataset) null, categoryAxis0, (Rectangle2D) null, rectangleEdge0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      String string0 = "?9< :";
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("?9< :", 0.2, 0.2, (double) ganttRenderer0.ZERO);
      categoryPointerAnnotation0.setText("?9< :");
      ganttRenderer0.equals(categoryPointerAnnotation0);
      int int0 = 0;
      ganttRenderer0.getSeriesToolTipGenerator(0);
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      boxAndWhiskerRenderer0.setArtifactPaint(ganttRenderer0.DEFAULT_OUTLINE_PAINT);
      ganttRenderer0.getLegendItemToolTipGenerator();
      // Undeclared exception!
//      try { 
        ganttRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'generator' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(5.0E10, 580.0);
      stackedBarRenderer3D0.setDefaultEntityRadius(2745);
      stackedBarRenderer3D0.getYOffset();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer();
      lineAndShapeRenderer0.setDefaultEntityRadius(2745);
      lineAndShapeRenderer0.setDrawOutlines(true);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", thermometerPlot0);
      RenderingHints renderingHints0 = jFreeChart0.getRenderingHints();
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(renderingHints0);
      short[][] shortArray0 = new short[8][6];
      short[] shortArray1 = new short[1];
      shortArray1[0] = (short) (-535);
      shortArray0[0] = shortArray1;
      short[] shortArray2 = new short[8];
      shortArray2[0] = (short) (-535);
      shortArray2[1] = (short) (-535);
      shortArray2[2] = (short) (-535);
      shortArray2[3] = (short) (-535);
      shortArray2[4] = (short) (-535);
      shortArray2[5] = (short) (-535);
      shortArray2[6] = (short)51;
      shortArray2[7] = (short) (-535);
      shortArray0[1] = shortArray2;
      short[] shortArray3 = new short[0];
      shortArray0[2] = shortArray3;
      short[] shortArray4 = new short[5];
      shortArray4[0] = (short) (-535);
      shortArray4[1] = (short)0;
      shortArray4[2] = (short) (-535);
      shortArray4[3] = (short)51;
      shortArray4[4] = (short) (-535);
      shortArray0[3] = shortArray4;
      short[] shortArray5 = new short[5];
      shortArray5[0] = (short)51;
      shortArray5[1] = (short)51;
      shortArray5[2] = (short)0;
      shortArray5[3] = (short)0;
      shortArray5[4] = (short) (-535);
      shortArray0[4] = shortArray5;
      short[] shortArray6 = new short[9];
      shortArray6[0] = (short) (-535);
      shortArray6[1] = (short)51;
      shortArray6[2] = (short)51;
      shortArray6[3] = (short)51;
      shortArray6[4] = (short) (-535);
      shortArray6[5] = (short)51;
      shortArray6[6] = (short)0;
      shortArray6[7] = (short)0;
      shortArray6[8] = (short) (-535);
      shortArray0[5] = shortArray6;
      short[] shortArray7 = new short[1];
      shortArray7[0] = (short) (-535);
      shortArray0[6] = shortArray7;
      short[] shortArray8 = new short[7];
      shortArray8[0] = (short)0;
      shortArray8[1] = (short)51;
      shortArray8[2] = (short)0;
      shortArray8[3] = (short)0;
      shortArray8[4] = (short)0;
      shortArray8[5] = (short)0;
      shortArray8[6] = (short)0;
      shortArray0[7] = shortArray8;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(34, shortArray0);
      LookupOp lookupOp0 = new LookupOp(shortLookupTable0, renderingHints0);
      BufferedImage bufferedImage0 = null;
//      try {
        bufferedImage0 = new BufferedImage(1, (short) (-535), (-2952));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Unknown image type -2952
//         //
//         verifyException("java.awt.image.BufferedImage", e);
//      }
  }
}
