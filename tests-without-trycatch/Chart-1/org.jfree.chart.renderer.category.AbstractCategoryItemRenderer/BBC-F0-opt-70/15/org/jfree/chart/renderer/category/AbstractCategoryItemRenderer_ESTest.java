/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 10:27:38 GMT 2021
 */

package org.jfree.chart.renderer.category;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.awt.image.BufferedImage;
import java.math.BigInteger;
import java.sql.Connection;
import java.text.ChoiceFormat;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.Locale;
import java.util.TimeZone;
import javax.swing.JComponent;
import javax.swing.JInternalFrame;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.BufferedImageRenderingSource;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItem;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryPointerAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberAxis3D;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SegmentedTimeline;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.SymbolAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.labels.CategoryItemLabelGenerator;
import org.jfree.chart.labels.CategorySeriesLabelGenerator;
import org.jfree.chart.labels.CategoryToolTipGenerator;
import org.jfree.chart.labels.IntervalCategoryItemLabelGenerator;
import org.jfree.chart.labels.IntervalCategoryToolTipGenerator;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.DrawingSupplier;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.ThermometerPlot;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.BoxAndWhiskerRenderer;
import org.jfree.chart.renderer.category.CategoryItemRendererState;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.DefaultCategoryItemRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.chart.renderer.category.IntervalBarRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LevelRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.LineRenderer3D;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.ScatterRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.StatisticalBarRenderer;
import org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.urls.CategoryURLGenerator;
import org.jfree.chart.urls.CustomCategoryURLGenerator;
import org.jfree.chart.urls.StandardCategoryURLGenerator;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.LengthAdjustmentType;
import org.jfree.chart.util.RectangleAnchor;
import org.jfree.chart.util.RectangleEdge;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.ValueDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.pie.DefaultPieDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.Week;
import org.jfree.data.time.Year;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractCategoryItemRenderer_ESTest extends AbstractCategoryItemRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      PiePlot3D piePlot3D0 = new PiePlot3D();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator(">S:", "XPyO(q+QbvZ*oW", "");
      statisticalLineAndShapeRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, piePlot3D0.DEFAULT_LEGEND_ITEM_CIRCLE, defaultStatisticalCategoryDataset0, 10, 35, false, 1.0F, 1.0F);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 10, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(false, true);
      statisticalLineAndShapeRenderer0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, scatterRenderer0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, 1, 0, false, 0, 1);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 1, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      statisticalLineAndShapeRenderer0.setPlot(combinedDomainCategoryPlot0);
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addEntity((EntityCollection) null, (Shape) null, defaultKeyedValues2DDataset0, 2530, 20, true, 1.0F, 0.0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 2530, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, cyclicNumberAxis0, scatterRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("twp|4;^U]i8cT\"", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 1276, 15, (-1), 1940, 500, 0, false, false, false, false, true, false, true);
      PlotOrientation plotOrientation0 = chartPanel0.getOrientation();
      scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, 0.05, 10, 15, (-1574), 0.05, 1024, plotOrientation0);
      assertFalse(scatterRenderer0.getAutoPopulateSeriesFillPaint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("");
      LogarithmicAxis logarithmicAxis0 = new LogarithmicAxis("Unknown key: ");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D0, logarithmicAxis0, statisticalBarRenderer0);
      levelRenderer0.setPlot(categoryPlot0);
      // Undeclared exception!
//      try { 
        levelRenderer0.getLegendItem(10, 770);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'dataset' argument.
//         //
//         verifyException("org.jfree.chart.labels.StandardCategorySeriesLabelGenerator", e);
//      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0, 0);
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      Point2D.Double point2D_Double0 = (Point2D.Double)levelRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, plotOrientation0, rectangle0, rectangle0, combinedDomainXYPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Polygon polygon0 = new Polygon();
      Rectangle2D rectangle2D0 = polygon0.getBounds2D();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.CENTER;
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'annotation' argument.", combinedDomainXYPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, (-58), 8, 0, 0, 10, 0, true, true, false, true, false, true);
      Rectangle2D rectangle2D1 = chartPanel0.getScreenDataArea(10, 0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Point2D.Double point2D_Double0 = (Point2D.Double)defaultCategoryItemRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D1, rectangle2D0, combinedRangeCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      LogAxis logAxis0 = new LogAxis();
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(0.0F, 2.0F, (-1.0F), 0, (-1331.3535F), 2.0F);
      Rectangle2D rectangle2D0 = roundRectangle2D_Float0.getBounds2D();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, logAxis0, rectangle2D0, 0.0, minMaxCategoryRenderer0.DEFAULT_PAINT, minMaxCategoryRenderer0.DEFAULT_OUTLINE_STROKE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CombinedRangeXYPlot combinedRangeXYPlot0 = new CombinedRangeXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, 1502.742, 1934.2528896, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      minMaxCategoryRenderer0.drawDomainLine(graphics2D0, categoryPlot0, rectangle2D_Float0, 1.0E-8, subCategoryAxis0.DEFAULT_AXIS_LABEL_PAINT, combinedRangeXYPlot0.DEFAULT_CROSSHAIR_STROKE);
      assertEquals(1, combinedRangeXYPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot((ValueAxis) null);
      RectangleEdge rectangleEdge0 = combinedDomainXYPlot0.getRangeAxisEdge(2923);
      double double0 = levelRenderer0.getItemMiddle(0.2, 0.2, defaultStatisticalCategoryDataset0, extendedCategoryAxis0, rectangle2D_Float0, rectangleEdge0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Polygon polygon0 = new Polygon();
      Rectangle2D rectangle2D0 = polygon0.getBounds2D();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      LabelBlock labelBlock0 = new LabelBlock("");
      RectangleAnchor rectangleAnchor0 = labelBlock0.getTextAnchor();
      Point2D.Double point2D_Double0 = (Point2D.Double)levelRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle2D0, combinedRangeCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(0.0, point2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Rectangle rectangle0 = new Rectangle();
      double[][] doubleArray0 = new double[6][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      scatterRenderer0.addEntity(standardEntityCollection0, rectangle0, defaultIntervalCategoryDataset0, 0, 0, true, 0.0, 0.0);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("", 0.2, (double) intervalBarRenderer0.ZERO, (-798.1759386761202));
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0);
      assertEquals(10.0, categoryPointerAnnotation0.getTipRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      stackedBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) null);
      assertEquals(2.0, stackedBarRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      layeredBarRenderer0.setSeriesURLGenerator(62, (CategoryURLGenerator) customCategoryURLGenerator0);
      assertEquals(2.0, layeredBarRenderer0.getItemLabelAnchorOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      double[] doubleArray0 = new double[3];
      String[] stringArray0 = new String[3];
      ChoiceFormat choiceFormat0 = new ChoiceFormat(doubleArray0, stringArray0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator("", choiceFormat0);
      ganttRenderer0.setSeriesItemLabelGenerator(10, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      assertTrue(ganttRenderer0.getDefaultShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 10, (double) 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0F, 0.0F);
      boxAndWhiskerRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, cyclicNumberAxis0, rectangle2D_Float0, 0.0, levelRenderer0.DEFAULT_OUTLINE_PAINT, levelRenderer0.DEFAULT_OUTLINE_STROKE);
      assertTrue(Axis.DEFAULT_AXIS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0, 0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(2, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      statisticalBarRenderer0.drawOutline(graphics2D0, categoryPlot0, rectangle0);
      assertFalse(categoryPlot0.isDomainZoomable());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      double[][] doubleArray0 = new double[2][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      levelRenderer0.addEntity(standardEntityCollection0, stackedBarRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, 0, 0, false);
      assertEquals(1, standardEntityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Y,AWI[H>{FNpAs");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedDomainCategoryPlot0, defaultKeyedValues2DDataset0, (PlotRenderingInfo) null);
      assertEquals(0.0, categoryItemRendererState0.getBarWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DateAxis dateAxis0 = new DateAxis();
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, dateAxis0, statisticalLineAndShapeRenderer0);
      Rectangle rectangle0 = new Rectangle(10, 500);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategoryItemRendererState categoryItemRendererState0 = ganttRenderer0.initialise((Graphics2D) null, rectangle0, categoryPlot0, jDBCCategoryDataset0, (PlotRenderingInfo) null);
      assertEquals(0.0, categoryItemRendererState0.getSeriesRunningTotal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      statisticalBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, false);
      CustomCategoryURLGenerator customCategoryURLGenerator1 = (CustomCategoryURLGenerator)statisticalBarRenderer0.getURLGenerator(1676, 783, false);
      assertEquals(0, customCategoryURLGenerator1.getListCount());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      CategoryURLGenerator categoryURLGenerator0 = defaultCategoryItemRenderer0.getSeriesURLGenerator((-1274));
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(true);
      int int0 = stackedBarRenderer3D0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueAxis valueAxis0 = waterfallBarRenderer0.getRangeAxis(combinedDomainCategoryPlot0, (-2268));
      assertNull(valueAxis0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      dateAxis0.setMinorTickCount(2268);
      ValueAxis valueAxis0 = boxAndWhiskerRenderer0.getRangeAxis(combinedRangeCategoryPlot0, 0);
      assertEquals(0.05, ValueAxis.DEFAULT_LOWER_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, (double) statisticalBarRenderer0.ZERO);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, cyclicNumberAxis0, scatterRenderer0);
      CyclicNumberAxis cyclicNumberAxis1 = (CyclicNumberAxis)statisticalBarRenderer0.getRangeAxis(categoryPlot0, 680);
      assertTrue(cyclicNumberAxis1.getAutoRangeIncludesZero());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-218.74848949));
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, (CategoryAxis) null, cyclicNumberAxis0, stackedAreaRenderer0);
      ValueAxis valueAxis0 = statisticalLineAndShapeRenderer0.getRangeAxis(categoryPlot0, (-923));
      assertNull(valueAxis0.getLabelURL());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, true);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Locale locale0 = Locale.UK;
      DateAxis dateAxis0 = new DateAxis((String) null, zoneInfo0, locale0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis0, dateAxis0, lineAndShapeRenderer0);
      JInternalFrame jInternalFrame0 = new JInternalFrame((String) null, true, true, false, true);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.initialise((Graphics2D) null, rectangle0, categoryPlot0, jDBCCategoryDataset0, (PlotRenderingInfo) null);
      CategoryPlot categoryPlot1 = boxAndWhiskerRenderer0.getPlot();
      assertTrue(CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = ganttRenderer0.getLegendItemLabelGenerator();
      ganttRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator0);
      CategorySeriesLabelGenerator categorySeriesLabelGenerator1 = ganttRenderer0.getLegendItemURLGenerator();
      assertSame(categorySeriesLabelGenerator1, categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedAreaRenderer0.getItemLabelGenerator(4589, 1883, true);
      assertSame(categoryItemLabelGenerator0, intervalCategoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      DrawingSupplier drawingSupplier0 = stackedBarRenderer0.getDrawingSupplier();
      assertNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("Null 'subtitles' argument.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      CategoryAxis categoryAxis1 = stackedBarRenderer0.getDomainAxis(combinedDomainCategoryPlot0, (CategoryDataset) null);
      assertEquals(2.0F, categoryAxis1.getTickMarkOutsideLength(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      int int0 = stackedAreaRenderer0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator();
      groupedStackedBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
      CategoryURLGenerator categoryURLGenerator0 = groupedStackedBarRenderer0.getBaseURLGenerator();
      assertSame(categoryURLGenerator0, standardCategoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedAreaRenderer0.getBaseToolTipGenerator();
      assertSame(categoryToolTipGenerator0, intervalCategoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0);
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator1 = (IntervalCategoryItemLabelGenerator)stackedAreaRenderer0.getBaseItemLabelGenerator();
      assertEquals("({0}, {1}) = {3} - {4}", intervalCategoryItemLabelGenerator1.getLabelFormat());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      double[][] doubleArray0 = new double[2][9];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (-9.0);
      doubleArray1[1] = (-9.0);
      doubleArray1[2] = (-7.398767443273302);
      doubleArray0[0] = doubleArray1;
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals(1.601232556726698, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      double[][] doubleArray0 = new double[1][0];
      double[] doubleArray1 = new double[1];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue(3.0, (Comparable) statisticalBarRenderer0.ZERO, (Comparable) statisticalBarRenderer0.ZERO);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Range range0 = levelRenderer0.findRangeBounds((CategoryDataset) defaultKeyedValues2DDataset0, true);
      assertEquals(3.0, range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      statisticalBarRenderer0.setIncludeBaseInRange(false);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue(0.2, (Comparable) 0.2, (Comparable) 0.2);
      Range range0 = statisticalBarRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertEquals(0.2, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.setValue((Number) lineAndShapeRenderer0.ZERO, (Comparable) stackedAreaRenderer0.ZERO, (Comparable) stackedAreaRenderer0.ZERO);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Range range0 = statisticalBarRenderer0.findRangeBounds(defaultCategoryDataset0);
      assertEquals(0.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue(3.0, (Comparable) 0.2, (Comparable) 0.2);
      Range range0 = statisticalBarRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertEquals(3.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      defaultCategoryDataset0.addValue((-1345.07), (Comparable) scatterRenderer0.ZERO, (Comparable) "V2(`O]@vZmfpn");
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Range range0 = statisticalBarRenderer0.findRangeBounds(defaultCategoryDataset0);
      assertEquals((-672.535), range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer(true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      assertEquals((-1), categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = levelRenderer0.createState(plotRenderingInfo0);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      DefaultPieDataset defaultPieDataset0 = new DefaultPieDataset();
      RingPlot ringPlot0 = new RingPlot(defaultPieDataset0);
      JFreeChart jFreeChart0 = new JFreeChart("Bx4`yO", stackedAreaRenderer0.DEFAULT_VALUE_LABEL_FONT, ringPlot0, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 2272, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Dimension dimension0 = new Dimension();
      Rectangle rectangle0 = new Rectangle(dimension0);
      CategoryPlot categoryPlot0 = new CategoryPlot();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("YcEoPY,_D&{e~`nm");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(532.0, (-1286.0));
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      Rectangle2D rectangle2D0 = statisticalBarRenderer0.createHotSpotBounds(graphics2D0, rectangle0, categoryPlot0, subCategoryAxis0, cyclicNumberAxis0, defaultKeyedValues2DDataset0, (-6970), (-1770), true, categoryStepRenderer_State0, rectangle0);
      assertNull(rectangle2D0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2349.520935);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(cyclicNumberAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
//      try { 
        scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, statisticalLineAndShapeRenderer0.ZERO, false, 3.0, 0, 0.5235987755982988, (-683.45), plotOrientation0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("org.jfree.data.event.DatasetChangeEvent");
      // Undeclared exception!
//      try { 
        groupedStackedBarRenderer0.setSeriesURLGenerator((-3101), (CategoryURLGenerator) standardCategoryURLGenerator0, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) minMaxCategoryRenderer0.ZERO, 2.5E-9);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.setSeriesToolTipGenerator((-774), (CategoryToolTipGenerator) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.setSeriesToolTipGenerator((-293), (CategoryToolTipGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.setSeriesItemLabelGenerator((-482), (CategoryItemLabelGenerator) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("twp|4;^U]i8cT\"");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, cyclicNumberAxis0, scatterRenderer0);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.hitTest(0.05, (-722.3923), (Graphics2D) null, (Rectangle2D) null, categoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultKeyedValues2DDataset0, 3, (-2737), false, (CategoryItemRendererState) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1975.1969, 2126.1923);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 500, 10);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.hitTest((-2941.06987110465), 0.0, (Graphics2D) null, rectangle2D_Float0, combinedRangeCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, slidingGanttCategoryDataset0, (-781), 1129, true, (CategoryItemRendererState) null);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 1629, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      Number[][] numberArray0 = new Number[1][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultIntervalCategoryDataset0, 73, 73);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      String[] stringArray0 = new String[1];
      SymbolAxis symbolAxis0 = new SymbolAxis("d1f0N<}31eL45g", stringArray0);
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.hitTest(5.0, 0.0, (Graphics2D) null, rectangle2D_Float0, (CategoryPlot) null, categoryAxis0, symbolAxis0, slidingCategoryDataset0, 148, 148, false, categoryItemRendererState0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // DefaultIntervalCategoryDataset.getValue(): series index out of range.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      // Undeclared exception!
//      try { 
        intervalBarRenderer0.getRangeAxis((CategoryPlot) null, (-4432));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("");
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.getItemMiddle(waterfallBarRenderer0.ZERO, waterfallBarRenderer0.ZERO, (CategoryDataset) null, extendedCategoryAxis0, (Rectangle2D) null, (RectangleEdge) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      BigInteger bigInteger0 = BigInteger.ZERO;
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.getItemMiddle(3.0, bigInteger0, defaultCategoryDataset0, categoryAxis0, (Rectangle2D) null, (RectangleEdge) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid category index: -1
//         //
//         verifyException("org.jfree.chart.axis.CategoryAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.getDomainAxis((CategoryPlot) null, (CategoryDataset) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 4709, 0);
      // Undeclared exception!
//      try { 
        groupedStackedBarRenderer0.getDomainAxis(categoryPlot0, slidingGanttCategoryDataset0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      double[][] doubleArray0 = new double[8][5];
      double[] doubleArray1 = new double[9];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) defaultIntervalCategoryDataset0, true);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 5
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.findRangeBounds((CategoryDataset) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'dataset' argument.
//         //
//         verifyException("org.jfree.data.general.DatasetUtilities", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DefaultCategoryItemRenderer defaultCategoryItemRenderer0 = new DefaultCategoryItemRenderer();
      double[][] doubleArray0 = new double[5][1];
      double[] doubleArray1 = new double[0];
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
//      try { 
        defaultCategoryItemRenderer0.findRangeBounds(defaultIntervalCategoryDataset0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 10, (double) 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Base item URL generator not cloneable.");
      NumberAxis numberAxis0 = new NumberAxis("Base item URL generator not cloneable.");
      Color color0 = (Color)XYPlot.DEFAULT_GRIDLINE_PAINT;
      IntervalMarker intervalMarker0 = new IntervalMarker(0.0F, 3819.6571727418, numberAxis0.DEFAULT_AXIS_LABEL_PAINT, subCategoryAxis0.DEFAULT_AXIS_LINE_STROKE, color0, numberAxis0.DEFAULT_TICK_MARK_STROKE, 0.5F);
      // Undeclared exception!
//      try { 
        intervalBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis0, intervalMarker0, (Rectangle2D) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.axis.NumberAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      MockDate mockDate0 = (MockDate)DateAxis.DEFAULT_ANCHOR_DATE;
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      TimeZone timeZone0 = TimeZone.getTimeZone((ZoneId) zoneOffset0);
      Year year0 = new Year(mockDate0, timeZone0);
      Week week0 = new Week(mockDate0, timeZone0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      PeriodAxis periodAxis0 = new PeriodAxis("{/*M}Oc{pb{J|X", year0, week0, timeZone0, locale0);
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawRangeLine((Graphics2D) null, combinedDomainCategoryPlot0, periodAxis0, defaultCaret0, 0, combinedRangeCategoryPlot0.DEFAULT_GRIDLINE_PAINT, minMaxCategoryRenderer0.DEFAULT_OUTLINE_STROKE);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Range(double, double): require lower (1.39240928132E12) <= upper (1.392409281319E12).
//         //
//         verifyException("org.jfree.data.Range", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      int[] intArray0 = new int[18];
      Polygon polygon0 = new Polygon(intArray0, intArray0, 10);
      Rectangle2D rectangle2D0 = polygon0.getBounds2D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D0, (-4250.44199), combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.0F, 0.0F, 0.0F, 0.0F, levelRenderer0.DEFAULT_PAINT, levelRenderer0.DEFAULT_STROKE);
      levelRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultStatisticalCategoryDataset0, categoryAxis3D0, numberAxis3D0, levelRenderer0);
      // Undeclared exception!
//      try { 
        levelRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Float0, categoryAxis3D0, numberAxis3D0, layer0, plotRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Invalid category index: -1
//         //
//         verifyException("org.jfree.chart.axis.CategoryAxis", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      CategoryAxis categoryAxis0 = new CategoryAxis("Null 'subtitles' argument.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis0);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot((ValueDataset) null);
      ValueAxis valueAxis0 = thermometerPlot0.getRangeAxis();
      // Undeclared exception!
//      try { 
        stackedBarRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedDomainCategoryPlot0, categoryAxis0, valueAxis0, (CategoryDataset) null, 1, 0, true, categoryStepRenderer_State0, (Rectangle2D) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.BarRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, 10);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      Rectangle2D rectangle2D0 = plotRenderingInfo0.getDataArea();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryStepRenderer.State categoryStepRenderer_State0 = new CategoryStepRenderer.State(plotRenderingInfo0);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.createHotSpotBounds((Graphics2D) null, rectangle2D0, combinedRangeCategoryPlot0, categoryAxis3D0, cyclicNumberAxis0, defaultBoxAndWhiskerCategoryDataset0, 13, (-1), true, categoryStepRenderer_State0, rectangle2D0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, statisticalBarRenderer0.DEFAULT_SHAPE, defaultKeyedValues2DDataset0, (-828), (-828), false, 0.2, 0.0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      // Undeclared exception!
//      try { 
        levelRenderer0.addEntity((EntityCollection) null, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, (CategoryDataset) null, 0, 305, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      LevelRenderer levelRenderer0 = new LevelRenderer();
      // Undeclared exception!
//      try { 
        levelRenderer0.addEntity(standardEntityCollection0, combinedRangeCategoryPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, jDBCCategoryDataset0, (-2307), (-2307), false);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation("Base item URL generator not cloneable.", 0.0, intervalBarRenderer0.ZERO, 0.0, levelRenderer0.DEFAULT_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
//      try { 
        scatterRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, (Layer) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      // Undeclared exception!
//      try { 
        stackedBarRenderer3D0.addAnnotation((CategoryAnnotation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("");
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot((ValueAxis) null);
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.createHotSpotBounds((Graphics2D) null, (Rectangle2D) null, combinedRangeCategoryPlot0, subCategoryAxis0, (ValueAxis) null, defaultBoxAndWhiskerCategoryDataset0, 10, 727, true, categoryItemRendererState0, (Rectangle2D) null);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 727, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = statisticalBarRenderer0.getURLGenerator(1676, 783, false);
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      stackedBarRenderer3D0.setSeriesToolTipGenerator(3, (CategoryToolTipGenerator) null, true);
      assertEquals(4.0, stackedBarRenderer3D0.getShadowXOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedAreaRenderer0.getToolTipGenerator(4, 4, true);
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedAreaRenderer0.getItemLabelGenerator(4589, 1883, true);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.setPlot((CategoryPlot) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'plot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.2, 2350.4062197421);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedBarRenderer3D0.getSeriesToolTipGenerator((-799));
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 0.2);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0F, 0.0F, (-1452.07871504769), 0.4);
      CategoryAxis categoryAxis0 = new CategoryAxis((String) null);
      Number[][] numberArray0 = new Number[3][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(defaultIntervalCategoryDataset0, 10, 73);
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryItemRendererState categoryItemRendererState0 = categoryStepRenderer0.createState(plotRenderingInfo0);
      boolean boolean0 = statisticalBarRenderer0.hitTest(0.0, 1.0F, graphics2D0, rectangle2D_Double0, combinedRangeCategoryPlot0, categoryAxis0, cyclicNumberAxis0, slidingCategoryDataset0, (-1008), 1241, true, categoryItemRendererState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-77.7690293290811), 0.0);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 10, 10);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0, 0.0, 0.05, 1.0F);
      CategoryAxis categoryAxis0 = new CategoryAxis();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.hitTest(10, (-77.7690293290811), (Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, categoryAxis0, cyclicNumberAxis0, slidingGanttCategoryDataset0, 574, (-1230), true, (CategoryItemRendererState) null);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultKeyedValues2DDataset0, 35, 35, false, 35, 35);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
//      try { 
        levelRenderer0.addEntity(standardEntityCollection0, (Shape) null, defaultStatisticalCategoryDataset0, 273, (-1998), false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'hotspot' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      Rectangle rectangle0 = new Rectangle();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, rectangle0, jDBCCategoryDataset0, 0, (-1), false);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      statisticalLineAndShapeRenderer0.setPlot(combinedRangeCategoryPlot0);
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.getLegendItems();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      LegendItemCollection legendItemCollection0 = statisticalLineAndShapeRenderer0.getLegendItems();
      assertEquals(0, legendItemCollection0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("twp|4;^U]i8cT\"");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((double) statisticalBarRenderer0.ZERO);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, cyclicNumberAxis0, scatterRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 1, chartRenderingInfo0);
      assertEquals(1, bufferedImage0.getTileHeight());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      stackedAreaRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, true);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      assertEquals(0, stackedAreaRenderer1.getRowCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("#*;N(qzH$", ">Q]al>@!/S", ">Q]al>@!/S");
      statisticalBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) standardCategoryURLGenerator0, true);
//      try { 
        statisticalBarRenderer0.clone();
//        fail("Expecting exception: CloneNotSupportedException");
      
//      } catch(CloneNotSupportedException e) {
//         //
//         // Base item URL generator not cloneable.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator();
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, true);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      assertTrue(stackedAreaRenderer1.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      Locale locale0 = Locale.UK;
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols(locale0);
      DecimalFormat decimalFormat0 = new DecimalFormat("Null 'plot' argument.", decimalFormatSymbols0);
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator("Null 'plot' argument.", decimalFormat0, decimalFormat0);
      stackedAreaRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      assertTrue(stackedAreaRenderer1.getAutoPopulateSeriesStroke());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(0.0F, 0.0F, 0.0F, 0.0F, levelRenderer0.DEFAULT_PAINT, levelRenderer0.DEFAULT_STROKE);
      levelRenderer0.addAnnotation((CategoryAnnotation) categoryLineAnnotation0, layer0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      // Undeclared exception!
//      try { 
        levelRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Float0, categoryAxis3D0, numberAxis3D0, layer0, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.annotations.CategoryLineAnnotation", e);
//      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis((String) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(3916.523614, 0.2, ",2qv(y5~>R!EutY<P`");
      Layer layer0 = Layer.FOREGROUND;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float((-1671.2F), 2155.6294F, 1.0F, (-1671.2F));
      levelRenderer0.drawAnnotations((Graphics2D) null, rectangle2D_Float0, subCategoryAxis0, cyclicNumberAxis0, layer0, plotRenderingInfo0);
      assertEquals(1.0E-8, ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE, 0.01);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = spiderWebPlot0.getLabelGenerator();
      boxAndWhiskerRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultKeyedValues2DDataset0, (-1), 10, true, 1.0F, (double) statisticalBarRenderer0.ZERO, false);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryCrosshairState categoryCrosshairState0 = new CategoryCrosshairState();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("?js~");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.2, 0.2);
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, cyclicNumberAxis0, scatterRenderer0);
      categoryPlot0.setRangeCrosshairLockedOnData(false);
      PlotOrientation plotOrientation0 = categoryPlot0.getOrientation();
      scatterRenderer0.updateCrosshairValues(categoryCrosshairState0, true, true, 200, 768, 0.05, 2.0F, plotOrientation0);
      assertFalse(scatterRenderer0.getUseOutlinePaint());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      scatterRenderer0.updateCrosshairValues((CategoryCrosshairState) null, 0.2, levelRenderer0.ZERO, 99.1784901, (-1), 890.298, 2399, plotOrientation0);
      assertEquals(0.2, LevelRenderer.DEFAULT_ITEM_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
//      try { 
        scatterRenderer0.updateCrosshairValues((CategoryCrosshairState) null, statisticalBarRenderer0.ZERO, true, (-3539.0), 1, 2.0F, (-2290.1), (PlotOrientation) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'orientation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      JDBCCategoryDataset jDBCCategoryDataset0 = new JDBCCategoryDataset(connection0);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      ZoneInfo zoneInfo0 = (ZoneInfo)SegmentedTimeline.DEFAULT_TIME_ZONE;
      Locale locale0 = JComponent.getDefaultLocale();
      DateAxis dateAxis0 = new DateAxis("Null 'plot' argument.", zoneInfo0, locale0);
      CategoryPlot categoryPlot0 = new CategoryPlot(jDBCCategoryDataset0, categoryAxis3D0, dateAxis0, statisticalLineAndShapeRenderer0);
      DrawingSupplier drawingSupplier0 = statisticalLineAndShapeRenderer0.getDrawingSupplier();
      assertNotNull(drawingSupplier0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      CategoryPointerAnnotation categoryPointerAnnotation0 = new CategoryPointerAnnotation("V2(`O]@vZmfpn", scatterRenderer1.ZERO, (double) scatterRenderer0.ZERO, 781.7686586479);
      assertTrue(scatterRenderer1.equals((Object)scatterRenderer0));
      
      Layer layer0 = Layer.FOREGROUND;
      scatterRenderer0.addAnnotation((CategoryAnnotation) categoryPointerAnnotation0, layer0);
      boolean boolean0 = scatterRenderer0.equals(scatterRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      assertTrue(scatterRenderer1.equals((Object)scatterRenderer0));
      
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("Null 'orientation' argument.", numberFormat0);
      scatterRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      boolean boolean0 = scatterRenderer0.equals(scatterRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      StandardCategoryToolTipGenerator standardCategoryToolTipGenerator0 = new StandardCategoryToolTipGenerator();
      scatterRenderer0.setSeriesToolTipGenerator(46, (CategoryToolTipGenerator) standardCategoryToolTipGenerator0);
      boolean boolean0 = scatterRenderer0.equals(scatterRenderer1);
      assertTrue(scatterRenderer1.equals((Object)scatterRenderer0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      ScatterRenderer scatterRenderer1 = (ScatterRenderer)scatterRenderer0.clone();
      assertTrue(scatterRenderer1.equals((Object)scatterRenderer0));
      
      StandardCategoryItemLabelGenerator standardCategoryItemLabelGenerator0 = new StandardCategoryItemLabelGenerator();
      scatterRenderer1.setBaseItemLabelGenerator((CategoryItemLabelGenerator) standardCategoryItemLabelGenerator0, true);
      boolean boolean0 = scatterRenderer0.equals(scatterRenderer1);
      assertFalse(scatterRenderer1.equals((Object)scatterRenderer0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      boolean boolean0 = statisticalBarRenderer0.equals(statisticalBarRenderer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      LevelRenderer levelRenderer0 = new LevelRenderer();
      LegendItem legendItem0 = levelRenderer0.getLegendItem(10, 1);
      assertNull(legendItem0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      RingPlot ringPlot0 = new RingPlot();
      JFreeChart jFreeChart0 = new JFreeChart("", statisticalBarRenderer0.DEFAULT_VALUE_LABEL_FONT, ringPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(15, 10);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.EXPAND;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      Rectangle rectangle0 = new Rectangle(369, (-1), (-405), (-405));
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.TOP_RIGHT;
      // Undeclared exception!
//      try { 
        levelRenderer0.calculateRangeMarkerTextAnchorPoint(graphics2D0, (PlotOrientation) null, rectangle0, rectangle0, ringPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.util.RectangleAnchor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      JFreeChart jFreeChart0 = new JFreeChart("twOY3", combinedRangeCategoryPlot0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      LevelRenderer levelRenderer0 = new LevelRenderer();
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, 10, 15, (-765), 10, 10, 10, true, true, true, true, true, false, false);
      Rectangle rectangle0 = chartPanel0.getBounds((Rectangle) null);
      IntervalMarker intervalMarker0 = new IntervalMarker((double) levelRenderer0.ZERO, 300, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT);
      LengthAdjustmentType lengthAdjustmentType0 = intervalMarker0.getLabelOffsetType();
      RectangleAnchor rectangleAnchor0 = RectangleAnchor.LEFT;
      // Undeclared exception!
//      try { 
        levelRenderer0.calculateRangeMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle0, (Rectangle2D) null, combinedRangeCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'base' argument.
//         //
//         verifyException("org.jfree.chart.util.RectangleInsets", e);
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      PlotOrientation plotOrientation0 = thermometerPlot0.getOrientation();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      LabelBlock labelBlock0 = new LabelBlock("lh/3S_]ev8?V/{&u", lineAndShapeRenderer0.DEFAULT_VALUE_LABEL_FONT, thermometerPlot0.DEFAULT_OUTLINE_PAINT);
      RectangleAnchor rectangleAnchor0 = labelBlock0.getTextAnchor();
      // Undeclared exception!
//      try { 
        lineAndShapeRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, (Rectangle2D) null, (Rectangle2D) null, thermometerPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'base' argument.
//         //
//         verifyException("org.jfree.chart.util.RectangleInsets", e);
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LabelBlock labelBlock0 = new LabelBlock("", combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      RectangleAnchor rectangleAnchor0 = labelBlock0.getTextAnchor();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, false);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = new JFreeChart("", combinedRangeCategoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0, false);
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) chartPanel0, (Border) null, 10, 3, 768, 10);
      Rectangle2D rectangle2D0 = chartPanel0.scale(rectangle0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      Point2D.Double point2D_Double0 = (Point2D.Double)statisticalLineAndShapeRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, plotOrientation0, rectangle2D0, rectangle0, combinedRangeCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
      assertEquals(394.0, point2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Polygon polygon0 = new Polygon();
      Rectangle2D rectangle2D0 = polygon0.getBounds2D();
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.CONTRACT;
      LabelBlock labelBlock0 = new LabelBlock("1x~Tmod9WGuZUc", combinedRangeCategoryPlot0.DEFAULT_VALUE_LABEL_FONT, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT);
      RectangleAnchor rectangleAnchor0 = labelBlock0.getTextAnchor();
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      // Undeclared exception!
//      try { 
        lineAndShapeRenderer0.calculateDomainMarkerTextAnchorPoint((Graphics2D) null, (PlotOrientation) null, rectangle2D0, (Rectangle2D) null, combinedRangeCategoryPlot0.DEFAULT_INSETS, lengthAdjustmentType0, rectangleAnchor0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.util.RectangleAnchor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Undknown layer.");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 0.2, "Undknown layer.");
      IntervalMarker intervalMarker0 = new IntervalMarker(0.5F, 0.5F, subCategoryAxis0.DEFAULT_AXIS_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, levelRenderer0.DEFAULT_OUTLINE_PAINT, levelRenderer0.DEFAULT_OUTLINE_STROKE, 0.0F);
      intervalMarker0.setLabel("Undknown layer.");
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, cyclicNumberAxis0, intervalMarker0, rectangle2D_Float0);
      assertTrue(Axis.DEFAULT_TICK_MARKS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Undknown layer.");
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 0.2, "Undknown layer.");
      IntervalMarker intervalMarker0 = new IntervalMarker(0.5F, 0.5F, subCategoryAxis0.DEFAULT_AXIS_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, levelRenderer0.DEFAULT_OUTLINE_PAINT, levelRenderer0.DEFAULT_OUTLINE_STROKE, 0.0F);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, cyclicNumberAxis0, intervalMarker0, rectangle2D_Float0);
      assertTrue(combinedRangeCategoryPlot0.canSelectByPoint());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 10, (double) 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(10, 0.2, "Undknown layer.");
      IntervalMarker intervalMarker0 = new IntervalMarker(0.05, 10, levelRenderer0.DEFAULT_OUTLINE_PAINT);
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      ganttRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, cyclicNumberAxis0, intervalMarker0, rectangle2D_Float0);
      assertTrue(ganttRenderer0.getShadowsVisible());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D((double) boxAndWhiskerRenderer0.ZERO, (double) lineRenderer3D0.ZERO, false);
      ThermometerPlot thermometerPlot0 = new ThermometerPlot();
      NumberAxis numberAxis0 = (NumberAxis)thermometerPlot0.getRangeAxis();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1.0), (-1.0), boxAndWhiskerRenderer0.DEFAULT_PAINT);
      Rectangle rectangle0 = new Rectangle(5, 3);
      stackedBarRenderer3D0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, numberAxis0, intervalMarker0, rectangle0);
      assertTrue(NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(3, 10, (double) 1.0F, 0.2, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      NumberAxis numberAxis0 = new NumberAxis("");
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      IntervalMarker intervalMarker0 = new IntervalMarker((-1062.6655), 10, numberAxis0.DEFAULT_AXIS_LABEL_PAINT, boxAndWhiskerRenderer0.DEFAULT_STROKE, levelRenderer0.DEFAULT_PAINT, levelRenderer0.DEFAULT_STROKE, 0.0F);
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      intervalBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis0, intervalMarker0, rectangle2D_Float0);
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis3D numberAxis3D0 = new NumberAxis3D();
      ValueMarker valueMarker0 = new ValueMarker((-2479.3798));
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.drawRangeMarker((Graphics2D) null, combinedRangeCategoryPlot0, numberAxis3D0, valueMarker0, (Rectangle2D) null);
      assertTrue(Axis.DEFAULT_TICK_LABELS_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      PiePlot3D piePlot3D0 = new PiePlot3D();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, piePlot3D0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (ChartRenderingInfo) null);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      ValueMarker valueMarker0 = new ValueMarker(1.0F);
      Line2D.Double line2D_Double0 = new Line2D.Double();
      Rectangle2D rectangle2D0 = line2D_Double0.getBounds2D();
      statisticalBarRenderer0.drawRangeMarker(graphics2D0, combinedRangeCategoryPlot0, numberAxis0, valueMarker0, rectangle2D0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      LogAxis logAxis0 = new LogAxis();
      CategoryMarker categoryMarker0 = new CategoryMarker(false);
      statisticalBarRenderer0.drawRangeMarker((Graphics2D) null, (CategoryPlot) null, logAxis0, categoryMarker0, (Rectangle2D) null);
      assertEquals(0.0, statisticalBarRenderer0.getMinimumBarLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DateAxis dateAxis0 = new DateAxis();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, dateAxis0, statisticalLineAndShapeRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, dateAxis0.DEFAULT_AXIS_LABEL_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      statisticalLineAndShapeRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, defaultCaret0);
      assertEquals(1, categoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      DateAxis dateAxis0 = new DateAxis();
      defaultKeyedValues2DDataset0.addValue((Number) 1.0E-8, (Comparable) 0.05, (Comparable) true);
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, dateAxis0, statisticalLineAndShapeRenderer0);
      CategoryMarker categoryMarker0 = new CategoryMarker(true, dateAxis0.DEFAULT_AXIS_LABEL_PAINT, statisticalLineAndShapeRenderer0.DEFAULT_OUTLINE_STROKE);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.drawDomainMarker((Graphics2D) null, categoryPlot0, categoryAxis3D0, categoryMarker0, defaultCaret0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1975.1969, 2126.1923);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.drawRangeLine((Graphics2D) null, combinedRangeCategoryPlot0, cyclicNumberAxis0, rectangle2D_Float0, 2.0F, combinedRangeCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedRangeCategoryPlot0.DEFAULT_OUTLINE_STROKE);
      assertEquals(0.0F, rectangle2D_Float0.height, 0.01F);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 10, (double) 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F, "");
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.drawRangeLine(graphics2D0, combinedRangeCategoryPlot0, cyclicNumberAxis0, rectangle2D_Float0, 0.0F, levelRenderer0.DEFAULT_OUTLINE_PAINT, (Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D_Double0, 4.0, (Paint) null, lineRenderer3D0.DEFAULT_STROKE);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'paint' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      Ellipse2D.Double ellipse2D_Double0 = new Ellipse2D.Double(1.0F, 1.0F, 1.0F, 1.0F);
      Rectangle2D rectangle2D0 = ellipse2D_Double0.getBounds2D();
      // Undeclared exception!
//      try { 
        minMaxCategoryRenderer0.drawDomainLine((Graphics2D) null, combinedRangeCategoryPlot0, rectangle2D0, 1.0, boxAndWhiskerRenderer0.DEFAULT_OUTLINE_PAINT, (Stroke) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'stroke' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      statisticalBarRenderer0.setDataBoundsIncludesVisibleSeriesOnly(false);
      Range range0 = statisticalBarRenderer0.findRangeBounds(defaultKeyedValues2DDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      Range range0 = statisticalLineAndShapeRenderer0.findRangeBounds((CategoryDataset) null, true);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      IntervalBarRenderer intervalBarRenderer0 = new IntervalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 10, (double) 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset();
      // Undeclared exception!
//      try { 
        intervalBarRenderer0.initialise(graphics2D0, rectangle2D_Float0, combinedRangeCategoryPlot0, defaultStatisticalCategoryDataset0, plotRenderingInfo0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Negative 'index'.
//         //
//         verifyException("org.jfree.chart.plot.CategoryPlot", e);
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryItemRendererState categoryItemRendererState0 = minMaxCategoryRenderer0.initialise((Graphics2D) null, rectangle2D_Double0, combinedRangeCategoryPlot0, defaultMultiValueCategoryDataset0, (PlotRenderingInfo) null);
      assertEquals(0, categoryItemRendererState0.getVisibleSeriesCount());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Rectangle rectangle0 = new Rectangle();
      LevelRenderer levelRenderer0 = new LevelRenderer();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      // Undeclared exception!
//      try { 
        levelRenderer0.initialise((Graphics2D) null, rectangle0, combinedRangeCategoryPlot0, (CategoryDataset) null, plotRenderingInfo0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      defaultKeyedValues2DDataset0.addValue(0.2, (Comparable) 0.2, (Comparable) 3.0);
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("org.jfree.chart.plot.CombinedDomainXYPlot");
      NumberAxis3D numberAxis3D0 = new NumberAxis3D("4hEHys;.FHctd*-'Zt");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultKeyedValues2DDataset0, categoryAxis3D0, numberAxis3D0, statisticalBarRenderer0);
      lineRenderer3D0.initialise((Graphics2D) null, rectangle2D0, categoryPlot0, defaultKeyedValues2DDataset0, (PlotRenderingInfo) null);
      assertEquals(1, lineRenderer3D0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
//      try { 
        scatterRenderer0.setLegendItemLabelGenerator((CategorySeriesLabelGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'generator' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("");
      groupedStackedBarRenderer0.setLegendItemLabelGenerator(standardCategorySeriesLabelGenerator0);
      assertEquals(0.2, BarRenderer.DEFAULT_ITEM_MARGIN, 0.01);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Layer layer0 = Layer.BACKGROUND;
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      // Undeclared exception!
//      try { 
        scatterRenderer0.addAnnotation((CategoryAnnotation) null, layer0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Null 'annotation' argument.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CustomCategoryURLGenerator customCategoryURLGenerator0 = new CustomCategoryURLGenerator();
      statisticalBarRenderer0.setBaseURLGenerator((CategoryURLGenerator) customCategoryURLGenerator0, false);
      StatisticalBarRenderer statisticalBarRenderer1 = new StatisticalBarRenderer();
      boolean boolean0 = statisticalBarRenderer0.equals(statisticalBarRenderer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StandardCategoryURLGenerator standardCategoryURLGenerator0 = new StandardCategoryURLGenerator("");
      scatterRenderer0.setSeriesURLGenerator(3, (CategoryURLGenerator) standardCategoryURLGenerator0, true);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.equals(scatterRenderer1);
      assertTrue(scatterRenderer1.equals((Object)scatterRenderer0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      groupedStackedBarRenderer0.setSeriesURLGenerator(3, (CategoryURLGenerator) null, false);
      assertEquals(3, groupedStackedBarRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      DateFormat dateFormat0 = DateFormat.getInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator(";]X^:Q|#gkyAZm,t", dateFormat0);
      stackedAreaRenderer0.setBaseToolTipGenerator((CategoryToolTipGenerator) intervalCategoryToolTipGenerator0, false);
      assertEquals(2, stackedAreaRenderer0.getPassCount());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(0.2, 2350.4062197421);
      stackedBarRenderer3D0.setSeriesToolTipGenerator(1, (CategoryToolTipGenerator) null, false);
      assertEquals(0, stackedBarRenderer3D0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer();
      statisticalLineAndShapeRenderer0.setBaseItemLabelGenerator((CategoryItemLabelGenerator) null, false);
      assertTrue(statisticalLineAndShapeRenderer0.getBaseSeriesVisibleInLegend());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boxAndWhiskerRenderer0.setSeriesItemLabelGenerator(56, (CategoryItemLabelGenerator) null, true);
      assertFalse(boxAndWhiskerRenderer0.isMeanVisible());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      IntervalCategoryItemLabelGenerator intervalCategoryItemLabelGenerator0 = new IntervalCategoryItemLabelGenerator();
      scatterRenderer0.setSeriesItemLabelGenerator(6, (CategoryItemLabelGenerator) intervalCategoryItemLabelGenerator0, false);
      ScatterRenderer scatterRenderer1 = new ScatterRenderer();
      boolean boolean0 = scatterRenderer0.equals(scatterRenderer1);
      assertFalse(boolean0);
      assertTrue(scatterRenderer1.equals((Object)scatterRenderer0));
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      boxAndWhiskerRenderer0.drawItemLabel((Graphics2D) null, plotOrientation0, defaultKeyedValues2DDataset0, 10, 10, true, 1.0F, (double) boxAndWhiskerRenderer0.ZERO, true);
      assertTrue(boxAndWhiskerRenderer0.getAutoPopulateSeriesShape());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(false, false);
      // Undeclared exception!
//      try { 
        lineAndShapeRenderer0.setSeriesURLGenerator((-2994), (CategoryURLGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = ganttRenderer0.getLegendItemToolTipGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = stackedAreaRenderer0.getBaseItemLabelGenerator();
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      LogAxis logAxis0 = new LogAxis();
      StackedBarRenderer stackedBarRenderer0 = new StackedBarRenderer(true);
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("qps.K|YoRt $JT*Ya5");
      CategoryItemRendererState categoryItemRendererState0 = new CategoryItemRendererState(plotRenderingInfo0);
      // Undeclared exception!
//      try { 
        stackedBarRenderer0.createHotSpotShape((Graphics2D) null, (Rectangle2D) null, (CategoryPlot) null, extendedCategoryAxis0, logAxis0, defaultKeyedValues2DDataset0, 2437, 500, false, categoryItemRendererState0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // Not implemented.
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("org.jfree.data.statistics.SimpleHistogramBin");
      stackedAreaRenderer0.setLegendItemToolTipGenerator(standardCategorySeriesLabelGenerator0);
      Object object0 = stackedAreaRenderer0.clone();
      assertNotSame(object0, stackedAreaRenderer0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      DateFormat dateFormat0 = DateFormat.getDateInstance();
      IntervalCategoryToolTipGenerator intervalCategoryToolTipGenerator0 = new IntervalCategoryToolTipGenerator("", dateFormat0);
      stackedAreaRenderer0.setSeriesToolTipGenerator(7, (CategoryToolTipGenerator) intervalCategoryToolTipGenerator0);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedAreaRenderer0.getToolTipGenerator(7, 7, true);
      assertSame(categoryToolTipGenerator0, intervalCategoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 10, (double) 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      minMaxCategoryRenderer0.drawBackground(graphics2D0, combinedRangeCategoryPlot0, rectangle2D_Float0);
      assertFalse(CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      CategoryItemLabelGenerator categoryItemLabelGenerator0 = scatterRenderer0.getSeriesItemLabelGenerator(4099);
      assertNull(categoryItemLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      CategorySeriesLabelGenerator categorySeriesLabelGenerator0 = ganttRenderer0.getLegendItemURLGenerator();
      assertNull(categorySeriesLabelGenerator0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      LineRenderer3D lineRenderer3D0 = new LineRenderer3D();
      lineRenderer3D0.removeAnnotations();
      assertFalse(lineRenderer3D0.getBaseShapesVisible());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      GroupedStackedBarRenderer groupedStackedBarRenderer0 = new GroupedStackedBarRenderer();
      CategoryURLGenerator categoryURLGenerator0 = groupedStackedBarRenderer0.getBaseURLGenerator();
      assertNull(categoryURLGenerator0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      ScatterRenderer scatterRenderer0 = new ScatterRenderer();
      StatisticalLineAndShapeRenderer statisticalLineAndShapeRenderer0 = new StatisticalLineAndShapeRenderer(true, true);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      Number[][] numberArray0 = new Number[0][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((String[]) null, numberArray0, numberArray0);
      // Undeclared exception!
//      try { 
        statisticalLineAndShapeRenderer0.addEntity(standardEntityCollection0, scatterRenderer0.DEFAULT_SHAPE, defaultIntervalCategoryDataset0, (-1534), 3, true, (-1534), 0.0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // The 'row' argument is out of bounds.
//         //
//         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
//      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      PiePlot piePlot0 = new PiePlot();
      JFreeChart jFreeChart0 = new JFreeChart("", statisticalBarRenderer0.DEFAULT_VALUE_LABEL_FONT, piePlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(87, 1645);
      BufferedImageRenderingSource bufferedImageRenderingSource0 = new BufferedImageRenderingSource(bufferedImage0);
      Graphics2D graphics2D0 = bufferedImageRenderingSource0.createGraphics2D();
      // Undeclared exception!
//      try { 
        statisticalBarRenderer0.drawOutline(graphics2D0, (CategoryPlot) null, (Rectangle2D) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      layeredBarRenderer0.hashCode();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      CategoryPlot categoryPlot0 = boxAndWhiskerRenderer0.getPlot();
      assertNull(categoryPlot0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 502, (-914));
      SlidingCategoryDataset slidingCategoryDataset0 = new SlidingCategoryDataset(slidingGanttCategoryDataset0, (-914), 676);
      CategoryAxis categoryAxis0 = new CategoryAxis("Null 't' argument.");
      Dimension dimension0 = new Dimension((-1289), (-914));
      Rectangle rectangle0 = new Rectangle(dimension0);
      LengthAdjustmentType lengthAdjustmentType0 = LengthAdjustmentType.NO_CHANGE;
      Rectangle2D rectangle2D0 = categoryAxis0.DEFAULT_TICK_LABEL_INSETS.createAdjustedRectangle(rectangle0, lengthAdjustmentType0, lengthAdjustmentType0);
      // Undeclared exception!
//      try { 
        stackedAreaRenderer0.getItemMiddle("({0}, {1}) = {3} - {4}", "{2}", slidingCategoryDataset0, categoryAxis0, rectangle2D0, (RectangleEdge) null);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      int int0 = statisticalBarRenderer0.getPassCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer();
      StandardCategorySeriesLabelGenerator standardCategorySeriesLabelGenerator0 = new StandardCategorySeriesLabelGenerator("{2}");
      stackedAreaRenderer0.setLegendItemURLGenerator(standardCategorySeriesLabelGenerator0);
      StackedAreaRenderer stackedAreaRenderer1 = (StackedAreaRenderer)stackedAreaRenderer0.clone();
      assertTrue(stackedAreaRenderer1.getDataBoundsIncludesVisibleSeriesOnly());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      boolean boolean0 = boxAndWhiskerRenderer0.removeAnnotation((CategoryAnnotation) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CategoryAxis categoryAxis0 = statisticalBarRenderer0.getDomainAxis(combinedRangeCategoryPlot0, (CategoryDataset) null);
      assertNull(categoryAxis0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StatisticalBarRenderer statisticalBarRenderer0 = new StatisticalBarRenderer();
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("", 3.0, 371.58585777998);
      statisticalBarRenderer0.addAnnotation((CategoryAnnotation) categoryTextAnnotation0);
      boolean boolean0 = statisticalBarRenderer0.removeAnnotation(categoryTextAnnotation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(true);
      CategoryToolTipGenerator categoryToolTipGenerator0 = stackedAreaRenderer0.getBaseToolTipGenerator();
      assertNull(categoryToolTipGenerator0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      BoxAndWhiskerRenderer boxAndWhiskerRenderer0 = new BoxAndWhiskerRenderer();
      // Undeclared exception!
//      try { 
        boxAndWhiskerRenderer0.setSeriesItemLabelGenerator((-1), (CategoryItemLabelGenerator) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Requires index >= 0.
//         //
//         verifyException("org.jfree.chart.util.AbstractObjectList", e);
//      }
  }
}
