/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 13:15:06 GMT 2021
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.parser.Token;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Token_ESTest extends Token_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("W-_", "W-_");
      attributes0.put(attribute0);
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("W-_", attributes0);
      String string0 = token_StartTag1.toString();
      assertEquals("<W-_  W-_=\"W-_\">", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.normalName = "EOF";
      String string0 = token_EndTag0.normalName();
      assertEquals("EOF", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Token.Tag token_Tag0 = token_EndTag0.name("-i]uj@?u");
      String string0 = ((Token.EndTag) token_Tag0).toString();
      assertEquals("</-i]uj@?u>", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Token.Tag token_Tag0 = token_EndTag0.reset();
      assertSame(token_Tag0, token_EndTag0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      // Undeclared exception!
//      try { 
        token_EndTag0.name();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Must be false
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      String string0 = token_Comment0.getData();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("-i]uj@?u");
      String string0 = token_CData0.getData();
      assertEquals("-i]uj@?u", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Token.Character token_Character0 = new Token.Character();
      Token.Character token_Character1 = token_Character0.data("}}mF");
      assertSame(token_Character1, token_Character0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      boolean boolean0 = token_EndTag0.isCData();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      Token.EndTag token_EndTag1 = token_EndTag0.asEndTag();
      assertSame(token_EndTag1, token_EndTag0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      token_Doctype0.forceQuirks = true;
      Token.Doctype token_Doctype1 = token_Doctype0.asDoctype();
      assertTrue(token_Doctype1.isForceQuirks());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      Token.Doctype token_Doctype1 = token_Doctype0.asDoctype();
      assertFalse(token_Doctype1.isForceQuirks());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      Token.Comment token_Comment1 = token_Comment0.asComment();
      assertSame(token_Comment0, token_Comment1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      // Undeclared exception!
//      try { 
        token_Doctype0.asStartTag();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.jsoup.parser.Token$Doctype cannot be cast to org.jsoup.parser.Token$StartTag
//         //
//         verifyException("org.jsoup.parser.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      // Undeclared exception!
//      try { 
        token_EndTag0.asCharacter();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$Character
//         //
//         verifyException("org.jsoup.parser.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      boolean boolean0 = token_StartTag0.isEOF();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      Token.TokenType token_TokenType0 = Token.TokenType.Character;
      token_EOF0.type = token_TokenType0;
      boolean boolean0 = token_EOF0.isCharacter();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      boolean boolean0 = token_EOF0.isCharacter();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("Ar^cfrw:qyER\"");
      Token.TokenType token_TokenType0 = Token.TokenType.Comment;
      token_CData0.type = token_TokenType0;
      boolean boolean0 = token_CData0.isComment();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("`B%aM.tmqDAS<%X");
      boolean boolean0 = token_CData0.isComment();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      boolean boolean0 = token_EndTag0.isEndTag();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      boolean boolean0 = token_EOF0.isEndTag();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      boolean boolean0 = token_StartTag0.isStartTag();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      boolean boolean0 = token_EOF0.isStartTag();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      boolean boolean0 = token_Doctype0.isDoctype();
      assertTrue(boolean0);
      assertFalse(token_Doctype0.isForceQuirks());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      boolean boolean0 = token_EndTag0.isDoctype();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Attribute attribute0 = new Attribute("{`}XH c6,a$4G?,l", "Character");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put(attribute0);
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("", attributes1);
      // Undeclared exception!
//      try { 
        token_StartTag1.toString();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Must be false
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.appendAttributeValue(")fw#@c89 <$?K");
      token_EndTag0.appendAttributeValue("");
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.appendAttributeName('Y');
      token_EndTag0.appendAttributeName('Y');
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.tagName = "EOF";
      token_EndTag0.appendTagName("=g1Xs;Ag9]~'2nY]");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("", attributes0);
      // Undeclared exception!
//      try { 
        token_StartTag1.toString();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Must be false
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.finaliseTag();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.appendAttributeName("Ar^cfrw:qyER\"");
      token_EndTag0.appendAttributeValue("Ar^cfrw:qyER\"");
      token_EndTag0.finaliseTag();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      int[] intArray0 = new int[2];
      token_EndTag0.appendAttributeValue(intArray0);
      token_EndTag0.appendAttributeName('l');
      token_EndTag0.finaliseTag();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.appendAttributeName('\u001E');
      token_EndTag0.finaliseTag();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.newAttribute();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Token.reset((StringBuilder) null);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      boolean boolean0 = token_Doctype0.isForceQuirks();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      token_Doctype0.getPublicIdentifier();
      assertFalse(token_Doctype0.isForceQuirks());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      token_Doctype0.getPubSysKey();
      assertFalse(token_Doctype0.isForceQuirks());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      Token.Doctype token_Doctype1 = (Token.Doctype)token_Doctype0.reset();
      Token.TokenType token_TokenType0 = Token.TokenType.EOF;
      token_Doctype1.type = token_TokenType0;
      boolean boolean0 = token_Doctype1.isEOF();
      assertFalse(token_Doctype0.isForceQuirks());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      token_Doctype0.getName();
      assertFalse(token_Doctype0.isForceQuirks());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Token.Doctype token_Doctype0 = new Token.Doctype();
      token_Doctype0.getSystemIdentifier();
      assertFalse(token_Doctype0.isForceQuirks());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Token.Character token_Character0 = new Token.Character();
      String string0 = token_Character0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("<");
      Token token0 = token_CData0.reset();
      assertSame(token0, token_CData0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("<");
      String string0 = token_CData0.toString();
      assertEquals("<![CDATA[<]]>", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      Token token0 = token_Comment0.reset();
      assertSame(token_Comment0, token0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Token.Comment token_Comment0 = new Token.Comment();
      String string0 = token_Comment0.toString();
      assertEquals("<!---->", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      Token token0 = token_EOF0.reset();
      assertSame(token0, token_EOF0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      boolean boolean0 = token_EndTag0.isSelfClosing();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.setEmptyAttributeValue();
      token_EndTag0.appendAttributeName('Y');
      token_EndTag0.finaliseTag();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.appendTagName('6');
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.appendAttributeValue(':');
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      token_EndTag0.appendAttributeName('l');
      token_EndTag0.finaliseTag();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      char[] charArray0 = new char[6];
      token_StartTag0.appendAttributeValue(charArray0);
      assertEquals(6, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.getAttributes();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      // Undeclared exception!
//      try { 
        token_EndTag0.asComment();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$Comment
//         //
//         verifyException("org.jsoup.parser.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Token.EndTag token_EndTag0 = new Token.EndTag();
      // Undeclared exception!
//      try { 
        token_EndTag0.asDoctype();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.jsoup.parser.Token$EndTag cannot be cast to org.jsoup.parser.Token$Doctype
//         //
//         verifyException("org.jsoup.parser.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Token.StartTag token_StartTag1 = token_StartTag0.asStartTag();
      assertSame(token_StartTag0, token_StartTag1);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("");
      Token.Character token_Character0 = token_CData0.asCharacter();
      assertSame(token_CData0, token_Character0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("<");
      // Undeclared exception!
//      try { 
        token_CData0.asEndTag();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$EndTag
//         //
//         verifyException("org.jsoup.parser.Token", e);
//      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Token.EOF token_EOF0 = new Token.EOF();
      String string0 = token_EOF0.tokenType();
      assertEquals("EOF", string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Token.CData token_CData0 = new Token.CData("<");
      boolean boolean0 = token_CData0.isCData();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Token.Tag token_Tag0 = token_StartTag0.reset();
      assertSame(token_StartTag0, token_Tag0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("6Y*~qPTB?~", (Attributes) null);
      String string0 = token_StartTag1.toString();
      assertEquals("<6Y*~qPTB?~>", string0);
  }
}
