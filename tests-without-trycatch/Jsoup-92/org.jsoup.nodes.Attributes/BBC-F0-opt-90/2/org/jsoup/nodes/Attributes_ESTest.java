/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 19:53:22 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Attributes_ESTest extends Attributes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("9YC", "9YC");
      attributes0.hashCode();
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("samp", "samp");
      Attributes attributes1 = new Attributes();
      Attributes attributes2 = attributes1.put("samp", "samp");
      boolean boolean0 = attributes2.equals(attributes0);
      assertEquals(1, attributes1.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      Attributes attributes2 = attributes0.put("q2", "");
      boolean boolean0 = attributes1.equals(attributes2);
      assertEquals(1, attributes0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("[#C)w[", "J~eAt_dSy=2:TEr");
      attributes0.put("X8pX A-*+:$+nfopU", true);
      attributes0.remove("X8pX A-*+:$+nfopU");
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("[#C)w[", "J~eAt_dSy=2:TEr");
      Attributes attributes2 = attributes0.put("X8pX A-*+:$+nfopU", true);
      Attributes attributes3 = attributes2.put("2a:,pmR<Y6tQ\"", "2a:,pmR<Y6tQ\"");
      attributes3.addAll(attributes2);
      Attributes attributes4 = attributes1.put("AfterDoctypeName", "J~eAt_dSy=2:TEr");
      attributes0.addAll(attributes4);
      assertEquals(4, attributes1.size());
      assertEquals(4, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("J~eAt_dSy=2:TEr", "+>x2z{%)f*bjk.2Tg1");
      Attributes attributes1 = attributes0.put("x", true);
      attributes1.addAll(attributes0);
      assertEquals(2, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("KD:,ZWC[", "KD:,ZWC[");
      attributes0.toString();
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("[#C)w[", "J~eAt_dSy=2:TEr");
      int int0 = attributes0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Iterator<Attribute> iterator0 = attributes0.iterator();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("]rl!TaYK**f>DmjOd", "]rl!TaYK**f>DmjOd");
      int int0 = attributes0.indexOfKey("]rl!TaYK**f>DmjOd");
      assertEquals(1, attributes0.size());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("UTF-", "UTF-");
      attributes1.putIgnoreCase("~hfD#7]!qzJX$~X", "UTF-");
      int int0 = attributes0.indexOfKey("~hfD#7]!qzJX$~X");
      assertEquals(2, attributes0.size());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("?#jb(!x]8xhE^D:1Ty", "I]Fs");
      attributes0.getIgnoreCase("?#jb(!x]8xhE^D:1Ty");
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = Attributes.checkNotNull("x");
      assertEquals("x", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = Attributes.checkNotNull((String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("p", "p");
      attributes1.keys = null;
      // Undeclared exception!
//      try { 
        attributes1.toString();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("wppx", "wppx");
      Attributes attributes1 = attributes0.put(attribute0);
      Attributes attributes2 = attributes1.put("BogusDoctype", "wppx");
      attributes1.put(")YWLq3@]Bg'l", "BogusDoctype");
      String[] stringArray0 = new String[2];
      attributes2.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes1.toString();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("figcaption", "org.jsoup.nodes.Attributes$Dataset");
      attributes1.keys = null;
      // Undeclared exception!
//      try { 
        attributes0.removeIgnoreCase("4B@3vdsifdn/");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.removeIgnoreCase((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("<!", true);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.removeIgnoreCase("<!");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("m7Fo++91 ", "m7Fo++91 ");
      Attribute attribute0 = new Attribute("m7Fo++91 ", "m7Fo++91 ");
      Attributes attributes1 = attributes0.put(attribute0);
      attributes1.vals = null;
      // Undeclared exception!
//      try { 
        attributes0.remove("m7Fo++91 ");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.remove((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[0];
      Attributes attributes1 = attributes0.put("org.jsoup.nodes.Attributes$1", true);
      attributes1.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes1.remove("org.jsoup.nodes.Attributes$1");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.keys = null;
      // Undeclared exception!
//      try { 
        attributes0.putIgnoreCase("9YC", "9YC");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.putIgnoreCase((String) null, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[7];
      attributes0.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.putIgnoreCase("$J!(RkV&}/ ", "$J!(RkV&}/ ");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.keys = null;
      Attribute attribute0 = Attribute.createFromEncoded("44.(", "44.(");
      // Undeclared exception!
//      try { 
        attributes0.put(attribute0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.put((Attribute) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[7];
      attributes0.keys = stringArray0;
      Attribute attribute0 = new Attribute("]^i~3", "bB5oe;[q&r", attributes0);
      // Undeclared exception!
//      try { 
        attributes0.put(attribute0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.keys = null;
      // Undeclared exception!
//      try { 
        attributes0.put("mn36E(hh'cOO/NAd+`b", true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.put((String) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[6];
      attributes0.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.put("org.jsoup.nodes.Attributes$Dataset", true);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.keys = null;
      // Undeclared exception!
//      try { 
        attributes0.put("org.jsoup.parser.ParseSettings", " ");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.put((String) null, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("`?g#gd&`s", false);
      String[] stringArray0 = new String[8];
      attributes1.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.put("org.jsoup.nodes.Element", "+Qx=V.FnD?t");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put(":eX", ":eX");
      attributes1.keys = null;
      // Undeclared exception!
//      try { 
        attributes1.normalize();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[0];
      attributes0.put("figcaption", "figcaption");
      attributes0.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.normalize();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("<!", "<!");
      attributes0.keys = null;
      // Undeclared exception!
//      try { 
        attributes0.indexOfKey("=");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.indexOfKey((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("y|o(c!3@$6:2=tr@", false);
      attributes1.put("y|o(c!3@$6:2=tr@", "y|o(c!3@$6:2=tr@");
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes1.indexOfKey("o1z");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("kq", "kq");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "kq");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        attributes1.html((Appendable) charBuffer0, document_OutputSettings0);
//        fail("Expecting exception: ReadOnlyBufferException");
      
//      } catch(ReadOnlyBufferException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.StringCharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("Tc_x,1a", "<!");
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        attributes0.html((Appendable) charBuffer0, document_OutputSettings0);
//        fail("Expecting exception: BufferOverflowException");
      
//      } catch(BufferOverflowException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.CharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("org.jsoup.nodes.Attributes", true);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      // Undeclared exception!
//      try { 
        attributes1.html((Appendable) charArrayWriter0, (Document.OutputSettings) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("<!", "<!");
      String[] stringArray0 = new String[0];
      attributes0.keys = stringArray0;
      MockPrintStream mockPrintStream0 = new MockPrintStream("m$6n9gz1f3{mi{");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        attributes0.html((Appendable) mockPrintStream0, document_OutputSettings0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("`?LV", "org.jsoup.nodes.Attributes", attributes0);
      attributes0.put(attribute0);
      MockFileWriter mockFileWriter0 = new MockFileWriter(" `?LV=\"org.jsoup.nodes.Attributes\"");
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockFileWriter0);
      bufferedWriter0.close();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
//      try { 
        attributes0.html((Appendable) bufferedWriter0, document_OutputSettings0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Stream closed
//         //
//         verifyException("java.io.BufferedWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("<clji^", "(XC");
      attributes1.vals = null;
      // Undeclared exception!
//      try { 
        attributes1.html();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("2`w{`gj:", "2`w{`gj:");
      attributes1.putIgnoreCase("R", "2`w{`gj:");
      Attributes attributes2 = attributes0.put("x*h?Y$#yL~", "x*h?Y$#yL~");
      String[] stringArray0 = new String[2];
      attributes2.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.html();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("p", "p");
      attributes1.keys = null;
      // Undeclared exception!
//      try { 
        attributes0.hasKeyIgnoreCase("s");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.hasKeyIgnoreCase((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("org.jsoup.nodes.Attributes$Dataset$DatasetIterator", (String) null);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.hasKeyIgnoreCase("_2l,jpy,:fbn.ly+h");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("<!", "  ");
      attributes1.keys = null;
      // Undeclared exception!
//      try { 
        attributes1.hasKey("  ");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.hasKey((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("<!", "<!");
      String[] stringArray0 = new String[0];
      attributes0.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.hasKey("=\"");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("<!", "<!");
      attributes0.keys = null;
      // Undeclared exception!
//      try { 
        attributes0.getIgnoreCase("=\"");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.getIgnoreCase((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("<!", true);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes1.getIgnoreCase("<!");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("=\"", "<!");
      attributes0.vals = null;
      // Undeclared exception!
//      try { 
        attributes0.get("=\"");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.get((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("W1AqT-\"Nv&", true);
      String[] stringArray0 = new String[0];
      attributes1.vals = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.get("W1AqT-\"Nv&");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.vals = null;
      // Undeclared exception!
//      try { 
        attributes0.clone();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("~z )ob,", "nQ*%=B6-Nj5D?e!D6K");
      attributes1.keys = null;
      // Undeclared exception!
//      try { 
        attributes1.asList();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("", "Zk9np^5hb!");
      // Undeclared exception!
//      try { 
        attributes0.asList();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("org.jsoup.parser.TokeniserState", "&rL.=GmQE^f<");
      String[] stringArray0 = new String[0];
      attributes0.vals = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.asList();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.addAll((Attributes) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      attributes1.put("uxfb9hLX``!", "qc!8");
      String[] stringArray0 = new String[0];
      attributes1.vals = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.addAll(attributes1);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("J~eAt_dSy=2:TEr", "+>x2z{%)f*bjk.2Tg1");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockPrintWriter0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      attributes1.html((Appendable) bufferedWriter0, document_OutputSettings0);
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.remove("R6Orj1:DBL");
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("KD:,ZWC[", "KD:,ZWC[");
      attributes0.normalize();
      attributes0.putIgnoreCase("KD:,ZWC[", ")(L, ?}L&");
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("k=;%eIfW+&]edu<", "                 ");
      Attributes attributes1 = attributes0.put(attribute0);
      attributes1.put("k=;%eIfW+&]edu<", "E-,!73H/");
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("UTF-", "UTF-");
      attributes0.indexOfKey("~hfD#7]!qzJX$~X");
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      int int0 = attributes0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("a", "GW");
      Attributes attributes2 = attributes1.clone();
      boolean boolean0 = attributes0.equals(attributes2);
      assertEquals(1, attributes0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      assertEquals(0, attributes1.size());
      
      attributes1.put("u01d", true);
      boolean boolean0 = attributes1.equals(attributes0);
      assertEquals(1, attributes1.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      boolean boolean0 = attributes0.equals("m{r?gp|y8?)<9");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      boolean boolean0 = attributes0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      boolean boolean0 = attributes0.equals(attributes0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("org.jsoup.nodes.Attributes$Dataset", true);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(695);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      attributes1.html((Appendable) charArrayWriter0, document_OutputSettings0);
      assertEquals(1, attributes0.size());
      assertEquals(" org.jsoup.nodes.Attributes$Dataset=\"\"", charArrayWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("x", true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockPrintWriter0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      attributes0.html((Appendable) bufferedWriter0, document_OutputSettings0);
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("a", "GW");
      attributes0.html();
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("[#C)w[", true);
      List<Attribute> list0 = attributes1.asList();
      assertEquals(1, attributes0.size());
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.addAll(attributes0);
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("", "");
      boolean boolean0 = attributes0.hasKeyIgnoreCase("");
      assertEquals(1, attributes0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      boolean boolean0 = attributes0.hasKeyIgnoreCase("D.k");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("org.jsoup.nodes.Attributes", true);
      boolean boolean0 = attributes1.hasKey("org.jsoup.nodes.Attributes");
      assertEquals(1, attributes0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      boolean boolean0 = attributes0.hasKey("async");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("utf", "utf");
      assertEquals(1, attributes0.size());
      
      attributes0.removeIgnoreCase("utf");
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.removeIgnoreCase("FY{aqU)wN 27");
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("[#C)w[", "J~eAt_dSy=2:TEr");
      attributes1.put("[#C)w[", true);
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = attributes0.getIgnoreCase("=\"");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = attributes0.get("uVg2 b1Y#O*g|p(");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("=\"", "<!");
      String string0 = attributes0.get("=\"");
      assertEquals("<!", string0);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("J~eAt_dSy=2:TEr", "*zd>~NlJ<");
      Attributes attributes2 = attributes1.put("", "Ua~K");
      Attributes attributes3 = attributes0.put("*zd>~NlJ<", true);
      attributes1.clone();
      // Undeclared exception!
//      try { 
        attributes2.addAll(attributes3);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.hashCode();
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Map<String, String> map0 = attributes0.dataset();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = attributes0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.html();
  }
}
