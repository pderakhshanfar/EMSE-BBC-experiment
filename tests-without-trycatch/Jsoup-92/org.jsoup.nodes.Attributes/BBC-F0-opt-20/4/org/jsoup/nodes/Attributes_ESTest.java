/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 19:54:03 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.Iterator;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Attributes_ESTest extends Attributes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("org.jsoup.nodes.Attributes$Dataset$DatasetIterator", "data-");
      attributes0.hashCode();
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      boolean boolean0 = attributes0.equals(attributes1);
      assertTrue(boolean0);
      assertNotSame(attributes1, attributes0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      attributes1.put("ismap", true);
      boolean boolean0 = attributes1.equals(attributes0);
      assertEquals(1, attributes1.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("$-<}h$,;)'GTt?", "$-<}h$,;)'GTt?");
      Attributes attributes1 = attributes0.put(attribute0);
      attributes0.put("/", true);
      attributes1.removeIgnoreCase("/");
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("Insert position out of bounds.", "org.jsoup.nodes.Attributes$Dataset");
      Attribute attribute0 = new Attribute("xhtml", (String) null, attributes1);
      Attributes attributes2 = attributes0.put(attribute0);
      attributes2.putIgnoreCase(")S*lGD`PN`(>", (String) null);
      Attributes attributes3 = attributes0.put("=\"", true);
      attributes2.put(" Insert position out of bounds. xhtml=\"\" )S*lGD`PN`(> =\"", true);
      attributes3.addAll(attributes0);
      assertEquals(6, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("]tU}.(&", true);
      int int0 = attributes1.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Iterator<Attribute> iterator0 = attributes0.iterator();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("org.jsoup.nodes.Attributes$Dataset$DatasetIterator", "data-");
      int int0 = attributes0.indexOfKey("org.jsoup.nodes.Attributes$Dataset$DatasetIterator");
      assertEquals(1, attributes0.size());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("ctU}.(&", "w1df8WESi`=.]U");
      Attributes attributes1 = attributes0.put("w1df8WESi`=.]U", "ctU}.(&");
      int int0 = attributes1.indexOfKey("w1df8WESi`=.]U");
      assertEquals(2, attributes0.size());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      int int0 = attributes0.indexOfKey("");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("guN0%sM#6\"HN", true);
      attributes0.html();
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = Attributes.checkNotNull("&#x");
      assertEquals("&#x", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = Attributes.checkNotNull("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("$-<}h$,;)'gtt?", "v");
      attributes1.keys = null;
      // Undeclared exception!
//      try { 
        attributes1.toString();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("org.jsoup.nodes.Attributes$Dataset$EntrySet", "py_&Py(YFBABv#xfU");
      Attribute attribute0 = new Attribute("--2^z)", "34l%MeV~]B^9Qk5b");
      Attributes attributes1 = attributes0.put(attribute0);
      String[] stringArray0 = new String[1];
      attributes1.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes1.toString();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("]tU}.(&", true);
      attributes1.vals = null;
      // Undeclared exception!
//      try { 
        attributes0.removeIgnoreCase("]tU}.(&");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.removeIgnoreCase((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("Z%9'W", "Z%9'W");
      Attribute attribute0 = new Attribute("org.jsoup.nodes.Attributes", "org.jsoup.nodes.Attributes");
      attributes0.putIgnoreCase("PW", "Z%9'W");
      Attributes attributes1 = attributes0.put(attribute0);
      String[] stringArray0 = new String[2];
      attributes1.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes1.removeIgnoreCase("data-");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 2
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("3", "3");
      attributes0.keys = null;
      // Undeclared exception!
//      try { 
        attributes0.remove("1");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.remove((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put(" &rO4_,EtF}iTAR+Eno", "fCI");
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.remove(" &rO4_,EtF}iTAR+Eno");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.vals = null;
      // Undeclared exception!
//      try { 
        attributes0.putIgnoreCase("3", "^l`GCO!mI?3hM ");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.putIgnoreCase((String) null, "(`k.\ni o{.");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[1];
      attributes0.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.putIgnoreCase("org.jsoup.nodes.Attributes$1", "t\b/+gy");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("1\"/+gW5S}tk14~", "1\"/+gW5S}tk14~");
      attributes0.keys = null;
      // Undeclared exception!
//      try { 
        attributes0.put(attribute0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.put((Attribute) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("]tU}.(&", "]tU}.(&");
      String[] stringArray0 = new String[7];
      attributes0.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.put(attribute0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      attributes1.keys = null;
      // Undeclared exception!
//      try { 
        attributes1.put("org.jsoup.nodes.Attributes$1", true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.put((String) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[3];
      attributes0.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.put("a", true);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.vals = null;
      // Undeclared exception!
//      try { 
        attributes0.put("-->", "-->");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.put((String) null, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[7];
      attributes0.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.put("]/q&l|:#d@5Sw~*k36", "org.jsoup.nodes.Attributes$Dataset$EntrySet");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("ctU}.(&", "ctU}.(&");
      attributes1.keys = null;
      // Undeclared exception!
//      try { 
        attributes1.normalize();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("ujpu('8L", "ujpu('8L");
      attributes0.put(attribute0);
      String[] stringArray0 = new String[0];
      attributes0.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.normalize();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("1\"/+gW5S}tk14~", "1\"/+gW5S}tk14~");
      attributes0.keys = null;
      // Undeclared exception!
//      try { 
        attributes0.indexOfKey("1\"/+gW5S}tk14~");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[6];
      // Undeclared exception!
//      try { 
        attributes0.indexOfKey(stringArray0[3]);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("guN0%sM#6\"HN", true);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes1.indexOfKey("PnT+jf^/L/EC");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("ujpu('8L", "ujpu('8L");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "ujpu('8L");
      // Undeclared exception!
//      try { 
        attributes1.html((Appendable) charBuffer0, (Document.OutputSettings) null);
//        fail("Expecting exception: ReadOnlyBufferException");
      
//      } catch(ReadOnlyBufferException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.StringCharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("org.jsoup.nodes.Attributes", "org.jsoup.nodes.Attributes$1", attributes0);
      attributes0.put(attribute0);
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        attribute0.parent.html((Appendable) charBuffer0, document_OutputSettings0);
//        fail("Expecting exception: BufferOverflowException");
      
//      } catch(BufferOverflowException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.CharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("org.jsoup.helper.Validate", "org.jsoup.helper.Validate");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        attributes0.html((Appendable) null, document_OutputSettings0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("3", "3");
      String[] stringArray0 = new String[0];
      attributes1.vals = stringArray0;
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        attributes0.html((Appendable) null, document_OutputSettings0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put(",}maQ3$]P$vn'E\u0016", "6k>?m\"i-%ka:qgke6g");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
//      try { 
        attributes0.html((Appendable) pipedWriter0, document_OutputSettings0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Pipe not connected
//         //
//         verifyException("java.io.PipedWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("A1g X<.P", "oTPUMOcQ#lt0f^");
      Attributes attributes1 = attributes0.put(attribute0);
      attributes1.keys = null;
      // Undeclared exception!
//      try { 
        attributes0.html();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("3", "<e[-$<f");
      String[] stringArray0 = new String[0];
      attributes1.keys = null;
      attributes1.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes1.html();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("1\"/+gW5S}tk14~", "1\"/+gW5S}tk14~");
      attributes0.keys = null;
      // Undeclared exception!
//      try { 
        attributes0.hasKeyIgnoreCase("v+sVsR|xxYs");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.hasKeyIgnoreCase((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("3", "3");
      Attributes attributes2 = attributes1.put("E7(db&foMn.46_X,U'", true);
      String[] stringArray0 = new String[1];
      attributes2.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.hasKeyIgnoreCase("2");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("sortable", "f`a/nFg(c|V'D");
      attributes1.keys = null;
      // Undeclared exception!
//      try { 
        attributes1.hasKey("");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.hasKey((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("3", "3");
      Attributes attributes1 = attributes0.put(attribute0);
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.hasKey("6");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("]tU}.(&", true);
      attributes1.vals = null;
      // Undeclared exception!
//      try { 
        attributes1.getIgnoreCase("]tU}.(&");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.getIgnoreCase((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("3", "<e[-$<f");
      String[] stringArray0 = new String[0];
      attributes1.keys = null;
      attributes1.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.getIgnoreCase("<e[-$<f");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("3", "org.jsoup.nodes.Attributes$Dataset");
      Attributes attributes1 = attributes0.put(attribute0);
      attributes1.vals = null;
      // Undeclared exception!
//      try { 
        attributes0.get("3");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.get((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("]tU}.(&", "]tU}.(&");
      String[] stringArray0 = new String[0];
      attributes1.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.get("]tU}.(&");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("S{P9mSs,pe*P;", "value");
      Attributes attributes1 = attributes0.put(attribute0);
      attributes1.vals = null;
      // Undeclared exception!
//      try { 
        attributes1.clone();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("ctU}.(&", "ctU}.(&");
      attributes1.keys = null;
      // Undeclared exception!
//      try { 
        attributes1.asList();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("", "-&1J_f4e0s{[");
      // Undeclared exception!
//      try { 
        attributes1.asList();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("org.jsoup.nodes.Attributes$Dataset$EntrySet", "py_&Py(YFBABv#xfU");
      Attribute attribute0 = new Attribute("--2^z)", "34l%MeV~]B^9Qk5b");
      Attributes attributes1 = attributes0.put(attribute0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "/";
      attributes1.keys = stringArray0;
      // Undeclared exception!
//      try { 
        attributes1.asList();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      // Undeclared exception!
//      try { 
        attributes0.addAll((Attributes) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("=\"", "]tU}.(&");
      String[] stringArray0 = new String[0];
      attributes1.vals = stringArray0;
      // Undeclared exception!
//      try { 
        attributes0.addAll(attributes1);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes$1", e);
//      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("$-<}h$,;)'GTt?", "$-<}h$,;)'GTt?");
      Attributes attributes1 = attributes0.put(attribute0);
      StringWriter stringWriter0 = new StringWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      attributes1.html((Appendable) stringWriter0, document_OutputSettings0);
      assertEquals(1, attributes0.size());
      assertEquals(" $-<}h$,;)'GTt?=\"$-<}h$,;)'GTt?\"", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("/", true);
      StringWriter stringWriter0 = new StringWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      attributes0.html((Appendable) stringWriter0, document_OutputSettings0);
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.remove("#root");
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("Mf.l?7e[p!GrWY|", "");
      assertEquals(1, attributes0.size());
      
      attributes0.remove("Mf.l?7e[p!GrWY|");
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("UY", "UY");
      attributes0.normalize();
      attributes0.put("UY", true);
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("s8dbaa0N", "{");
      attributes1.put("s8dbaa0N", "g?`");
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      int int0 = attributes0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = attributes0.html();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      Attribute attribute0 = Attribute.createFromEncoded("]/q&l|:#d@5Sw~*k36", "]/q&l|:#d@5Sw~*k36");
      attributes1.put(attribute0);
      Attributes attributes2 = attributes0.put("kbd", "]/q&l|:#d@5Sw~*k36");
      boolean boolean0 = attributes2.equals(attributes1);
      assertEquals(1, attributes0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("$-<}h$,;)'gtt?", true);
      Attributes attributes1 = new Attributes();
      boolean boolean0 = attributes1.equals(attributes0);
      assertEquals(1, attributes0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      boolean boolean0 = attributes0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      boolean boolean0 = attributes0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      boolean boolean0 = attributes0.equals(attributes0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("61E5YWg+>fI", true);
      StringWriter stringWriter0 = new StringWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      attributes0.html((Appendable) stringWriter0, document_OutputSettings1);
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("=\"", "]tU}.(&");
      attributes0.toString();
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("=\"", "]^5x( dHYUptN?3");
      attributes0.asList();
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("UY", true);
      List<Attribute> list0 = attributes1.asList();
      assertEquals(1, attributes0.size());
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.addAll(attributes0);
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("ismap", ";DQhJo=am");
      Attributes attributes1 = attributes0.put(attribute0);
      boolean boolean0 = attributes1.hasKeyIgnoreCase("ismap");
      assertEquals(1, attributes0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      boolean boolean0 = attributes0.hasKeyIgnoreCase("Array must not contain any null objects");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.putIgnoreCase("yn", "data-");
      boolean boolean0 = attributes0.hasKey("yn");
      assertEquals(1, attributes0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      boolean boolean0 = attributes0.hasKey("P?mF:}XN<}g<7I*>%h");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.removeIgnoreCase("5Cn4ZpjAYwO1+Vbqj");
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("UY", "UY");
      Attributes attributes1 = attributes0.put(attribute0);
      attributes1.put("61E5YWg+>fI", true);
      attributes1.put("UY", false);
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("]tU}.(&", false);
      assertEquals(0, attributes1.size());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("s8dbaa0N", "{");
      attributes1.put("s8dbaa0N", true);
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = attributes0.getIgnoreCase("org.jsoup.nodes.Attributes$1");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("org.jsoup.nodes.Attributes$Dataset$EntrySet", "$-<}h$,;)'GTt?");
      String string0 = attributes1.getIgnoreCase("org.jsoup.nodes.Attributes$Dataset$EntrySet");
      assertEquals(1, attributes0.size());
      assertEquals("$-<}h$,;)'GTt?", string0);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String string0 = attributes0.get("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("3", "org.jsoup.nodes.Attributes$Dataset");
      attributes0.put(attribute0);
      attributes0.get("3");
      assertEquals(1, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("UY", true);
      attributes0.normalize();
      attributes0.putIgnoreCase("data-", " uy");
      Attributes attributes2 = attributes1.clone();
      Attribute attribute0 = new Attribute("UY", "$-<}h$,;)'gtt?");
      attributes1.put(attribute0);
      attributes2.addAll(attributes1);
      assertEquals(3, attributes0.size());
      assertEquals(3, attributes2.size());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("s8dbaa0N", "s8dbaa0N");
      Attribute attribute0 = Attribute.createFromEncoded("'d$?}[I|<$$$~W$TL@p", "org.jsoup.nodes.Attributes$Dataset$EntrySet");
      Attributes attributes2 = attributes1.put(attribute0);
      Attributes attributes3 = attributes2.put("", true);
      // Undeclared exception!
//      try { 
        attributes3.addAll(attributes1);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.hashCode();
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.dataset();
      assertEquals(0, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.toString();
  }
}
