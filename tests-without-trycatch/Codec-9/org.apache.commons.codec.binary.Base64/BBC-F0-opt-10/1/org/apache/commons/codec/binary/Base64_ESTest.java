/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 20:11:35 GMT 2021
 */

package org.apache.commons.codec.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import org.apache.commons.codec.binary.Base64;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Base64_ESTest extends Base64_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[93];
      Base64 base64_0 = new Base64(17, byteArray0);
      byte[] byteArray1 = base64_0.encode(byteArray0);
      byte[] byteArray2 = base64_0.encode(byteArray1);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64URLSafeString(byteArray2);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-73);
      byteArray0[1] = (byte) (-58);
      byteArray0[2] = (byte) (-2);
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte)18;
      byteArray0[5] = (byte) (-98);
      byteArray0[6] = (byte) (-70);
      byteArray0[7] = (byte)18;
      Base64 base64_0 = new Base64((-2509), byteArray0);
      base64_0.encodeToString(byteArray0);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0, false);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[86];
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(17);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[93];
      int int0 = 17;
      Base64 base64_0 = new Base64(17, byteArray0);
      byte[] byteArray1 = base64_0.encode(byteArray0);
      byte[] byteArray2 = base64_0.encode(byteArray1);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64URLSafeString(byteArray2);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[72];
      Base64 base64_0 = new Base64(14, byteArray0);
      byte[] byteArray1 = base64_0.encode(byteArray0);
      base64_0.encode(byteArray1);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64String(byteArray1);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[84];
      Base64 base64_0 = new Base64(23, byteArray0);
      byte[] byteArray1 = base64_0.encode(byteArray0);
      base64_0.encode(byteArray1);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64URLSafeString(byteArray1);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[84];
      int int0 = 23;
      Base64 base64_0 = new Base64(23, byteArray0);
      byte[] byteArray1 = base64_0.encode(byteArray0);
      base64_0.encode(byteArray1);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64URLSafeString(byteArray1);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[84];
      Base64 base64_0 = new Base64(23, byteArray0);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte) (-68);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte) (-35);
      Base64.isBase64(byteArray0);
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(true);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[125];
      Base64 base64_0 = new Base64(7, byteArray0);
      base64_0.encode(byteArray0, 7, 64);
      base64_0.encode(byteArray0, 64, 7);
      // Undeclared exception!
//      try { 
        base64_0.encode(byteArray0, 7, 4781);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 125
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[75];
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(true);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Base64 base64_0 = new Base64((-1052), byteArray0);
      base64_0.readResults(byteArray0, (-797), (-739));
      Object object0 = base64_0.decode((Object) "#xxod");
      // Undeclared exception!
//      try { 
        base64_0.encode(object0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(25);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      Base64 base64_0 = new Base64(14, byteArray0);
      byte[] byteArray1 = base64_0.encode(byteArray0);
      byte[] byteArray2 = base64_0.encode(byteArray1);
      // Undeclared exception!
//      try { 
        Base64.decodeInteger(byteArray2);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      Base64 base64_0 = new Base64(14, byteArray0);
      base64_0.encode(byteArray0);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64URLSafeString(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[84];
      Base64 base64_0 = new Base64(14, byteArray0);
      byte[] byteArray1 = base64_0.encode(byteArray0);
      base64_0.encode(byteArray1);
      // Undeclared exception!
//      try { 
        Base64.decodeBase64("");
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(23);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[84];
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0, true, true, (int) (byte)14);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(false);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      byte[] byteArray0 = new byte[0];
      Base64 base64_0 = new Base64(1873, byteArray0);
      byte[] byteArray1 = base64_0.decode("");
      Base64 base64_1 = new Base64(302, byteArray0, false);
      base64_1.encode(byteArray1);
      // Undeclared exception!
//      try { 
        Base64.decodeBase64("");
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(true);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Base64.isBase64((byte)61);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)61;
      // Undeclared exception!
//      try { 
        Base64.decodeInteger(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      Base64.isBase64((byte) (-80));
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(false);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byte byte0 = (byte)15;
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((byte)15);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(false);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0, true);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(true);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte[] byteArray1 = Base64.CHUNK_SEPARATOR;
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0, true);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = null;
      Base64.encodeBase64URLSafeString((byte[]) null);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)4;
      byteArray1[1] = (byte)85;
      byteArray1[2] = (byte)100;
      byteArray1[3] = (byte)88;
      byteArray1[4] = (byte)15;
      byteArray1[5] = (byte)97;
      // Undeclared exception!
//      try { 
        Base64.decodeInteger(byteArray1);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      Base64 base64_0 = new Base64((-80), byteArray0, false);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((-417));
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Base64 base64_0 = new Base64((byte)25, byteArray0, true);
      base64_0.encode(byteArray0, (-1398), (-1398));
      BigInteger bigInteger0 = BigInteger.ZERO;
      byte[] byteArray1 = Base64.toIntegerBytes(bigInteger0);
      byte[] byteArray2 = base64_0.encode(byteArray1);
      assertEquals(0, byteArray2.length);
      
      byte[] byteArray3 = Base64.encodeBase64(byteArray2, true, true, (-2514));
      assertEquals(0, byteArray3.length);
      assertTrue(base64_0.isUrlSafe());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger.valueOf(1268L);
      bigInteger0.abs();
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      Base64 base64_0 = new Base64((byte)0, byteArray0, false);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0, true, true, 697);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)27;
      byteArray0[0] = (byte)27;
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte2 = (byte) (-73);
      byteArray0[2] = (byte) (-73);
      byteArray0[3] = (byte)25;
      Base64 base64_0 = new Base64(23, byteArray0, false);
      // Undeclared exception!
//      try { 
        Base64.decodeInteger(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Base64.discardWhitespace(byteArray0);
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((byte)116);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      bigInteger0.nextProbablePrime();
      bigInteger0.bitLength();
      bigInteger0.shortValueExact();
      byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
      // Undeclared exception!
//      try { 
        Base64.decodeBase64(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)120;
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)0;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)27;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-73);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      bigInteger0.isProbablePrime((-1));
      BigInteger bigInteger1 = BigInteger.ZERO;
      bigInteger0.subtract(bigInteger1);
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)27;
      byteArray0[2] = (byte) (-73);
      byteArray0[3] = (byte)27;
      byteArray0[4] = (byte) (-73);
      BigInteger bigInteger1 = new BigInteger(byteArray0);
      bigInteger1.isProbablePrime((-1));
      BigInteger bigInteger2 = BigInteger.ZERO;
      bigInteger0.subtract(bigInteger1);
      BigInteger bigInteger3 = BigInteger.ONE;
      // Undeclared exception!
//      try { 
        Base64.encodeInteger(bigInteger3);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Base64 base64_0 = new Base64(0, byteArray0, false);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      Base64.toIntegerBytes(bigInteger0);
      BigInteger.valueOf(1268L);
      bigInteger0.abs();
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = null;
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((-971), (byte[]) null);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)27;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-73);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      bigInteger0.isProbablePrime((-1));
      BigInteger bigInteger1 = BigInteger.ZERO;
      bigInteger0.subtract(bigInteger1);
      // Undeclared exception!
//      try { 
        Base64.encodeInteger(bigInteger0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((-1));
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BigInteger.valueOf(1268L);
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
      Base64 base64_0 = new Base64((byte)0, byteArray1, true);
      base64_0.avail();
      byte[] byteArray2 = base64_0.decode(byteArray1);
      // Undeclared exception!
//      try { 
        Base64.decodeBase64(byteArray2);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      Base64.discardWhitespace(byteArray0);
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((byte)116);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)27;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-73);
      byteArray0[3] = (byte)25;
      Base64 base64_0 = new Base64(45, byteArray0, false);
      base64_0.encode(byteArray0);
      Object object0 = base64_0.decode((Object) "p8H_1'w$");
      byte[] byteArray1 = base64_0.encode(byteArray0);
      byte[] byteArray2 = base64_0.decode("p8H_1'w$");
      base64_0.decode(byteArray0);
      base64_0.decode(object0);
      BigInteger bigInteger0 = new BigInteger(byteArray1);
      bigInteger0.shiftRight(61);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray2, true, true);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = null;
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((-2732), (byte[]) null);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)120;
      // Undeclared exception!
//      try { 
        Base64.encodeBase64Chunked(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)98;
      byteArray0[0] = (byte)98;
      byte byte1 = (byte)85;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte) (-102);
      byte byte2 = (byte)114;
      byteArray0[3] = (byte)114;
      byteArray0[4] = (byte)109;
      byteArray0[5] = (byte) (-53);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0, false, true);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte2 = (byte)0;
      byteArray0[2] = (byte)0;
      Base64.isArrayByteBase64(byteArray0);
      Base64.isBase64((byte)0);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0, true, false);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = null;
      boolean boolean0 = false;
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((-1890), (byte[]) null, false);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Base64 base64_0 = new Base64((-1), byteArray0);
      byte[] byteArray1 = base64_0.encode(byteArray0);
      Base64.encodeBase64Chunked(byteArray1);
      // Undeclared exception!
//      try { 
        Base64.decodeBase64("lineSeperator must not contain base64 characters: [");
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte)30;
      byteArray0[2] = (byte) (-16);
      byteArray0[3] = (byte)45;
      byteArray0[4] = (byte) (-7);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0, true);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(0, (byte[]) null, false);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)114;
      byteArray0[5] = (byte)100;
      byteArray0[6] = (byte)111;
      boolean boolean0 = true;
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0, true);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Base64.encodeBase64Chunked((byte[]) null);
      Base64.encodeBase64URLSafe((byte[]) null);
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)27;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-73);
      byteArray0[3] = (byte)25;
      Base64 base64_0 = new Base64(45, byteArray0, false);
      base64_0.encode(byteArray0);
      Object object0 = base64_0.decode((Object) "p8H_1'w$");
      base64_0.encode(byteArray0);
      base64_0.decode("p8H_1'w$");
      base64_0.decode(byteArray0);
      base64_0.decode(object0);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0, true, true, 76);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)123;
      byteArray0[0] = (byte)123;
      byteArray0[1] = (byte)15;
      byte byte1 = (byte)80;
      byteArray0[2] = (byte)80;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-71);
      byte byte2 = (byte) (-92);
      byteArray0[5] = (byte) (-92);
      byteArray0[6] = (byte) (-68);
      byteArray0[7] = (byte) (-3);
      byte byte3 = (byte)93;
      byteArray0[8] = (byte)93;
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(102, byteArray0, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [{\u000FP\u0000\uFFFD\uFFFD\uFFFD\uFFFD]]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-52);
      byteArray0[2] = (byte) (-101);
      byte byte0 = (byte)0;
      byteArray0[3] = (byte)0;
      Base64 base64_0 = new Base64(0, byteArray0);
      BigInteger bigInteger0 = BigInteger.ZERO;
      bigInteger0.nextProbablePrime();
      MockRandom mockRandom0 = new MockRandom();
      BigInteger bigInteger1 = null;
//      try {
        bigInteger1 = new BigInteger((byte) (-52), mockRandom0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // numBits must be non-negative
//         //
//         verifyException("java.math.BigInteger", e);
//      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-126);
      byte byte0 = (byte)30;
      byteArray0[1] = (byte)30;
      // Undeclared exception!
//      try { 
        Base64.encodeBase64URLSafeString(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)42;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = BigInteger.ONE;
      bigInteger1.signum();
      bigInteger0.and(bigInteger1);
      Base64.toIntegerBytes(bigInteger0);
      // Undeclared exception!
//      try { 
        Base64.encodeInteger(bigInteger1);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)79;
      byteArray0[3] = (byte) (-42);
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte)33;
      byteArray0[6] = (byte) (-17);
      byteArray0[7] = (byte) (-56);
      byteArray0[8] = (byte) (-48);
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((-586), byteArray0, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [\u0000\u0000O\uFFFD\u001B!\uFFFD\uFFFD\uFFFD]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)116;
      byteArray0[3] = (byte)62;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)107;
      Base64.discardWhitespace(byteArray0);
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.valueOf(2993L);
      bigInteger0.toString(2540);
      // Undeclared exception!
//      try { 
        Base64.encodeInteger(bigInteger0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((-1467));
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)68;
      byte byte0 = (byte) (-9);
      byteArray0[3] = (byte) (-9);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte) (-66);
      Base64.isBase64(byteArray0);
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((byte)10);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((-1));
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      int int0 = (-2485);
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((-2485));
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-123);
      byte byte0 = (byte)102;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)29;
      byte byte1 = (byte)55;
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte)84;
      byte byte2 = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64URLSafe(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [C
//         // ]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }
}
