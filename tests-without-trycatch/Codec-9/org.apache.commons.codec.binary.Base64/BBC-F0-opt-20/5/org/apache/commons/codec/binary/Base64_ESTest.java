/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 20:14:04 GMT 2021
 */

package org.apache.commons.codec.binary;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import org.apache.commons.codec.binary.Base64;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Base64_ESTest extends Base64_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(false);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
//      try { 
        Base64.decodeBase64("ISO-8859-1");
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      // Undeclared exception!
//      try { 
        Base64.decodeBase64("Parameter supplied to Base64 decode is not a byte[] or a String");
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Base64 base64_0 = new Base64(45, byteArray0);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-20);
      byteArray1[1] = (byte)91;
      byteArray1[2] = (byte)48;
      byteArray1[3] = (byte) (-56);
      // Undeclared exception!
//      try { 
        base64_0.encode(byteArray1);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -1
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = null;
      Base64.encodeBase64URLSafeString((byte[]) null);
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger bigInteger1 = BigInteger.valueOf(1L);
      bigInteger1.min(bigInteger0);
      bigInteger1.or(bigInteger0);
      bigInteger0.divide(bigInteger1);
      Object object0 = new Object();
      bigInteger0.equals(object0);
      Base64.toIntegerBytes(bigInteger0);
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Base64.isBase64((byte)61);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-37);
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)82;
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)8;
      byteArray0[6] = (byte)123;
      byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
      Base64.isArrayByteBase64(byteArray1);
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(1);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
//      try { 
        Base64.decodeBase64("CeEf`+tp2BtoQ`B");
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(true);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
//      try { 
        Base64.decodeBase64("");
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
//      try { 
        Base64.decodeBase64("OXI1AwKN7VcUaQH");
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 0;
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-89);
      byteArray0[2] = (byte)24;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte) (-18);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger.valueOf((byte)2);
      Base64.toIntegerBytes(bigInteger0);
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(false);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)6;
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0, true, false);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
      Base64 base64_0 = new Base64(12, byteArray0, true);
      base64_0.encodeToString(byteArray0);
      base64_0.decode(byteArray0);
      base64_0.hasData();
      bigInteger0.flipBit(64);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64URLSafe(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Random.setNextRandom(26);
      Base64.isBase64((byte) (-39));
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64();
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64Chunked(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      MockRandom mockRandom0 = new MockRandom(67);
      BigInteger bigInteger1 = new BigInteger(67, mockRandom0);
      bigInteger0.multiply(bigInteger1);
      byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
      Base64.isBase64("*e\"} WILEa]>");
      // Undeclared exception!
//      try { 
        Base64.decodeBase64(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte byte0 = (byte)6;
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((-360));
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)113;
      byteArray0[2] = (byte)49;
      // Undeclared exception!
//      try { 
        Base64.encodeBase64Chunked(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[0] = (byte) (-35);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-35);
      // Undeclared exception!
//      try { 
        Base64.decodeBase64(byteArray1);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[28];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-21);
      byteArray0[5] = (byte)55;
      byteArray0[6] = (byte)0;
      Base64.isBase64("9fFk>/jRouKU<_8lyk>");
      // Undeclared exception!
//      try { 
        Base64.decodeBase64(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 0;
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)123;
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte)1;
      // Undeclared exception!
//      try { 
        Base64.encodeBase64URLSafe(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte byte0 = (byte)22;
      Base64.isBase64((byte)22);
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = BigInteger.TEN;
      bigInteger1.gcd(bigInteger0);
      bigInteger1.doubleValue();
      bigInteger1.and(bigInteger0);
      bigInteger1.isProbablePrime((byte)22);
      bigInteger1.negate();
      bigInteger1.toString();
      bigInteger0.subtract(bigInteger1);
      bigInteger0.clearBit((byte)22);
      bigInteger0.bitLength();
      // Undeclared exception!
//      try { 
        Base64.encodeInteger(bigInteger0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-33);
      byteArray0[1] = (byte) (-26);
      byteArray0[2] = (byte) (-92);
      byteArray0[3] = (byte) (-47);
      byteArray0[4] = (byte)43;
      byteArray0[5] = (byte)112;
      byteArray0[6] = (byte)73;
      // Undeclared exception!
//      try { 
        Base64.decodeInteger(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      Base64.toIntegerBytes(bigInteger0);
      bigInteger0.abs();
      int int0 = 80;
      bigInteger0.toString();
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(80);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      bigInteger0.shiftLeft(0);
      Base64.encodeInteger(bigInteger0);
      bigInteger0.nextProbablePrime();
      boolean boolean0 = true;
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(true);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)6;
      byteArray0[0] = (byte)6;
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0, true, false);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Base64.encodeBase64URLSafeString(byteArray0);
      Base64 base64_0 = new Base64(0, byteArray0, false);
      // Undeclared exception!
//      try { 
        Base64.decodeInteger(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      bigInteger0.shiftLeft(0);
      byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
      Base64.encodeBase64URLSafe(byteArray0);
      // Undeclared exception!
//      try { 
        Base64.decodeBase64("4>leOP#");
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((-1289));
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      bigInteger0.shiftLeft(0);
      byte[] byteArray0 = Base64.CHUNK_SEPARATOR;
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)6;
      byteArray0[0] = (byte)6;
      boolean boolean0 = false;
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0, true, false);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      Base64.toIntegerBytes(bigInteger0);
      bigInteger0.abs();
      bigInteger0.toString();
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(80);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-62);
      byteArray0[2] = (byte)94;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-42);
      byteArray0[8] = (byte)63;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      // Undeclared exception!
//      try { 
        Base64.encodeInteger(bigInteger0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
//      try { 
        Base64.toIntegerBytes((BigInteger) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Base64.isBase64("A+F");
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(121);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = 15;
      byte[] byteArray0 = new byte[0];
      Base64 base64_0 = new Base64(15, byteArray0, false);
      base64_0.readResults(byteArray0, 0, 0);
      Base64.encodeBase64String(byteArray0);
//      try { 
        base64_0.encode((Object) "");
//        fail("Expecting exception: Exception");
      
//      } catch(Exception e) {
//         //
//         // Parameter supplied to Base64 encode is not a byte[]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Base64.encodeBase64URLSafeString(byteArray0);
      int int0 = 0;
      Base64 base64_0 = new Base64(0, byteArray0, false);
      // Undeclared exception!
//      try { 
        Base64.decodeInteger(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(1);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)70;
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte) (-12);
      Base64.isArrayByteBase64(byteArray0);
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(false);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-83);
      byteArray0[4] = (byte)82;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      // Undeclared exception!
//      try { 
        Base64.encodeBase64URLSafeString(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-121);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)100;
      byteArray0[7] = (byte)0;
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((-2813), byteArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [\u0000\u0001\uFFFD\u0000\u0001\u0000d\u0000]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)38;
      byte byte0 = (byte) (-66);
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-115);
      byteArray0[5] = (byte)17;
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0, false, false, (int) (byte)118);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      bigInteger0.shiftLeft(0);
      Base64.encodeInteger(bigInteger0);
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(true);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-31);
      byteArray0[0] = (byte) (-31);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0, true);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      // Undeclared exception!
//      try { 
        Base64.decodeBase64((byte[]) null);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)21;
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte) (-4);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64(byteArray0, true, true);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      boolean boolean0 = Base64.isBase64((byte)91);
      assertFalse(boolean0);
      
      byte[] byteArray0 = new byte[0];
      Base64 base64_0 = new Base64(0, byteArray0);
      String string0 = base64_0.encodeToString(byteArray0);
      assertEquals("", string0);
      
      int int0 = base64_0.avail();
      assertFalse(base64_0.isUrlSafe());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64((-3405));
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)29;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-118);
      byteArray0[3] = (byte)46;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)78;
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(92, byteArray0, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [\u001D\uFFFD\uFFFD.\u0004N]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Base64.isBase64("org.apache.commons.codec.EncoderException");
      Base64.isBase64((byte)0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      Base64 base64_0 = new Base64((byte)0, byteArray0, false);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64Chunked(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = null;
      // Undeclared exception!
//      try { 
        Base64.isArrayByteBase64((byte[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-21);
      byteArray0[5] = (byte)55;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)114;
      byteArray0[8] = (byte) (-23);
      // Undeclared exception!
//      try { 
        Base64.encodeBase64URLSafe(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Base64 base64_0 = new Base64((-3983), byteArray0);
      boolean boolean0 = base64_0.isUrlSafe();
      assertFalse(boolean0);
      
      byte[] byteArray1 = Base64.encodeBase64(byteArray0, false, false);
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte1 = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-58);
      byte byte2 = (byte) (-87);
      byteArray0[4] = (byte) (-87);
      byte byte3 = (byte)126;
      byteArray0[5] = (byte)126;
      // Undeclared exception!
//      try { 
        Base64.encodeBase64URLSafeString(byteArray0);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      int int0 = 0;
      byte[] byteArray0 = null;
      Base64 base64_0 = null;
//      try {
        base64_0 = new Base64(0, (byte[]) null, false);
//       //  fail("Expecting exception: IllegalArgumentException");
       // Unstable assertion
//      } catch(IllegalArgumentException e) {
//         //
//         // lineSeperator must not contain base64 characters: [AA]
//         //
//         verifyException("org.apache.commons.codec.binary.Base64", e);
//      }
  }
}
