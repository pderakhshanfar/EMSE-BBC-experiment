/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 21:46:42 GMT 2021
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[1] = 'j';
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 1, 1, "`");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("^9!43.Ga`z>mXwEJ=E");
      characterReader0.consume();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(1, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^9!43.Ga`z>mXwEJCE");
      char[] charArray0 = new char[9];
      stringReader0.read(charArray0);
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("rray must not contain any null objects");
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Z5om/;+%(a?E#x^\"&}K");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("lg?|'H3So<Qb*KMFs:");
      char[] charArray0 = new char[5];
      charArray0[1] = ':';
      charArray0[2] = 'V';
      characterReader0.consumeToAny(charArray0);
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(17, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("jEZ1xL8c{iUcBgz#");
      char[] charArray0 = new char[1];
      characterReader0.consumeLetterSequence();
      charArray0[0] = 'g';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(3, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&}S6DW9''';`Sh118qW");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 4159);
      boolean boolean0 = characterReader0.matchesIgnoreCase("hU7U]|HinLDo");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("sdvTX%");
      characterReader0.matchConsumeIgnoreCase("sdvTX%");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("");
      assertEquals(7, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      boolean boolean0 = characterReader0.matches("N^Dr/:i&^)X%hh ");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=)E.");
      stringReader0.read();
      stringReader0.read();
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matches('?');
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0(D:j+<8Dz");
      characterReader0.consumeDigitSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("v=j[");
      characterReader0.consumeData();
      characterReader0.consume();
      characterReader0.consumeDigitSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^9!43.Ga`z>mXwEJ=E");
      char[] charArray0 = new char[6];
      stringReader0.read(charArray0);
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.unconsume();
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("A", string0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q(02$#/B");
      stringReader0.read();
      stringReader0.read();
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("sdvTX%");
      characterReader0.matchConsumeIgnoreCase("sdvTX%");
      characterReader0.advance();
      characterReader0.consumeHexSequence();
      assertEquals(8, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("90|eU");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("zd`");
      characterReader0.consumeLetterSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeTo('#');
      characterReader0.consume();
      characterReader0.consumeLetterSequence();
      assertEquals(40, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeTo('#');
      characterReader0.consume();
      characterReader0.consumeTagName();
      assertEquals(40, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("jEZ1xL8c{iUcBgz#");
      characterReader0.consumeLetterSequence();
      characterReader0.consumeData();
      assertEquals(16, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.advance();
      characterReader0.consumeData();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("3:7hV<a_L)A]d&");
      char[] charArray0 = new char[6];
      charArray0[0] = 'd';
      charArray0[2] = 'l';
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(12, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2303);
      char[] charArray0 = new char[1];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.consume();
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(40, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.advance();
      char[] charArray0 = new char[1];
      characterReader0.consumeToAny(charArray0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("2e#9:bS2_1@^xAXg");
      characterReader0.consumeDigitSequence();
      characterReader0.consumeTo("2");
      assertEquals(7, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2303);
      char[] charArray0 = new char[1];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.consume();
      characterReader0.consumeTo('a');
      assertEquals(39, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("v=j[");
      characterReader0.consumeData();
      characterReader0.consume();
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.toString();
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      char[] charArray0 = new char[5];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 27, 0, "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      boolean boolean0 = characterReader0.rangeEquals(0, 0, "");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      boolean boolean0 = characterReader0.rangeEquals(656, 25, "No buffer left to unconsume");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("jEZ1xL8c{iUcBgz#");
      characterReader0.consumeLetterSequence();
      int int0 = characterReader0.pos();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("2e#9:bS2_1@^xAXg");
      characterReader0.consumeDigitSequence();
      int int0 = characterReader0.nextIndexOf("2");
      assertEquals(1, characterReader0.pos());
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      int int0 = characterReader0.nextIndexOf('m');
      assertEquals(0, characterReader0.pos());
      assertEquals(25, int0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0(D:j+<8Dz");
      int int0 = characterReader0.nextIndexOf('T');
      assertEquals((-1), int0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesIgnoreCase("Mark invalid");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 7);
      boolean boolean0 = characterReader0.matchesIgnoreCase("org.jsoup.UncheckedIOException");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&}S6DW9''';`Sh118qW");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[3];
      charArray0[2] = '6';
      characterReader0.consumeToAny(charArray0);
      char char0 = characterReader0.current();
      assertEquals(3, characterReader0.pos());
      assertEquals('6', char0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("2e#9:bS2_1@^xAXg");
      characterReader0.consumeDigitSequence();
      char char0 = characterReader0.consume();
      assertEquals(2, characterReader0.pos());
      assertEquals('e', char0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("v=j[");
      characterReader0.consumeData();
      characterReader0.consume();
      // Undeclared exception!
//      try { 
        characterReader0.toString();
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      char[] charArray0 = new char[5];
      // Undeclared exception!
//      try { 
        CharacterReader.rangeEquals(charArray0, 1077, (-1), (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      char[] charArray0 = new char[8];
      // Undeclared exception!
//      try { 
        CharacterReader.rangeEquals(charArray0, (-458), 11, "A=n[O;BR2f~");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // -458
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf("");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",<GJ8!Y1+Sb@g)oCJ");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf((CharSequence) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",<GJ8!Y1+Sb@g)oCJ");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "No buffer left to unconsume", 1, 1);
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf(charBuffer0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // 1
//         //
//         verifyException("java.nio.StringCharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g%vn`mp40.[7V");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf('Y');
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("tt;ihsXw+&R@'-K|5/>");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 5);
      stringReader0.close();
      char[] charArray0 = new char[1];
      characterReader0.consumeToAnySorted(charArray0);
      // Undeclared exception!
//      try { 
        characterReader0.matchesLetter();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("gjb%X$Ez:w'CoqVo5U");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeData();
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matchesIgnoreCase("gjb%X$Ez:w'CoqVo5U");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      // Undeclared exception!
//      try { 
        characterReader0.matchesIgnoreCase((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q(02$#/B");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 6);
      char[] charArray0 = new char[0];
      stringReader0.close();
      characterReader0.consumeToAnySorted(charArray0);
      // Undeclared exception!
//      try { 
        characterReader0.matchesDigit();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      char[] charArray0 = new char[2];
      // Undeclared exception!
//      try { 
        characterReader0.matchesAnySorted(charArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("lg?|'H3So<Qb*KMFs:");
      // Undeclared exception!
//      try { 
        characterReader0.matchesAnySorted((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Arrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q(02$#/B");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 6);
      char[] charArray0 = new char[0];
      characterReader0.consumeToAnySorted(charArray0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matchesAny(charArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Q(02$#/B");
      // Undeclared exception!
//      try { 
        characterReader0.matchesAny((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matches("VJvHL@G");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Must be false");
      // Undeclared exception!
//      try { 
        characterReader0.matches((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matchConsumeIgnoreCase("");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("=)E.");
      // Undeclared exception!
//      try { 
        characterReader0.matchConsumeIgnoreCase((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q(02$#/B");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 6);
      char[] charArray0 = new char[0];
      stringReader0.close();
      characterReader0.consumeToAnySorted(charArray0);
      // Undeclared exception!
//      try { 
        characterReader0.matchConsume("8Ls4:;r95");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("sdvTX%");
      // Undeclared exception!
//      try { 
        characterReader0.matchConsume((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 102);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.mark();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("mup81!h,A=*doVE8P.");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.isEmpty();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";#:YV= 39fA>");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[3];
      stringReader0.close();
      characterReader0.consumeToAnySorted(charArray0);
      // Undeclared exception!
//      try { 
        characterReader0.current();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.UncheckedIOException");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      stringReader0.close();
      characterReader0.consumeTagName();
      // Undeclared exception!
//      try { 
        characterReader0.containsIgnoreCase(",mh");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q(02$#/B");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 18);
      // Undeclared exception!
//      try { 
        characterReader0.containsIgnoreCase("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("8:5GHT\"<dG?:vr[F.+!");
      // Undeclared exception!
//      try { 
        characterReader0.containsIgnoreCase((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OH]*ecyM +}(z");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[4];
      stringReader0.close();
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.unconsume();
      characterReader0.consumeLetterThenDigitSequence();
      // Undeclared exception!
//      try { 
        characterReader0.consumeToEnd();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.UncheckedIOException");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[8];
      stringReader0.close();
      characterReader0.consumeToEnd();
      // Undeclared exception!
//      try { 
        characterReader0.consumeToAnySorted(charArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any nu`l objects");
      // Undeclared exception!
//      try { 
        characterReader0.consumeToAnySorted((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Arrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[7];
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeToAny(charArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0(D:j+<8Dz");
      // Undeclared exception!
//      try { 
        characterReader0.consumeToAny((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Object must not be null");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.consumeData();
      // Undeclared exception!
//      try { 
        characterReader0.consumeTo("Object must not be null");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
//      try { 
        characterReader0.consumeTo("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      // Undeclared exception!
//      try { 
        characterReader0.consumeTo((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?=kjXFsDd0<].*M.");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 832);
      stringReader0.close();
      characterReader0.consumeToEnd();
      // Undeclared exception!
//      try { 
        characterReader0.consumeTo('D');
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Object must not be null");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeTagName();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"C]K7`:+>cnz6Z6`zyq");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[4];
      stringReader0.close();
      characterReader0.consumeToAny(charArray0);
      // Undeclared exception!
//      try { 
        characterReader0.consumeLetterThenDigitSequence();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeLetterSequence();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q(02$#/B");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 6);
      char[] charArray0 = new char[0];
      characterReader0.consumeToAnySorted(charArray0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeHexSequence();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$n^Z");
      CharBuffer charBuffer0 = CharBuffer.allocate(6);
      stringReader0.read(charBuffer0);
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 816);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeDigitSequence();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 64);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consume();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",<GJ8!Y1+Sb@g)oCJ");
      stringReader0.close();
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader(stringReader0, 2804);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~nU");
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader(stringReader0, (-357));
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader((Reader) null, 113);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.UncheckedIOException");
      stringReader0.close();
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader(stringReader0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader((Reader) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(",<GJ8!Y1+Sb@g)oCJ");
      boolean boolean0 = characterReader0.isEmpty();
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      char[] charArray0 = new char[2];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 1, 1, "`");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("TUa7:");
      characterReader0.mark();
      characterReader0.consumeLetterSequence();
      char[] charArray0 = new char[5];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.rewindToMark();
      characterReader0.consumeToEnd();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("TUa7:");
      characterReader0.mark();
      char[] charArray0 = new char[5];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.rewindToMark();
      characterReader0.consumeToEnd();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=)E.");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.containsIgnoreCase("=)E.");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("1<");
      boolean boolean0 = characterReader0.containsIgnoreCase("1<");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      boolean boolean0 = characterReader0.matchConsume("org.jsoup.UncheckedIOException");
      assertEquals(30, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("2e#9:bS2_1@^xAXg");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("2", string0);
      
      boolean boolean0 = characterReader0.matchConsume("2");
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("jEZ1xL8c{iUcBgz#");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      characterReader0.matchConsumeIgnoreCase("No buffer left to unconsume");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(27, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&}S6DW9''';`Sh118qW");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 4159);
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";#:YV= 39fA>");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Must be false");
      characterReader0.consumeData();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(13, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=)E.");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[6];
      stringReader0.read(charArray0);
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=)E.");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[6];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[1];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^9!43.Ga`z>mXwEJ=E");
      char[] charArray0 = new char[6];
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.read(charArray0);
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      char[] charArray0 = new char[5];
      characterReader0.matchConsumeIgnoreCase("No buffer left to unconsume");
      characterReader0.matchesAny(charArray0);
      assertEquals(27, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^9!43.Ga`z>mXwEJ=E");
      char[] charArray0 = new char[6];
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("Must be false");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("2e#9:bS2_1@^xAXg");
      boolean boolean0 = characterReader0.matches('4');
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("=)E.");
      boolean boolean0 = characterReader0.matches('=');
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("859H\"VdG?:dr[F.+!");
      characterReader0.consumeDigitSequence();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("No buffer left to unconsume");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      characterReader0.consumeTagName();
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.consumeDigitSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$n^Z");
      CharBuffer charBuffer0 = CharBuffer.allocate(6);
      stringReader0.read(charBuffer0);
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 816);
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("^9!43.Ga`z>mXwEJ=E");
      characterReader0.consume();
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F#&`^#u\"4iEM<vQ");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("F", string0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("fdDK");
      characterReader0.consumeHexSequence();
      char[] charArray0 = new char[2];
      characterReader0.consumeToAny(charArray0);
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("sdvTX%");
      characterReader0.matchConsumeIgnoreCase("sdvTX%");
      characterReader0.consumeHexSequence();
      assertEquals(7, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("jEZ1xL8c{iUcBgz#");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeLetterThenDigitSequence();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(5, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("5=F>vw53aS!w$2");
      characterReader0.consumeTo(']');
      characterReader0.unconsume();
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(14, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^9!43.Ga`z>mXwEJ=E");
      char[] charArray0 = new char[6];
      stringReader0.read(charArray0);
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.unconsume();
      assertEquals(1, characterReader0.pos());
      
      characterReader0.unconsume();
      boolean boolean0 = characterReader0.matches("Ga");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("sdvTX%");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("TUa7:");
      characterReader0.consumeLetterSequence();
      characterReader0.matches("TUa7:");
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      characterReader0.matchConsumeIgnoreCase("No buffer left to unconsume");
      characterReader0.consumeLetterSequence();
      assertEquals(27, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^9!43.Ga`z>mXwEJCE");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTagName();
      assertEquals(10, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(",<GJ8!Y1+Sb@g)oCJ");
      characterReader0.consumeTagName();
      characterReader0.consumeTo('Y');
      assertEquals(6, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Q(02$#/B");
      characterReader0.consumeTagName();
      assertEquals(6, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any nu`l objects");
      characterReader0.consumeTagName();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("lg?|'H3So<Qb*KMFs:");
      characterReader0.consumeData();
      characterReader0.advance();
      characterReader0.consumeTagName();
      boolean boolean0 = characterReader0.isEmpty();
      assertEquals(18, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&}S6DW9''';`Sh118qW");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 4159);
      String string0 = characterReader0.consumeData();
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^9!43.Ga`z>mXwEJ=E");
      char[] charArray0 = new char[6];
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.read(charArray0);
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("2e#9:bS2_1@^xAXg");
      String string0 = characterReader0.consumeTo("2");
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GVXVPLZ=8zwQ&m9");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      characterReader0.consumeTo("GVXVPLZ=8zwQ&m9");
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("jEZ1xL8c{iUcBgz#");
      characterReader0.consumeTo('8');
      char char0 = characterReader0.consume();
      assertEquals(7, characterReader0.pos());
      assertEquals('8', char0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any nu`l objects");
      boolean boolean0 = characterReader0.containsIgnoreCase("No buffer left to unconsume");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("`");
      int int0 = characterReader0.nextIndexOf("`");
      assertEquals(0, int0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("A=n[O;BR2f~");
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals("A", string0);
      
      int int0 = characterReader0.nextIndexOf("A=n[O;BR2f~");
      assertEquals(1, characterReader0.pos());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("{dYXlu ");
      int int0 = characterReader0.nextIndexOf('{');
      assertEquals(0, characterReader0.pos());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GVXVPLZ=8zwQ&m9");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      // Undeclared exception!
//      try { 
        characterReader0.rewindToMark();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // org.evosuite.runtime.mock.java.lang.MockThrowable: Mark invalid
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^9!43.Ga`z>mXwEJCE");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
//      try { 
        characterReader0.unconsume();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // org.evosuite.runtime.mock.java.lang.MockThrowable: No buffer left to unconsume
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeTo('#');
      characterReader0.consume();
      characterReader0.matchesAny((char[]) null);
      assertEquals(40, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char char0 = characterReader0.current();
      assertEquals('\uFFFF', char0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char char0 = characterReader0.current();
      assertEquals('M', char0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      characterReader0.matchConsumeIgnoreCase("No buffer left to unconsume");
      boolean boolean0 = characterReader0.matches('R');
      assertEquals(27, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("01");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("TUa7:");
      char[] charArray0 = new char[5];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.consumeToEnd();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&}S6DW9''';`Sh118qW");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65535);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q(02$#/B");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 6);
      // Undeclared exception!
//      try { 
        characterReader0.rangeEquals(6, 6, "Q(02$#");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 6
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"C]K7`:+>cnz6Z6`zyq");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.toString();
      assertEquals("\"C]K7`:+>cnz6Z6`zyq", string0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B21gcT1a;1/");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.consumeData();
      // Undeclared exception!
//      try { 
        characterReader0.matches('X');
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }
}
