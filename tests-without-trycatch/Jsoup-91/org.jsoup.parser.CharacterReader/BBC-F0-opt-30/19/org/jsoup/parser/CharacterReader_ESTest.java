/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 14:19:27 GMT 2021
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("'pzU:hmDn8*BeC>%");
      boolean boolean0 = characterReader0.rangeEquals(0, 1, "4");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("91|(\"h)14~");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(".08&N#LwBIi>[");
      characterReader0.consume();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(1, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("zt=$)/q;^;");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("a%B");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Zwt=$)/q;^N");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterRader");
      characterReader0.consume();
      char[] charArray0 = new char[7];
      charArray0[5] = 'r';
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(1, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"90oVc`!");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65);
      char[] charArray0 = new char[6];
      charArray0[0] = 'K';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5H9nM'TU5?u,");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 27);
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("-=\"!Qu\"");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}>^]&L2xlXgQ<O|i24");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchConsume("4*<$0br~9[Gnc");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("D$>2`");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("D", string0);
      
      boolean boolean0 = characterReader0.matches("j7^");
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(".08&N#LwBIi>[");
      characterReader0.consume();
      characterReader0.consumeDigitSequence();
      boolean boolean0 = characterReader0.matches('\'');
      assertEquals(3, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("-=\"!Qu\"");
      characterReader0.consumeTagName();
      characterReader0.consume();
      characterReader0.consumeDigitSequence();
      assertEquals(8, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("7ag}]");
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F6*,F,");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consume();
      characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(".08&N#LwBIi>[");
      characterReader0.consume();
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("f>znq=mV(fjiJF!-?");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.consume();
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("a%B");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals(1, characterReader0.pos());
      assertEquals("a", string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("oZ[;<D [`Il)");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("zE\"[4eHmS`");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("7ag}]");
      characterReader0.consumeTo('w');
      characterReader0.consume();
      characterReader0.consumeTagName();
      assertEquals(6, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Z!C[^QdmT");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterSequence();
      characterReader0.consumeData();
      assertEquals(9, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("GH7gz");
      characterReader0.consumeTagName();
      characterReader0.consume();
      characterReader0.consumeData();
      assertEquals(6, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("4slq 'n7Z");
      char[] charArray0 = new char[5];
      charArray0[0] = 'Z';
      charArray0[2] = '\uFFFF';
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(8, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("|h.DbJH)4");
      characterReader0.matchConsume("|h.DbJH)4");
      characterReader0.consume();
      char[] charArray0 = new char[5];
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(10, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'C';
      characterReader0.consumeToAny(charArray0);
      assertEquals(12, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 816);
      char[] charArray0 = new char[3];
      characterReader0.advance();
      characterReader0.consumeToAny(charArray0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("NPY0lh");
      characterReader0.consumeTo("Y0lh");
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("-=\"!Qu\"");
      boolean boolean0 = characterReader0.containsIgnoreCase("-=\"!Qu\"");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vY[rv:JJ");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterSequence();
      int int0 = characterReader0.nextIndexOf('v');
      assertEquals(2, characterReader0.pos());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("-=\"!Qu\"");
      characterReader0.consumeTagName();
      characterReader0.consume();
      characterReader0.consumeTo('\uFFFF');
      assertEquals(7, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 816);
      characterReader0.advance();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f>q=mV(fjiJF!-?");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 9);
      characterReader0.consumeTo("f>q=mV(fjiJF!-?");
      characterReader0.mark();
      assertEquals(9, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("7ag}]");
      characterReader0.consumeTo('w');
      characterReader0.consume();
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(6, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("_/EN");
      characterReader0.consumeData();
      characterReader0.toString();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      char[] charArray0 = new char[6];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, (-1), 0, "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      char[] charArray0 = new char[3];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, (-1), 12, "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("|h.DbJH)4");
      boolean boolean0 = characterReader0.rangeEquals((-295), 0, "");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("q");
      characterReader0.consumeTagName();
      int int0 = characterReader0.pos();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Object must not be null");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      int int0 = characterReader0.nextIndexOf('O');
      assertEquals(0, int0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      int int0 = characterReader0.nextIndexOf('K');
      assertEquals(0, characterReader0.pos());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("^");
      boolean boolean0 = characterReader0.matches("^");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(".08&N#LwBIi>[");
      characterReader0.consume();
      char char0 = characterReader0.current();
      assertEquals(1, characterReader0.pos());
      assertEquals('0', char0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      characterReader0.consumeToEnd();
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("F6*,F,");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterSequence();
      char char0 = characterReader0.consume();
      assertEquals(2, characterReader0.pos());
      assertEquals('6', char0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("GH7gz");
      characterReader0.consumeTagName();
      characterReader0.consume();
      // Undeclared exception!
//      try { 
        characterReader0.toString();
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      char[] charArray0 = new char[1];
      // Undeclared exception!
//      try { 
        CharacterReader.rangeEquals(charArray0, 2961, 2961, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      char[] charArray0 = new char[3];
      // Undeclared exception!
//      try { 
        CharacterReader.rangeEquals(charArray0, 9, 1, "Y");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 9
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("|h.DbJH)4");
      // Undeclared exception!
//      try { 
        characterReader0.rangeEquals(562, 32, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("^");
      // Undeclared exception!
//      try { 
        characterReader0.rangeEquals(32, 1, "^");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 32
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.UncheckedIOException");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      char[] charArray0 = new char[7];
      stringReader0.close();
      characterReader0.consumeToAnySorted(charArray0);
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf("r");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("GH7gz");
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf((CharSequence) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("GH7gz");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf(charBuffer0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.Buffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 4463);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf('$');
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.UncheckedIOException");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      char[] charArray0 = new char[7];
      stringReader0.close();
      characterReader0.consumeToAnySorted(charArray0);
      // Undeclared exception!
//      try { 
        characterReader0.matchesLetter();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("UCA{HT +ySXCdl|");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 52);
      stringReader0.skip(7297L);
      characterReader0.mark();
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matchesIgnoreCase("");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      // Undeclared exception!
//      try { 
        characterReader0.matchesIgnoreCase((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.UncheckedIOException");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      char[] charArray0 = new char[7];
      stringReader0.close();
      characterReader0.consumeToAnySorted(charArray0);
      // Undeclared exception!
//      try { 
        characterReader0.matchesDigit();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@.cZ(N`\"#Y\"sus");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 95);
      characterReader0.consumeToEnd();
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matchesAnySorted((char[]) null);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("-=\"!Qu\"");
      // Undeclared exception!
//      try { 
        characterReader0.matchesAnySorted((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Arrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      char[] charArray0 = new char[4];
      // Undeclared exception!
//      try { 
        characterReader0.matchesAny(charArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CE/g");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
//      try { 
        characterReader0.matchesAny((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Yr");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.consumeData();
      // Undeclared exception!
//      try { 
        characterReader0.matches("");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<(V8F `V");
      // Undeclared exception!
//      try { 
        characterReader0.matches((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matches('{');
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("K-a");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.consumeData();
      // Undeclared exception!
//      try { 
        characterReader0.matchConsumeIgnoreCase("aql-:tP");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("No buffer left to unconsume");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
//      try { 
        characterReader0.matchConsumeIgnoreCase((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Yr");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.consumeData();
      // Undeclared exception!
//      try { 
        characterReader0.matchConsume("B@s3_`pM");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">@>8");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      // Undeclared exception!
//      try { 
        characterReader0.matchConsume((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 37);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.mark();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.isEmpty();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("K*`_&ye{'$");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65);
      characterReader0.consumeTo("*2nKXIk2N9mk^");
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.current();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A/5^i68");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
//      try { 
        characterReader0.containsIgnoreCase("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f>q=mV(fjiJF!-?");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 9);
      // Undeclared exception!
//      try { 
        characterReader0.containsIgnoreCase((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&%\u0002");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1629);
      stringReader0.close();
      characterReader0.consumeTo('c');
      // Undeclared exception!
//      try { 
        characterReader0.consumeToEnd();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.UncheckedIOException");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      characterReader0.consumeLetterSequence();
      char[] charArray0 = new char[7];
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeToAnySorted(charArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("qj*H;@'Ib[^X}O]4|");
      // Undeclared exception!
//      try { 
        characterReader0.consumeToAnySorted((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Arrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 4463);
      char[] charArray0 = new char[1];
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeToAny(charArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      // Undeclared exception!
//      try { 
        characterReader0.consumeToAny((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2718);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeTo("");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("noS#PIts_9q6OcPyF2");
      // Undeclared exception!
//      try { 
        characterReader0.consumeTo("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("|h.DbJH)4");
      // Undeclared exception!
//      try { 
        characterReader0.consumeTo((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LbJ");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 3280);
      characterReader0.consumeTo("f2Nj");
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeTo('o');
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"z}y{.yr:1<nUk");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeTagName();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeLetterThenDigitSequence();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e >DuCHWVLunu");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.consumeToEnd();
      // Undeclared exception!
//      try { 
        characterReader0.consumeLetterSequence();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeHexSequence();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("UCA{HT +ySXCdl|");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 52);
      stringReader0.skip(7297L);
      characterReader0.mark();
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeDigitSequence();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Lw/`zsW8");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[3];
      stringReader0.close();
      characterReader0.consumeToAnySorted(charArray0);
      // Undeclared exception!
//      try { 
        characterReader0.consume();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader(stringReader0, 65535);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">96");
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader(stringReader0, (-2177));
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader((Reader) null, 0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/'xQ[<kC");
      stringReader0.close();
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader(stringReader0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader((Reader) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("UCA{HT +ySXCdl|");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 52);
      boolean boolean0 = characterReader0.isEmpty();
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Must be false");
      boolean boolean0 = characterReader0.rangeEquals(1, 1, "4");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("D$>2`");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("D", string0);
      
      characterReader0.unconsume();
      characterReader0.consumeLetterSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("J$OP");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.containsIgnoreCase("J$OP");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.containsIgnoreCase("5");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("-=\"!Qu\"");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      characterReader0.consumeLetterThenDigitSequence();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(3, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Object must not be null");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}>^]&L2xlXgQ<O|i24");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      characterReader0.consumeLetterThenDigitSequence();
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(3, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("-=\"!Qu\"");
      char[] charArray0 = new char[7];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      char[] charArray0 = new char[2];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      stringReader0.read(charBuffer0);
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      char[] charArray0 = new char[3];
      StringReader stringReader0 = new StringReader("K*`_&ye{'$");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65);
      characterReader0.consumeTo("*2nKXIk2N9mk^");
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(10, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("-=\"!Qu\"");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("F");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3cZQ>q74z(s~8");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 20);
      boolean boolean0 = characterReader0.matchesIgnoreCase("3cZQ>q74z(s~8");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("-=\"!Qu\"");
      boolean boolean0 = characterReader0.matchConsume("String must not be empty");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("$WTak<g^QH?[&h");
      characterReader0.consume();
      boolean boolean0 = characterReader0.matches('W');
      assertEquals(1, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("UCA{HT +ySXCdl|");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 52);
      boolean boolean0 = characterReader0.matches('S');
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      characterReader0.matchConsume("org.jsoup.UncheckedIOException");
      characterReader0.matches('m');
      assertEquals(30, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("09FNobO,");
      characterReader0.consumeDigitSequence();
      char[] charArray0 = new char[15];
      characterReader0.consumeToAny(charArray0);
      assertEquals(8, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@.cZ(N`\"#Y\"sus");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 95);
      characterReader0.consumeToEnd();
      characterReader0.consumeDigitSequence();
      assertEquals(14, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f>q=mV(fjiJF!-?");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"90oVc`!");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65);
      characterReader0.consume();
      characterReader0.consumeHexSequence();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
      assertEquals("5", string0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("91|(\"h)14~");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.consumeTagName();
      assertEquals(10, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("UCA{HT +ySXCdl|");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 52);
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("avEAl{Ud0UsBrOR11L");
      characterReader0.consumeLetterSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@.cZ(N`\"#Y\"sus");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 95);
      characterReader0.consumeToEnd();
      characterReader0.consumeLetterSequence();
      assertEquals(14, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(".08&N#LwBIi>[");
      characterReader0.consumeTagName();
      assertEquals(11, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<");
      String string0 = characterReader0.consumeTagName();
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("CE/g");
      characterReader0.consumeTagName();
      char[] charArray0 = new char[7];
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      characterReader0.consumeTagName();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("<");
      String string0 = characterReader0.consumeData();
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("=n&90~'AvXCC&dXT2OC");
      characterReader0.consumeData();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3cZQ>q74z(s~8");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 20);
      characterReader0.consumeData();
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.containsIgnoreCase("");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("{3<MGRpr5^!Nj");
      char[] charArray0 = new char[6];
      charArray0[5] = '^';
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.consumeTo('L');
      assertEquals(13, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      characterReader0.consumeLetterThenDigitSequence();
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      characterReader0.consumeToAny(charArray0);
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@.cZ(N`\"#Y\"sus");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 95);
      String string0 = characterReader0.consumeTo("@.cZ(N`\"#Y\"sus");
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o))o7D.4");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "o))o7D.4");
      int int0 = characterReader0.nextIndexOf(charBuffer0);
      assertEquals(0, characterReader0.pos());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3cZQ>q74z(s~8");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 20);
      characterReader0.consumeTo('Z');
      boolean boolean0 = characterReader0.matchesIgnoreCase("3cZQ>q74z(s~8");
      assertEquals(2, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("J$OP");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
//      try { 
        characterReader0.rewindToMark();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // org.evosuite.runtime.mock.java.lang.MockThrowable: Mark invalid
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.mark();
      characterReader0.rewindToMark();
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      // Undeclared exception!
//      try { 
        characterReader0.unconsume();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // org.evosuite.runtime.mock.java.lang.MockThrowable: No buffer left to unconsume
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LbJ");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 3280);
      characterReader0.consumeTo("f2Nj");
      characterReader0.unconsume();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_,RYnfNt>Ul");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo("G1Gb]:%]4/");
      characterReader0.consume();
      characterReader0.consumeLetterSequence();
      assertEquals(12, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CE/g");
      stringReader0.skip(1329L);
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      char char0 = characterReader0.current();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Object must not be null");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char char0 = characterReader0.current();
      assertEquals(0, characterReader0.pos());
      assertEquals('O', char0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_,RYnfNt>Ul");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo("G1Gb]:%]4/");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(11, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o))o7D.4");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterThenDigitSequence();
      int int0 = characterReader0.nextIndexOf("o");
      assertEquals(1, characterReader0.pos());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(".08&N#LwBIi>[");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@.cZ(N`\"#Y\"sus");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 95);
      characterReader0.consumeToEnd();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(14, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.matchConsumeIgnoreCase("org.jsoup.parser.CharacterReader");
      int int0 = characterReader0.nextIndexOf("org.jsoup.parser.CharacterReader");
      assertEquals(32, characterReader0.pos());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@.cZ(N`\"#Y\"sus");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 95);
      String string0 = characterReader0.toString();
      assertEquals(0, characterReader0.pos());
      assertEquals("@.cZ(N`\"#Y\"sus", string0);
  }
}
