/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 14:19:48 GMT 2021
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = 'D';
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 1, 1, "1");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("aH)C@;#KMr0erO~");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("ZH");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1872);
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("5Cz_{ST+]a%Pq):\"jt");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("5", string0);
      
      char[] charArray0 = new char[8];
      charArray0[3] = 'C';
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(1, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1295);
      char[] charArray0 = new char[8];
      charArray0[0] = 'z';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".~94y|'s?C");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("4G");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("YWK");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65);
      characterReader0.consume();
      boolean boolean0 = characterReader0.matchesIgnoreCase("YWK");
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3vba%TxJck,M7VVLq=");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("3", string0);
      
      boolean boolean0 = characterReader0.matchConsume("3");
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9pUg.7=3lvh!");
      boolean boolean0 = characterReader0.matches('k');
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9z");
      characterReader0.consumeDigitSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0)ai");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals(1, characterReader0.pos());
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.advance();
      characterReader0.consumeDigitSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'J2|YN/)f,1yrd@a");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 70);
      characterReader0.consumeData();
      characterReader0.unconsume();
      characterReader0.consumeHexSequence();
      assertEquals(16, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("1DF");
      characterReader0.consumeHexSequence();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contai ny null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1872);
      String string0 = characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
      assertEquals("A", string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("YWK");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65);
      characterReader0.consumeTo("?YORR95S");
      characterReader0.advance();
      characterReader0.consumeHexSequence();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9b$c;.LJ6a2)");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1872);
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("MArzrBWJBE<t");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(10, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Dz%}sQjGHy03RJ:N%^");
      characterReader0.consumeLetterSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("FZ&JEM");
      characterReader0.consumeLetterSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1872);
      characterReader0.consumeLetterSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.advance();
      characterReader0.consumeLetterSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=B7D$ME`As-[S");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1367);
      characterReader0.consumeTo('M');
      characterReader0.consumeTagName();
      assertEquals(13, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      char[] charArray0 = new char[2];
      characterReader0.consumeToAny(charArray0);
      characterReader0.consume();
      characterReader0.consumeTagName();
      assertEquals(13, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=B7D$ME`As-[S");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1367);
      characterReader0.consumeData();
      characterReader0.advance();
      characterReader0.consumeData();
      assertEquals(14, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#&Od/6`x~ML");
      char[] charArray0 = new char[1];
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTagName();
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(11, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~!b@Y.pNWwwAO?q)Cg");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 146);
      char[] charArray0 = new char[2];
      int int0 = stringReader0.read(charArray0);
      assertEquals(2, int0);
      
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("T:");
      char[] charArray0 = new char[0];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.advance();
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("k ]Y`GVh>h;");
      characterReader0.consumeTagName();
      char[] charArray0 = new char[2];
      characterReader0.consumeToAny(charArray0);
      assertEquals(11, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("YWK");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65);
      characterReader0.consumeTo("?YORR95S");
      characterReader0.advance();
      char[] charArray0 = new char[2];
      characterReader0.consumeToAny(charArray0);
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("YWK");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65);
      characterReader0.consumeTo("?YORR95S");
      characterReader0.advance();
      characterReader0.consumeTo('?');
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.advance();
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      char[] charArray0 = new char[2];
      characterReader0.consumeToAny(charArray0);
      characterReader0.consume();
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(13, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("T:");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.mark();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      String string0 = characterReader0.toString();
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      char[] charArray0 = new char[1];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 952, 0, "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~!b@Y.pNWwwAO?q)Cg");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 146);
      boolean boolean0 = characterReader0.rangeEquals(0, 0, "");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("T:");
      boolean boolean0 = characterReader0.rangeEquals((-1), (-1), "dGrC,4");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=B7D$ME`As-[S");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1367);
      characterReader0.consumeData();
      int int0 = characterReader0.pos();
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(".*8`AI8w_");
      int int0 = characterReader0.nextIndexOf(".*8`AI8w_");
      assertEquals(0, int0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=B7D$ME`As-[S");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1367);
      int int0 = characterReader0.nextIndexOf("ME`As-[S");
      assertEquals(5, int0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.consumeLetterThenDigitSequence();
      int int0 = characterReader0.nextIndexOf("org");
      assertEquals(3, characterReader0.pos());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".~94y|'s?C");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo('9');
      int int0 = characterReader0.nextIndexOf('9');
      assertEquals(2, characterReader0.pos());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("T:");
      boolean boolean0 = characterReader0.matchesIgnoreCase("");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("z$r]");
      boolean boolean0 = characterReader0.matches("z$r]");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".~94y|'s?C");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo('9');
      char char0 = characterReader0.current();
      assertEquals(2, characterReader0.pos());
      assertEquals('9', char0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".~94y|'s?C");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[1];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.consumeToEnd();
      assertEquals(10, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("YWK");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65);
      characterReader0.consumeTo("?YORR95S");
      characterReader0.consumeTo('?');
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8Dh5=-r");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char char0 = characterReader0.consume();
      assertEquals(1, characterReader0.pos());
      assertEquals('8', char0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      char[] charArray0 = new char[2];
      // Undeclared exception!
//      try { 
        CharacterReader.rangeEquals(charArray0, (-342), (-714), (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      char[] charArray0 = new char[1];
      // Undeclared exception!
//      try { 
        CharacterReader.rangeEquals(charArray0, 24, 24, "String must not be empty");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 24
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Must be faqlse");
      // Undeclared exception!
//      try { 
        characterReader0.rangeEquals(0, 0, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.consumeHexSequence();
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf("f");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Uvwk");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf((CharSequence) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1Dh5=-r");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf(charBuffer0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.Buffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("evs*!&ga");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf('M');
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 146);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matchesLetter();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Must be true");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeToEnd();
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matchesIgnoreCase("");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("T:");
      // Undeclared exception!
//      try { 
        characterReader0.matchesIgnoreCase((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#&Od/6`x~ML");
      char[] charArray0 = new char[17];
      stringReader0.read(charArray0);
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matchesDigit();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#&Od/6`x~ML");
      char[] charArray0 = new char[1];
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.consumeTo('.');
      // Undeclared exception!
//      try { 
        characterReader0.matchesAny(charArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Must be true");
      // Undeclared exception!
//      try { 
        characterReader0.matchesAny((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 52);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matches((String) null);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y_Dt_Of5dKMx");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
//      try { 
        characterReader0.matches((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_>UiR1q");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.matchConsume("_>UiR1q");
      // Undeclared exception!
//      try { 
        characterReader0.matches('@');
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matchConsumeIgnoreCase("");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      // Undeclared exception!
//      try { 
        characterReader0.matchConsumeIgnoreCase((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("EG");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 90);
      stringReader0.close();
      char[] charArray0 = new char[6];
      characterReader0.consumeToAny(charArray0);
      characterReader0.unconsume();
      characterReader0.consumeLetterSequence();
      // Undeclared exception!
//      try { 
        characterReader0.matchConsume("EG");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hHo<X\"uBCklc@");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      // Undeclared exception!
//      try { 
        characterReader0.matchConsume((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8GSZsq\"Ig");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.mark();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.isEmpty();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("evs*!&ga");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.current();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65535);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.containsIgnoreCase("");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("':A{Pq.,mH/&<Q");
      // Undeclared exception!
//      try { 
        characterReader0.containsIgnoreCase("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
//      try { 
        characterReader0.containsIgnoreCase((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 24576);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeToEnd();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[4];
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeToAnySorted(charArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 60);
      // Undeclared exception!
//      try { 
        characterReader0.consumeToAnySorted((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Arrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 103);
      char[] charArray0 = new char[5];
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeToAny(charArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`@=G");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      // Undeclared exception!
//      try { 
        characterReader0.consumeToAny((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeTo("");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".~94y|'s?C");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      // Undeclared exception!
//      try { 
        characterReader0.consumeTo("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("T:");
      // Undeclared exception!
//      try { 
        characterReader0.consumeTo((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 114);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeTo(')');
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#&Od/6`x~ML");
      char[] charArray0 = new char[17];
      stringReader0.read(charArray0);
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeTagName();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("420akO[P:C/");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 114);
      stringReader0.close();
      characterReader0.consumeTo("ttu>R_[i/vSH{");
      // Undeclared exception!
//      try { 
        characterReader0.consumeLetterThenDigitSequence();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_>UiR1q");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.matchConsume("_>UiR1q");
      // Undeclared exception!
//      try { 
        characterReader0.consumeLetterSequence();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'J2|YN/)f,1yrd@a");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 70);
      characterReader0.consumeData();
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeHexSequence();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 38);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeDigitSequence();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.io.StringReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("T:");
      stringReader0.close();
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader(stringReader0, 41);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Df4;5=#XrBg7d4{");
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader(stringReader0, (-3406));
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader((Reader) null, (-1));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader(stringReader0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader((Reader) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("X");
      char[] charArray0 = new char[2];
      characterReader0.consumeToAny(charArray0);
      characterReader0.unconsume();
      characterReader0.consumeToAny(charArray0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'J2|YN/)f,1yrd@a");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 70);
      characterReader0.consumeData();
      boolean boolean0 = characterReader0.isEmpty();
      assertEquals(16, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Must be true");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.isEmpty();
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      char[] charArray0 = new char[15];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 1, 1, "s");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("YWK");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65);
      boolean boolean0 = characterReader0.containsIgnoreCase("YWK");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      boolean boolean0 = characterReader0.containsIgnoreCase("k");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.consumeLetterThenDigitSequence();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(3, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'J2|YN/)f,1yrd@a");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 70);
      characterReader0.consumeData();
      characterReader0.matchesDigit();
      assertEquals(16, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("T:");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~!b@Y.pNWwwAO?q)Cg");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1367);
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("z$r]");
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9pUg.7=3lvh!");
      boolean boolean0 = characterReader0.matchesLetter();
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Must be true");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeToEnd();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(12, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=B7D$ME`As-[S");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 146);
      char[] charArray0 = new char[2];
      stringReader0.read(charArray0);
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      char[] charArray0 = new char[5];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      // Undeclared exception!
//      try { 
        characterReader0.matchesAnySorted((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Arrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.consumeTagName();
      char[] charArray0 = new char[3];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(32, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1295);
      char[] charArray0 = new char[8];
      charArray0[7] = 'o';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("T:");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("T:");
      assertEquals(2, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      boolean boolean0 = characterReader0.matchesIgnoreCase("kBgea)lMY");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("k ]Y`GVh>h;");
      characterReader0.consumeTagName();
      boolean boolean0 = characterReader0.matches("k");
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_>UiR1q");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchConsume("org.jsoup.helper.Validate");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1Dh5=-r");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matches('1');
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      characterReader0.consumeTagName();
      characterReader0.matches('d');
      assertEquals(32, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeDigitSequence();
      stringReader0.close();
      char[] charArray0 = new char[4];
      // Undeclared exception!
//      try { 
        characterReader0.matchesAnySorted(charArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9b$c;.LJ6a2)");
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".~94y|'s?C");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.advance();
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~!b@Y.pNWwwAO?q)Cg");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1367);
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("=u1D$ME`>-sS");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1367);
      characterReader0.consumeTagName();
      assertEquals(8, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Y^Nu<.oc).!cv");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 97);
      characterReader0.consumeTagName();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Y^Nu<.oc).!cv");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 97);
      characterReader0.consumeData();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("':A{Pq.,mH/&<Q");
      characterReader0.consumeData();
      assertEquals(11, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#&Od/6`x~ML");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[9];
      charArray0[4] = '/';
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0)'A^DX8");
      characterReader0.consumeLetterThenDigitSequence();
      char[] charArray0 = new char[7];
      charArray0[0] = ')';
      characterReader0.consumeToAny(charArray0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("S BQi-|SH8M7>");
      char[] charArray0 = new char[6];
      charArray0[2] = '';
      characterReader0.consumeToAny(charArray0);
      characterReader0.unconsume();
      characterReader0.consumeData();
      assertEquals(14, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("420akO[P:C/");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 114);
      boolean boolean0 = characterReader0.containsIgnoreCase("420akO[P:C/");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hHo<X\"uBCklc@");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      boolean boolean0 = characterReader0.containsIgnoreCase("hHo<X\"uBCklc@");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_>UiR1q");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo("_>UiR1q");
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 118);
      int int0 = characterReader0.nextIndexOf('p');
      assertEquals(8, int0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("420akO[P:C/");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 114);
      int int0 = characterReader0.nextIndexOf('+');
      assertEquals(0, characterReader0.pos());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0)'A^DX8");
      // Undeclared exception!
//      try { 
        characterReader0.rewindToMark();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // org.evosuite.runtime.mock.java.lang.MockThrowable: Mark invalid
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("T:");
      characterReader0.mark();
      characterReader0.rewindToMark();
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      // Undeclared exception!
//      try { 
        characterReader0.unconsume();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // org.evosuite.runtime.mock.java.lang.MockThrowable: No buffer left to unconsume
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      char[] charArray0 = new char[2];
      characterReader0.consumeToAny(charArray0);
      characterReader0.consume();
      // Undeclared exception!
//      try { 
        characterReader0.toString();
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char char0 = characterReader0.current();
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char char0 = characterReader0.current();
      assertEquals(0, characterReader0.pos());
      assertEquals('f', char0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("DZ");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_>UiR1q");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matches('1');
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65535);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consume();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0)'A^DX8");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("s");
      // Undeclared exception!
//      try { 
        characterReader0.rangeEquals(1, 1, "s");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 1
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("C\"'(mCg@/");
      characterReader0.consumeLetterSequence();
      characterReader0.consumeTo("C");
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#0?!`x1pX,\u0004QfOQ]h");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 11);
      characterReader0.advance();
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_>UiR1q");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.toString();
      assertEquals(0, characterReader0.pos());
      assertEquals("_>UiR1q", string0);
  }
}
