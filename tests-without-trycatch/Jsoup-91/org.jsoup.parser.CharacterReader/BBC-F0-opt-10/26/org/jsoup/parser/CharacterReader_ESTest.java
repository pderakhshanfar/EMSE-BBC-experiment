/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 22 19:25:15 GMT 2021
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VEB5wi2j");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.rangeEquals(11, 11, "H6Z`(`\"8hnG");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9$3yHfT(K O@5-,|F");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("zo8=y>(xfop$qHfT=-o");
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0);
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesLetter();
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r)RZb=rqZ5$l!%)+");
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0);
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ds't63PbqDb}p.yG^V");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 421);
      char[] charArray0 = new char[2];
      charArray0[0] = 'D';
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[0)}l>z<HNcS)");
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase(" ^%f?}");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9$3yHfT(K O@5-,|F");
      characterReader0.consumeTagName();
      boolean boolean0 = characterReader0.matchesIgnoreCase("9$3yHfT(K O@5-,|F");
      assertEquals(9, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterThenDigitSequence();
      boolean boolean0 = characterReader0.matchConsume("is{*)c'x");
      assertEquals(3, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("HnXGNE=[Kd}XS^!YB7");
      characterReader0.advance();
      boolean boolean0 = characterReader0.matches("HnXGNE=[Kd}XS^!YB7");
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9$3yHfT(K O@5-,|F");
      boolean boolean0 = characterReader0.matches('x');
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9$3yHfT(K O@5-,|F");
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("9", string0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9$3yHfT(K O@5-,|F");
      characterReader0.consume();
      characterReader0.consumeTo("9$3yHfT(K O@5-,|F");
      characterReader0.consume();
      characterReader0.consumeDigitSequence();
      assertEquals(18, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Mark invalid");
      characterReader0.consume();
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("F-4Ryy>Zj~6+ ");
      characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("[0)}l>z<HNcS)");
      characterReader0.consume();
      characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9$3yHfT(K O@5-,|F");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals(1, characterReader0.pos());
      assertEquals("9", string0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Z?k_9;-)X2d&]~p");
      assertEquals(0, characterReader0.pos());
      
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals("Z", string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("epz:C%jk/$ua");
      characterReader0.consumeLetterSequence();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r)RZb=rqZ5$l!%)+");
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0);
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeLetterSequence();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^p5i@LA");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo(':');
      characterReader0.advance();
      characterReader0.consumeLetterSequence();
      assertEquals(9, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consume();
      characterReader0.consumeTagName();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9$3yHfT(K O@5-,|F");
      characterReader0.consume();
      characterReader0.consumeTo("9$3yHfT(K O@5-,|F");
      characterReader0.consume();
      characterReader0.consumeTagName();
      assertEquals(18, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("HnXGNE=[Kd}XS^!YB7");
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.consumeData();
      assertEquals(18, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("HnXGNE=[Kd}XS^!YB7");
      characterReader0.consumeToEnd();
      characterReader0.consume();
      characterReader0.consumeData();
      assertEquals(19, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" FR:D");
      char[] charArray0 = new char[2];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.unconsume();
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.helper.Validate");
      char[] charArray0 = new char[4];
      charArray0[0] = 'j';
      charArray0[1] = 's';
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("tUz-P7#Sv|DLr)");
      characterReader0.consumeLetterThenDigitSequence();
      char[] charArray0 = new char[2];
      characterReader0.consumeToAny(charArray0);
      assertEquals(14, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("tUz-P7#Sv|DLr)");
      char[] charArray0 = new char[2];
      charArray0[0] = 'C';
      characterReader0.consumeToAny(charArray0);
      assertEquals(14, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo('P');
      char[] charArray0 = new char[2];
      characterReader0.advance();
      characterReader0.consumeToAny(charArray0);
      assertEquals(33, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("A", string0);
      
      boolean boolean0 = characterReader0.containsIgnoreCase("A");
      assertEquals(1, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("I[m$");
      boolean boolean0 = characterReader0.containsIgnoreCase("I[m$");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("HnXGNE=[Kd}XS^!YB7");
      characterReader0.advance();
      characterReader0.consumeTo('!');
      assertEquals(14, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo('P');
      characterReader0.advance();
      int int0 = characterReader0.nextIndexOf('8');
      assertEquals(33, characterReader0.pos());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("d~Or\"l");
      characterReader0.matchConsume("d~Or\"l");
      characterReader0.advance();
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(7, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" FR:D");
      char[] charArray0 = new char[1];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.consume();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(6, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" FR:D");
      char[] charArray0 = new char[1];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.unconsume();
      characterReader0.mark();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      char[] charArray0 = new char[8];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.toString();
      assertEquals(27, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      char[] charArray0 = new char[1];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 1208, 0, "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      char[] charArray0 = new char[7];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, (-1117), (-1117), "l \"a5");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(")Dk^',-j*o7b");
      boolean boolean0 = characterReader0.rangeEquals((-1446), 0, "");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      int int0 = characterReader0.nextIndexOf("org.jsoup.parser.CharacterReader");
      assertEquals(0, characterReader0.pos());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("HnXGNE=[Kd}XS^!YB7");
      int int0 = characterReader0.nextIndexOf("nXGNE=[Kd}XS^!YB7");
      assertEquals(0, characterReader0.pos());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("HnXGNE=[Kd}XS^!YB7");
      int int0 = characterReader0.nextIndexOf("k1eSt|z7<");
      assertEquals(0, characterReader0.pos());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("k1eSt|z7<");
      int int0 = characterReader0.nextIndexOf('z');
      assertEquals(6, int0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("HnXGNE=[Kd}XS^!YB7");
      boolean boolean0 = characterReader0.matches("HnXGNE=[Kd}XS^!YB7");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9$3yHfT(K O@5-,|F");
      char char0 = characterReader0.current();
      assertEquals('9', char0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" FR:D");
      char[] charArray0 = new char[1];
      characterReader0.consumeToAnySorted(charArray0);
      characterReader0.consumeToEnd();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.UncheckedIOException");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      characterReader0.consumeTo('e');
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9$3yHfT(K O@5-,|F");
      characterReader0.consume();
      characterReader0.consumeTo("9$3yHfT(K O@5-,|F");
      characterReader0.consume();
      char[] charArray0 = new char[7];
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(18, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 12);
      characterReader0.consume();
      // Undeclared exception!
//      try { 
        characterReader0.toString();
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      char[] charArray0 = new char[3];
      // Undeclared exception!
//      try { 
        CharacterReader.rangeEquals(charArray0, 1, 1122, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      char[] charArray0 = new char[2];
      // Undeclared exception!
//      try { 
        CharacterReader.rangeEquals(charArray0, 4, 4, "B`$'");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 4
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
//      try { 
        characterReader0.rangeEquals(53, (-379), (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 14);
      // Undeclared exception!
//      try { 
        characterReader0.rangeEquals(14, 14, "cZw&\",EQ}j40Vq");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 14
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2351);
      stringReader0.close();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf(charBuffer0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("I[m$");
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf((CharSequence) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf(charBuffer0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.Buffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo("pAm");
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.nextIndexOf('`');
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")y(-1S.ds[`Q$");
      char[] charArray0 = new char[5];
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      stringReader0.close();
      characterReader0.consumeToAny(charArray0);
      // Undeclared exception!
//      try { 
        characterReader0.matchesLetter();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{dO`\"nNw1)K}Wc\"E");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.consumeToEnd();
      // Undeclared exception!
//      try { 
        characterReader0.matchesIgnoreCase("{dO`\"nNw1)K}Wc\"E");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("[0)}l>z<HNcS)");
      // Undeclared exception!
//      try { 
        characterReader0.matchesIgnoreCase((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2782);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matchesDigit();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      char[] charArray0 = new char[9];
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matchesAnySorted(charArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("HnXGNpE=[Kd}XS^!YB7");
      characterReader0.consumeTo("~==>gIsWdDuO+");
      characterReader0.unconsume();
      // Undeclared exception!
//      try { 
        characterReader0.matchesAnySorted((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Arrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")y(-1S.ds[`Q$");
      char[] charArray0 = new char[5];
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      stringReader0.close();
      characterReader0.consumeToAny(charArray0);
      // Undeclared exception!
//      try { 
        characterReader0.matchesAny(charArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("j");
      // Undeclared exception!
//      try { 
        characterReader0.matchesAny((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matches("");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" FR:D");
      // Undeclared exception!
//      try { 
        characterReader0.matches((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{dO`\"nNw1)K}Wc\"E");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.matchConsume("{dO`\"nNw1)K}Wc\"E");
      // Undeclared exception!
//      try { 
        characterReader0.matches('b');
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matchConsumeIgnoreCase("");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" FR:D");
      // Undeclared exception!
//      try { 
        characterReader0.matchConsumeIgnoreCase((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.matchConsume("");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      // Undeclared exception!
//      try { 
        characterReader0.matchConsume((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.mark();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{dO`\"nNw1)K}Wc\"E");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.consumeToEnd();
      // Undeclared exception!
//      try { 
        characterReader0.isEmpty();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.current();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 98);
      stringReader0.close();
      characterReader0.consumeTo("yV$q}?5P}Im?Y{");
      // Undeclared exception!
//      try { 
        characterReader0.containsIgnoreCase("Array must not contain any null objects");
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("d~Or\"l");
      // Undeclared exception!
//      try { 
        characterReader0.containsIgnoreCase("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" FR:D");
      // Undeclared exception!
//      try { 
        characterReader0.containsIgnoreCase((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{dO`\"nNw1)K}Wc\"E");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.matchConsume("{dO`\"nNw1)K}Wc\"E");
      // Undeclared exception!
//      try { 
        characterReader0.consumeToEnd();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2782);
      char[] charArray0 = new char[6];
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeToAnySorted(charArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("I[m$");
      // Undeclared exception!
//      try { 
        characterReader0.consumeToAnySorted((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Arrays", e);
//      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("zdV3@n<|9MiI");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[2];
      stringReader0.close();
      characterReader0.consumeTo('a');
      // Undeclared exception!
//      try { 
        characterReader0.consumeToAny(charArray0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      // Undeclared exception!
//      try { 
        characterReader0.consumeToAny((char[]) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Array must not contain any null objects");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 98);
      stringReader0.close();
      characterReader0.consumeTo("yV$q}?5P}Im?Y{");
      // Undeclared exception!
//      try { 
        characterReader0.consumeTo((String) null);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("");
      // Undeclared exception!
//      try { 
        characterReader0.consumeTo("");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("H6Z`(`\"8hnG");
      // Undeclared exception!
//      try { 
        characterReader0.consumeTo((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeTo('N');
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Aua_;");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[0];
      characterReader0.consumeToAny(charArray0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeTagName();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q(B_2:gW~CYA;x?):k");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeToEnd();
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeLetterThenDigitSequence();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeLetterSequence();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 24576);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeHexSequence();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      // Undeclared exception!
//      try { 
        characterReader0.consumeDigitSequence();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";=#]!8Jg");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      stringReader0.close();
      characterReader0.consumeToEnd();
      // Undeclared exception!
//      try { 
        characterReader0.consume();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader(stringReader0, 3073);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader(stringReader0, (-1));
//        fail("Expecting exception: NegativeArraySizeException");
      
//      } catch(NegativeArraySizeException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader((Reader) null, (-1));
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<JCDp9WTw(t");
      stringReader0.close();
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader(stringReader0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Stream closed
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CharacterReader characterReader0 = null;
//      try {
        characterReader0 = new CharacterReader((Reader) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("HnXGNpE=[Kd}XS^!YB7");
      characterReader0.consumeTo("~==>gIsWdDuO+");
      boolean boolean0 = characterReader0.isEmpty();
      assertEquals(19, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("epz:C%jk/$ua");
      boolean boolean0 = characterReader0.isEmpty();
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("p=;/kpkz':]}xP");
      characterReader0.consumeTagName();
      characterReader0.consumeToEnd();
      assertEquals(14, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("EgPm,lHy&+Z0tGRS)5");
      characterReader0.mark();
      characterReader0.consumeLetterThenDigitSequence();
      characterReader0.rewindToMark();
      characterReader0.consumeLetterSequence();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("0YJ\"JK{e\"jjBj}1S");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" FR:D");
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("epz:C%jk/$ua");
      characterReader0.consumeTo('y');
      characterReader0.matchesDigit();
      assertEquals(12, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("B`$'");
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("d~Or\"l");
      characterReader0.consumeHexSequence();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("HnXGNE=[Kd}XS^!YB7");
      characterReader0.consumeLetterThenDigitSequence();
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(6, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("mNie~Tz9:7$#{jog$");
      char[] charArray0 = new char[8];
      charArray0[3] = 'm';
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("epz:C%jk/$ua");
      char[] charArray0 = new char[8];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.parser.CharacterReader");
      char[] charArray0 = new char[9];
      charArray0[0] = 'o';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[0)}l>z<HNcS)");
      char[] charArray0 = new char[1];
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[0];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'|W=Mu@");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("'|W=Mu@");
      assertEquals(7, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("HnXGNE=[Kd}XS^!YB7");
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("Q)wVYE{_FBo");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("EgPm,lHy&+Z0tGRS)5");
      boolean boolean0 = characterReader0.matchesIgnoreCase("");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("epz:C%jk/$ua");
      boolean boolean0 = characterReader0.matches("<zv");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("No buffer left to unconsume");
      char[] charArray0 = new char[8];
      charArray0[3] = 'e';
      characterReader0.consumeToAnySorted(charArray0);
      boolean boolean0 = characterReader0.matches('e');
      assertEquals(7, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("HnXGNE=[Kd}XS^!YB7");
      boolean boolean0 = characterReader0.matches('1');
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.jsoup.parser.CharacterReader");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo('P');
      characterReader0.matches('P');
      assertEquals(32, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[0)}l>z<HNcS)");
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals(1, characterReader0.pos());
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[0)}l>z<HNcS)");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals("", string0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("epz:C%jk/$ua");
      characterReader0.consumeTo('y');
      characterReader0.consumeDigitSequence();
      assertEquals(12, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("f");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals("f", string0);
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9\"I=yKF%d2Ev(~N");
      characterReader0.consumeHexSequence();
      int int0 = characterReader0.pos();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" FR:D");
      String string0 = characterReader0.consumeHexSequence();
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("[0)}l>z<HNcS)");
      characterReader0.advance();
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("d~:r\"l");
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals(1, characterReader0.pos());
      assertEquals("d", string0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("mNie~Tz9:7$#{jog$");
      characterReader0.consumeLetterSequence();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^p5i@LA");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo(':');
      characterReader0.consumeLetterSequence();
      assertEquals(8, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("[0)}l>z<HNcS)");
      characterReader0.consumeTagName();
      assertEquals(5, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("[0)}l>z<HNcS)");
      characterReader0.consumeData();
      characterReader0.consumeTagName();
      assertEquals(7, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("^=8C&y-dYq{I*)");
      characterReader0.consumeData();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("N21");
      characterReader0.consumeTagName();
      char[] charArray0 = new char[9];
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("r)RZb=rqZ5$l!%)+");
      StringReader stringReader0 = new StringReader("r)RZb=rqZ5$l!%)+");
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0);
      characterReader0.consumeToAny(charArray0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("|KSEhXiC");
      characterReader0.consumeTo("S");
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("epz:C%jk/$ua");
      characterReader0.consumeTo('y');
      characterReader0.consumeHexSequence();
      assertEquals(12, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("I[m$");
      boolean boolean0 = characterReader0.containsIgnoreCase("IOts8");
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader(" FR:D");
      boolean boolean0 = characterReader0.containsIgnoreCase(" FR:D");
      assertTrue(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Must be true");
      int int0 = characterReader0.nextIndexOf('M');
      assertEquals(0, characterReader0.pos());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("d~Or\"l");
      // Undeclared exception!
//      try { 
        characterReader0.rewindToMark();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // org.evosuite.runtime.mock.java.lang.MockThrowable: Mark invalid
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      // Undeclared exception!
//      try { 
        characterReader0.unconsume();
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // org.evosuite.runtime.mock.java.lang.MockThrowable: No buffer left to unconsume
//         //
//         verifyException("org.jsoup.parser.CharacterReader", e);
//      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("N21");
      characterReader0.consumeTagName();
      characterReader0.consume();
      characterReader0.consumeHexSequence();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7sgu9#!J4> ");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.matchConsume("7sgu9#!J4> ");
      char char0 = characterReader0.current();
      assertEquals(11, characterReader0.pos());
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("EgPm,lHy&+Z0tGRS)5");
      char char0 = characterReader0.current();
      assertEquals(0, characterReader0.pos());
      assertEquals('E', char0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo("pAm");
      characterReader0.consumeLetterThenDigitSequence();
      assertEquals(12, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65535);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9\"I=yKF%d2Ev(~N");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      boolean boolean0 = characterReader0.rangeEquals(9, 9, ">7L(;.kWT");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Array must not contain any null objects");
      char[] charArray0 = new char[0];
      characterReader0.consumeToAny(charArray0);
      characterReader0.consumeTo("Array must not contain any null objects");
      assertEquals(39, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("f");
      String string0 = characterReader0.toString();
      assertEquals(0, characterReader0.pos());
      assertEquals("f", string0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Mark invalid");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[1];
      characterReader0.consumeTo("pAm");
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(12, characterReader0.pos());
      assertFalse(boolean0);
  }
}
