/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 22 21:04:32 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PipedWriter;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Element element0 = document0.body();
      element0.before("org.jsoup.select.NodeFilter$FilterResult");
      element0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Parser.parse("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      document0.appendChild(document0);
      Node[] nodeArray0 = new Node[5];
      // Undeclared exception!
//      try { 
        document0.insertChildren(0, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Array must not contain any null objects
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("aside", "aside");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("embed", "<2BP:a#%UzT*+");
      document0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Tag tag0 = Tag.valueOf("(6WOVJ0A2");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "(6WOVJ0A2", attributes0);
      Document document0 = Parser.parse("~w_g|`Z?hw=HJJFj", "(6WOVJ0A2");
      formElement0.appendChild(document0);
      document0.wrap("html");
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Document document1 = Parser.parse("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Element element0 = document0.head();
      element0.appendChild(document1);
      element0.wrap(":GHBkM.8");
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = new Document("T@/8");
      document0.wholeText();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Tag tag0 = Tag.valueOf("(6WOVJ0A2");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "(6WOVJ0A2", attributes0);
      Document document0 = Parser.parse("~w_g|`Z?hw=HJJFj", "(6WOVJ0A2");
      Element element0 = document0.head();
      Element element1 = element0.before((Node) formElement0);
      element1.val("(6WOVJ0A2");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = Parser.parse("~w_g|`Z?hw=HJJFj", "(6WOVJ0A2");
      Element element0 = document0.head();
      element0.val("(6WOVJ0A2");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Tag tag0 = Tag.valueOf("(6WOVJA2");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "(6WOVJ0A2", attributes0);
      Element element0 = formElement0.val("textarea");
      element0.val();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Qr", "Qr");
      Element element0 = document0.body();
      element0.toggleClass("i");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("K|", "K|");
      document0.parentNode = (Node) document0;
      document0.toggleClass("org.jsoup.nodes.Element$2");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("J>", "J>");
      Element element0 = document0.body();
      element0.text("J>");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Tag tag0 = Tag.valueOf("embed");
      CDataNode cDataNode0 = new CDataNode("l");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "1]q+a", attributes0);
      formElement0.text();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Tag tag0 = Tag.valueOf("(6WOVJ0A2");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "(6WOVJ0A2", attributes0);
      Document document0 = Parser.parse("~w_g|`Z?hw=HJJFj", "(6WOVJ0A2");
      Element element0 = document0.head();
      Element element1 = element0.before((Node) formElement0);
      element1.tagName("H9!OwQY'tA7#a9wld{");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("br", "S-e](o_8+'_2q}9ck@3");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.noQuirks;
      Document document1 = document0.quirksMode(document_QuirksMode0);
      document1.siblingIndex = (-318);
      document1.tagName("body");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(", currentElement=", "DEnr}^0&Bc_5M");
      document0.tagName("head");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = new Document("</");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Tag tag0 = Tag.valueOf("(6WOVJ0A2");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "(6WOVJ0A2", attributes0);
      pseudoTextElement0.tag();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("G#t,/+1my%t", "G#t,/+1my%t");
      Element element0 = document0.body();
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Tag tag0 = Tag.valueOf("embed");
      CDataNode cDataNode0 = new CDataNode("@l");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "embed", attributes0);
      formElement0.tag();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Element element0 = document0.head();
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Element element0 = new Element("id");
      Element element1 = element0.text("id");
      element1.siblingIndex = 46;
      element1.selectFirst("id");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Qr", "Qr");
      document0.prependElement("Qr");
      document0.selectFirst("Qr");
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("1]Q+a", "org.jsoup.nodes.Element$NodeList");
      document0.select("ceK4");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "cx8o97*Jf:xc*Kz}");
      document0.appendChild(document0);
      document0.removeClass("eUT");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Document.createShell("T@/8");
      Element element0 = document0.head();
      element0.removeClass("quirks");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("aside", "aside");
      Element element0 = document0.appendChild(document0);
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Tag tag0 = Tag.valueOf("(6WOVJ0A2");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "(6WOVJ0A2", attributes0);
      Document document0 = Parser.parseBodyFragmentRelaxed("(6WOVJ0A2", "&QZ6)rqqr</~EA@");
      Element element0 = document0.head();
      element0.before((Node) formElement0);
      element0.prependText("~w_g|`Z?hw=HJJFj");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(6WOVJ0A2", "&QZ6)rqqr</~EA@");
      Element element0 = document0.head();
      element0.prependText("~w_g|`Z?hw=HJJFj");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = new Document("T@/8");
      document0.prependElement("body");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("J>", "J>");
      Element element0 = document0.body();
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Tag tag0 = Tag.valueOf("embed");
      CDataNode cDataNode0 = new CDataNode("@l");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "embed", attributes0);
      formElement0.prependChild(cDataNode0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = Parser.parse("5w$HH=Xn \r(fI:0wA", "Qr");
      Element element0 = document0.body();
      element0.prepend("wu9m");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("8t8K{", "8t8K{");
      Element element0 = document0.head();
      element0.prepend("p7~5jl0K_D?D.O");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("8RKJv4inT", "8RKJv4inT");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Element element0 = document0.head();
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Element element0 = new Element("boS8Bc=lmryxUXj)g(");
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("TS(", "TS(");
      document0.appendChild(document0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#x", "z");
      Element element0 = document0.body();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = new Document("Attributes incorrectly present on end tag");
      document0.parentNode = (Node) document0;
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(";@3ocel<", "");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = Document.createShell("embed");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Document.createShell("Qr");
      document0.appendChild(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = new Document("T@/8");
      Element element0 = document0.createElement("head");
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$1", "org.jsoup.nodes.Element$1");
      Element element0 = document0.body();
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      element0.is((Evaluator) evaluator_IsOnlyOfType0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":N\"PIl|f", ":N\"PIl|f");
      document0.is("#root");
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = Parser.parse(",AkAN!H2U?nN%-m7(7", ",AkAN!H2U?nN%-m7(7");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf(",AkAN!H2U?nN%-m7(7", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, ",AkAN!H2U?nN%-m7(7", (Attributes) null);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) formElement0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) formElement0;
      document0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("nD*Y/B", "nD*Y/B");
      Element element0 = document0.body();
      LinkedList<DocumentType> linkedList0 = new LinkedList<DocumentType>();
      element0.insertChildren((-1), (Collection<? extends Node>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = new Document("T@/8");
      Elements elements0 = document0.getElementsByAttributeValueMatching("b)-`#}q'u<WKfc. T", "org.jsoup.helper.W3CDom");
      document0.insertChildren(0, (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("head", "head");
      Element element0 = document0.head();
      element0.html("head");
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "cx8o97*Jf:xc*Kz}");
      Document document1 = Parser.parse("cx8o97*Jf:xc*Kz}", "#");
      document0.appendChild(document1);
      document1.html("bS8B1=lmryxUXj)%T(");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      document0.html("");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("8RKJv4inT", "8RKJv4inT");
      Element element0 = document0.prependElement("8RKJv4inT");
      element0.html((PipedWriter) null);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("G#t,/+1my%t", "");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Tag tag0 = Tag.valueOf("(6WOVJ0A2");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "(6WOVJ0A2", attributes0);
      formElement0.html();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = new Document("a8<pz#!");
      document0.getElementsByAttributeValueStarting("0n)~7DuOwU`9l_e@", "org.jsoup.parser.XmlTreeBuilder");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("qKvG8WIK", "qKvG8WIK");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = new Document("</");
      Pattern pattern0 = Pattern.compile("</", 860);
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("boS8Bc=lmryxUXj)g(", "boS8Bc=lmryxUXj)g(");
      document0.getElementsMatchingText("C\"y8Jqz'ybZ\"`wRqG");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = Document.createShell("T@/8");
      Pattern pattern0 = Pattern.compile("CM:u8-b.r", (-76));
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("boS8Bc=lmryxUXj)g(", "boS8Bc=lmryxUXj)g(");
      Element element0 = document0.text("noframes");
      Pattern pattern0 = Pattern.compile("noframes", (-76));
      element0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("aside", "aside");
      document0.getElementsContainingText("aside");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Tag tag0 = Tag.valueOf("embed");
      CDataNode cDataNode0 = new CDataNode("@l");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "embed", attributes0);
      formElement0.getElementsContainingOwnText("<embed #cdata=\"@l\">");
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Insert position out of bounds.", ".");
      document0.getElementsByTag("5:@S(");
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = new Document("a");
      Element element0 = document0.createElement("</");
      element0.getElementsByTag("</");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("G#t,/+1my%t", "");
      document0.getElementsByIndexLessThan(348);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      Tag tag0 = Tag.valueOf("head", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "#root", attributes0);
      formElement0.getElementsByIndexGreaterThan(62);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      document0.getElementsByIndexEquals(1);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("z", "z");
      document0.getElementsByClass("#x");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Document document0 = new Document("value");
      document0.getElementsByAttributeValueEnding("value", "`dO*_>#S =");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Tag tag0 = Tag.valueOf("(6WOVJ0A2");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("(6WOVJ0A2", "(6WOVJ0A2");
      Attributes attributes1 = attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "(6WOVJ0A2", attributes1);
      formElement0.getElementsByAttributeValueEnding("(6WOVJ0A2", "(6WOVJ0A2");
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Element element0 = new Element("<");
      element0.getElementsByAttributeStarting("wRfG_3cgR;a");
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Tag tag0 = Tag.valueOf("%anBQQ%@G^rRrIny>vW");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("eswjt1zfmg;]yq", (String) null);
      Element element0 = new Element(tag0, "%anBQQ%@G^rRrIny>vW", attributes1);
      element0.getElementsByAttributeStarting("eswjt1zfmg;]yq");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Element element0 = document0.appendChild(document0);
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Qr", "Qr");
      Element element0 = document0.body();
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("8t8K{", "8t8K{");
      document0.siblingIndex = 4;
      document0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Element element0 = document0.head();
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = Document.createShell("TS(");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Element element0 = document0.head();
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Document document0 = Parser.parse("5EP00k'vY2ftI@*'%", "header");
      Element element0 = document0.body();
      Locale locale0 = Locale.GERMANY;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("TS(", "TS(");
      document0.parentNode = (Node) document0;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      document0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("", "");
      Element element0 = document0.shallowClone();
      Locale locale0 = Locale.CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("bS8B1=lmryxUXj)%T(");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("cx8o97*Jf:xc*Kz}");
      FormElement formElement0 = new FormElement(tag0, "bS8B1=lmryxUXj)%T(", attributes0);
      formElement0.toggleClass("<html>\n <head></head>\n <body>\n  cx8o97*Jf:xc*Kz}\n </body>\n</html>");
      formElement0.className();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("", "");
      Element element0 = document0.empty();
      element0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Parser.parse("(6WOVJ0A2", "(6WOVJ0A2");
      Element element0 = document0.head();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) element0;
      document0.insertChildren(0, nodeArray0);
      document0.child(0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Parser.parse("boS8Bc=lmryxUXj)g(", "boS8Bc=lmryxUXj)g(");
      document0.child(0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Tag tag0 = Tag.valueOf("(6WOVJ0A2");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "(6WOVJ0A2", attributes0);
      Document document0 = Parser.parseBodyFragmentRelaxed("(6WOVJ0A2", "&QZ6)rqqr</~EA@");
      Element element0 = document0.head();
      element0.before((Node) formElement0);
      formElement0.before((Node) formElement0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("boS8Bc=lmryxUXj)g(", "boS8Bc=lmryxUXj)g(");
      Element element0 = document0.body();
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("1]Q+a", "org.jsoup.nodes.Element$NodeList");
      Element element0 = document0.prependElement("1]Q+a");
      element0.before(":k3H?^zu\u0000*sV");
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = new Document("W@N7SX5QwGT=\"P");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Element element0 = new Element("<");
      element0.baseUri();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      Tag tag0 = Tag.valueOf("head", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("#root", "head");
      attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "#root", attributes0);
      formElement0.attributes();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(6WOVJ0A2", "&QZ6)rqqr</~EA@");
      Element element0 = document0.body();
      element0.attr("body", true);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(6WOVJ0A2", "&QZ6)rqqr</~EA@");
      Element element0 = document0.head();
      element0.attr("body", true);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = new Document(")vJkXDG`U(;");
      document0.attr(")vJkXDG`U(;", false);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Tag tag0 = Tag.valueOf("(6WOVJ0A2");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "(6WOVJ0A2", attributes0);
      Document document0 = Parser.parse("~w_g|`Z?hw=HJJFj", "(6WOVJ0A2");
      Element element0 = document0.head();
      element0.before((Node) formElement0);
      element0.attr("+z,93|o,),y.x6[", "(6WOVJ0A2");
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = Parser.parse("~w_g|`Z?hw=HJJFj", "(6WOVJ0A2");
      Element element0 = document0.head();
      element0.attr("+z,93|o,),y.x6[", "(6WOVJ0A2");
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      document0.attr("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = new Document("T@/8");
      document0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = Document.createShell("bS8B1=lmryxUXj)%T(");
      Element element0 = document0.body();
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$1", "org.jsoup.nodes.Element$1");
      Element element0 = document0.body();
      element0.appendText("org.jsoup.nodes.Element$1");
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = new Document("Qr");
      Element element0 = document0.prependElement("textarea");
      element0.appendText(",t%CO");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("aside", "aside");
      Element element0 = document0.createElement("aside");
      element0.appendElement(",AkAN!H2U?nN%-m7(7");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      document0.appendElement("body");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = new Document("");
      document0.append("");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("boS8Bc=lmryxUXj)g(", "boS8Bc=lmryxUXj)g(");
      Element element0 = document0.body();
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Element element0 = document0.appendElement("bS8B1=lmryxUXj)%T(");
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("TS(", "TS(");
      document0.parentNode = (Node) document0;
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf("IAh1H 9k7j%1wi}E", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "class", attributes0);
      document0.after((Node) formElement0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Document document1 = document0.clone();
      document0.appendChild(document1);
      document1.after("bS8B1=lmryxUXj)%T(");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("p", "p");
      Element element0 = document0.body();
      element0.addClass("p");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("Wyp4)/j?bM6g", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "j(KJ-}=+>yVCj", attributes0);
      pseudoTextElement0.addClass("_b");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = new Document("T@/8");
      document0.parentNode = (Node) document0;
      // Undeclared exception!
      document0.wrap("T@/8");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
//      try { 
        document0.wrap("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Parser.parse("C4", ",AkAN!H2U?nN%-m7(7");
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document0;
      DocumentType documentType0 = new DocumentType("[K5EfG92", "|L~S", "CONTINUE", "CONTINUE");
      nodeArray0[6] = (Node) documentType0;
      document0.addChildren(nodeArray0);
      // Undeclared exception!
      document0.val("00Y ");
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Tag tag0 = Tag.valueOf("bS8B1=lmryxUXj)%T(");
      CDataNode cDataNode0 = new CDataNode("l");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "bS8B1=lmryxUXj)%T(", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.toggleClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = new Document("Children collection to be inserted must not be null.");
      // Undeclared exception!
//      try { 
        document0.text("Lk");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Document", e);
//      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Document.createShell("US-ASCII");
      // Undeclared exception!
//      try { 
        document0.text((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = new Document("T@/8");
      document0.parentNode = (Node) document0;
      // Undeclared exception!
      document0.tagName(":nth-child(%d)");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("", "");
      // Undeclared exception!
//      try { 
        document0.tagName("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Tag name must not be empty.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Tag tag0 = Tag.valueOf("(6WOVJ0A2");
      Attributes attributes0 = new Attributes();
      Document document0 = Parser.parseBodyFragmentRelaxed("(6WOVJ0A2", "&QZ6)rqqr</~EA@");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "(6WOVJ0A2", attributes0);
      pseudoTextElement0.reparentChild(document0);
      // Undeclared exception!
//      try { 
        document0.siblingElements();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal Capacity: -1
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("1]q+a", "T@/8");
      // Undeclared exception!
//      try { 
        document0.selectFirst(")))s8$o");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query ')))s8$o': unexpected token at ')))s8$o'
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("gd._", "gd._");
      // Undeclared exception!
//      try { 
        document0.selectFirst("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = Parser.parse("boS8Bc=lmryxUXj)g(", "boS8Bc=lmryxUXj)g(");
      // Undeclared exception!
//      try { 
        document0.select("boS8Bc=lmryxUXj)g(");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query 'boS8Bc=lmryxUXj)g(': unexpected token at '=lmryxUXj)g('
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("head", "+c+m=_3y");
      // Undeclared exception!
//      try { 
        document0.select("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("boS8Bc=lmryxUXj)g(", "boS8Bc=lmryxUXj)g(");
      // Undeclared exception!
//      try { 
        document0.removeClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = Document.createShell("tag name must not be empty.");
      CDataNode cDataNode0 = new CDataNode("E&N");
      document0.parentNode = (Node) cDataNode0;
      // Undeclared exception!
//      try { 
        document0.previousElementSibling();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Queue not long enough to consume sequence", "Queue not long enough to consume sequence");
      List<Node> list0 = Parser.parseFragment("Queue not long enough to consume sequence", (Element) document0, "G~");
      document0.childNodes = list0;
      // Undeclared exception!
//      try { 
        document0.prependText("Queue not long enough to consume sequence");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Collections$UnmodifiableList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("T3(", "T3(");
      document0.childNodes = null;
      // Undeclared exception!
//      try { 
        document0.prependText("33{[7IaA/]E[ N");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("z", "z");
      // Undeclared exception!
//      try { 
        document0.prependText((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Element element0 = new Element("?s>Jj8tfUqgIZ");
      Element element1 = element0.prependElement("?s>Jj8tfUqgIZ");
      Element element2 = element1.before((Node) element0);
      // Undeclared exception!
      element2.prependElement("!Y]J$w9");
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Document.createShell("6_CYJfn*)d>4>");
      document0.childNodes = null;
      // Undeclared exception!
//      try { 
        document0.prependElement("br");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("1]Q+a", "org.jsoup.nodes.Element$NodeList");
      // Undeclared exception!
//      try { 
        document0.prependElement("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("xK=E8XSKq2c+8^J,", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "xK=E8XSKq2c+8^J,", attributes0);
      // Undeclared exception!
//      try { 
        element0.prependChild((Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = new Document("T@/8");
      document0.parentNode = (Node) document0;
      // Undeclared exception!
      document0.prepend("1i-=godP");
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.parser.HtmlTreeBuilderState", "org.jsoup.parser.HtmlTreeBuilderState");
      // Undeclared exception!
//      try { 
        document0.prepend((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Lr", "Lr");
      StringBuffer stringBuffer0 = new StringBuffer();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(864);
      // Undeclared exception!
      document0.outerHtmlTail(stringBuffer0, 2500, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Charset charset0 = document0.charset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1770);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        document0.outerHtmlTail(charBuffer0, 1770, document_OutputSettings0);
//        fail("Expecting exception: BufferOverflowException");
      
//      } catch(BufferOverflowException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.CharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      MockFileWriter mockFileWriter0 = new MockFileWriter("html");
      // Undeclared exception!
//      try { 
        document0.outerHtmlTail(mockFileWriter0, 5, (Document.OutputSettings) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("`y9L", "");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
//      try { 
        document0.outerHtmlTail(pipedWriter0, (-1625949436), document_OutputSettings0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Pipe not connected
//         //
//         verifyException("java.io.PipedWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parse("K|", "K|");
      MockFile mockFile0 = new MockFile("xml");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(8226);
      // Undeclared exception!
      document0.outerHtmlHead(mockPrintWriter0, 8226, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Tag tag0 = Tag.valueOf("~n6t2-;7o-@P5");
      Element element0 = new Element(tag0, "#comment");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        element0.outerHtmlHead((Appendable) null, 4, document_OutputSettings0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("-?EX");
      Element element0 = new Element("t>+");
      element0.setParentNode(cDataNode0);
      // Undeclared exception!
//      try { 
        element0.nextElementSiblings();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("boS8Bc=lmryxUXj)g(", "boS8Bc=lmryxUXj)g(");
      // Undeclared exception!
//      try { 
        document0.lastElementSibling();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("K|", "K|");
      document0.parentNode = (Node) document0;
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag("K|");
      // Undeclared exception!
      document0.is((Evaluator) evaluator_Tag0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "0u+5XZnX8A(2g*r");
      // Undeclared exception!
//      try { 
        document0.is((Evaluator) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = new Document("");
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      // Undeclared exception!
//      try { 
        document0.is((Evaluator) evaluator_IsRoot0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(".", "`5~je");
      // Undeclared exception!
//      try { 
        document0.is("`5~je");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query '`5~je': unexpected token at '`5~je'
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("*", "*");
      document0.parentNode = (Node) document0;
      // Undeclared exception!
      document0.is("*");
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = new Document("z");
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document0;
      CDataNode cDataNode0 = new CDataNode("z");
      nodeArray0[6] = (Node) cDataNode0;
      nodeArray0[7] = (Node) document0;
      nodeArray0[8] = (Node) document0;
      // Undeclared exception!
//      try { 
        document0.insertChildren(0, nodeArray0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("TS(", "TS(");
      document0.parentNode = (Node) document0;
      // Undeclared exception!
      document0.html("WMd(f >J1afy_s-]{");
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("(6WV_A2", "(6WV_A2");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
//      try { 
        document0.html(pipedWriter0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Pipe not connected
//         //
//         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("*", "*");
      document0.parentNode = (Node) document0;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(3593);
      // Undeclared exception!
      document0.html(charArrayWriter0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = Document.createShell("T@/8");
      Charset charset0 = Charset.defaultCharset();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "quirks");
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      CharBuffer charBuffer1 = charset0.decode(byteBuffer0);
      // Undeclared exception!
//      try { 
        document0.html(charBuffer1);
//        fail("Expecting exception: BufferOverflowException");
      
//      } catch(BufferOverflowException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.Buffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.appendChild(document0);
      // Undeclared exception!
      element0.html();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Element element0 = new Element("VX6NKb+>x");
      // Undeclared exception!
//      try { 
        element0.hasClass((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("T3(", "T3(");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingText((Pattern) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.select.Evaluator$Matches", e);
//      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      Tag tag0 = Tag.valueOf("head", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "#root", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.getElementsMatchingText((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Tag tag0 = Tag.valueOf("(6WOVJ0A2");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "(6WOVJ0A2", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.getElementsMatchingText("(6WOVJ0A2");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Pattern syntax error: (6WOVJ0A2
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Comment comment0 = new Comment("z", "z");
      Document document0 = Parser.parseBodyFragmentRelaxed("z", "z");
      document0.setParentNode(comment0);
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingText("class");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("G#t,/+1my%t", "z");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingOwnText((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("aside", "aside");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingOwnText(")SP'?&#WW>P1U#");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Pattern syntax error: )SP'?&#WW>P1U#
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Element element0 = document0.head();
      element0.setSiblingIndex((-3861));
      // Undeclared exception!
//      try { 
        element0.getElementsMatchingOwnText("html");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("T@/W", "aside");
      document0.childNodes = null;
      // Undeclared exception!
//      try { 
        document0.getElementsContainingOwnText("T@/W");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = new Document("</");
      // Undeclared exception!
//      try { 
        document0.getElementsByTag((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = new Document(")N\"M");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueStarting("", "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("boS8Bc=lmryxUXj)g(", "boS8Bc=lmryxUXj)g(");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueNot((String) null, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("embed", "value");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueMatching("org.jsoup.helper.W3CDom", "mXu8{Mx>NM3k7");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Pattern syntax error: mXu8{Mx>NM3k7
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("", "");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueContaining("", "Pattern syntax error: ");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Document.createShell("Pattern syntax error: ");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValue("Pattern syntax error: ", (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("boS8Bc=lmryxUXj)g(", "boS8Bc=lmryxUXj)g(");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttribute("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
//      try { 
        document0.getElementById("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Tag tag0 = Tag.valueOf("value");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "value", attributes0);
      Element element0 = pseudoTextElement0.prependElement(":N\"PIl|f");
      element0.reparentChild(pseudoTextElement0);
      // Undeclared exception!
//      try { 
        pseudoTextElement0.cssSelector();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query '|n\"pil|f': unexpected token at '|n\"pil|f'
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Element element0 = new Element("meter");
      // Undeclared exception!
//      try { 
        element0.classNames((Set<String>) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Parser.parse(" ", " ");
      // Undeclared exception!
//      try { 
        document0.child(55);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 55, Size: 1
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Document document0 = new Document("T@/8");
      document0.parentNode = (Node) document0;
      // Undeclared exception!
      document0.before("T@/8");
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Document document1 = document0.clone();
      document0.appendChild(document1);
      document0.empty();
      // Undeclared exception!
//      try { 
        document1.before("org.jsoup.nodes.BooleanAttribute");
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 1, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = new Document("T@/W");
      document0.parentNode = (Node) document0;
      // Undeclared exception!
      document0.attr("T@/W", "textarea");
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
//      try { 
        document0.attr((String) null, "textarea");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.ParseSettings", e);
//      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = new Document("T@/W");
      document0.parentNode = (Node) document0;
      // Undeclared exception!
//      try { 
        document0.appendTo(document0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("C_Uu6(c", "s_U@kb9NI,M!b04p_");
      // Undeclared exception!
//      try { 
        document0.appendTo((Element) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = new Document("T@/8");
      // Undeclared exception!
//      try { 
        document0.appendText((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.appendElement("html");
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#x", "z");
      // Undeclared exception!
//      try { 
        document0.appendElement((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = new Document("T@/8");
      document0.parentNode = (Node) document0;
      // Undeclared exception!
//      try { 
        document0.appendChild(document0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Element element0 = new Element("org.jsoup.select.Evaluator$Class");
      // Undeclared exception!
//      try { 
        element0.appendChild((Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(6WOVJ0A2", "&QZ6)rqqr</~EA@");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.append("body");
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("1]Q+a", "org.jsoup.nodes.Element$NodeList");
      // Undeclared exception!
//      try { 
        document0.append((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("K|", "K|");
      document0.parentNode = (Node) document0;
      // Undeclared exception!
//      try { 
        document0.after((Node) document0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 1, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Document.createShell("TS(");
      document0.parentNode = (Node) document0;
      // Undeclared exception!
      document0.after(" P`c`,q$%)}*");
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("G#t,/+1my%t", "");
      // Undeclared exception!
//      try { 
        document0.addClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("T@/W");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = null;
//      try {
        element0 = new Element((Tag) null, "org.jsoup.parser.Token$1", attributes0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("]iQM27~e", parseSettings0);
      Element element0 = null;
//      try {
        element0 = new Element(tag0, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Element element0 = null;
//      try {
        element0 = new Element("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("", "");
      Element element0 = document0.toggleClass("");
      Set<String> set0 = element0.classNames();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("z", "z");
      Element element0 = document0.body();
      element0.data();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("boS8Bc=lmryxUXj)g(", "boS8Bc=lmryxUXj)g(");
      Document document1 = Parser.parse("boS8Bc=lmryxUXj)g(", "boS8Bc=lmryxUXj)g(");
      List<Node> list0 = Parser.parseFragment("ADI", (Element) document0, "spYyIqdSx", (ParseErrorList) null);
      document1.childNodes = list0;
      document1.hasText();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("", "");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = Document.createShell("TS(");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("body", "(6WOVJ0A2");
      Element element0 = document0.body();
      element0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Element element0 = document0.head();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Element element0 = document0.head();
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "cx8o97*Jf:xc*Kz}");
      document0.appendChild(document0);
      document0.cssSelector();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(WOVgA", "#root");
      Element element0 = document0.body();
      element0.append("(WOVgA");
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Parser.parse("boS8Bc=lmryxUXj)g(", "boS8Bc=lmryxUXj)g(");
      Node node0 = document0.removeAttr("boS8Bc=lmryxUXj)g(");
      node0.attributes();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("bS8B1=lmryxUXj)%T(");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("cx8o97*Jf:xc*Kz}");
      FormElement formElement0 = new FormElement(tag0, "bS8B1=lmryxUXj)%T(", attributes0);
      formElement0.className();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("", "");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("1]Q+a", "org.jsoup.nodes.Element$NodeList");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = new Document("T@/W");
      Pattern pattern0 = Pattern.compile("");
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("K|", "K|");
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag("K|");
      document0.is((Evaluator) evaluator_Tag0);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "cx8o97*Jf:xc*Kz}");
      Pattern pattern0 = Pattern.compile("1|iTi~v,0jrd\"", 1019);
      document0.getElementsByAttributeValueMatching("bS8B1=lmryxUXj)%T(", pattern0);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Tag tag0 = Tag.valueOf("th");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "th", attributes0);
      formElement0.select("th");
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = new Document("bS8B1=lmryxUXj)%T(");
      document0.id();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = Document.createShell("0jG,baO$QX<5");
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = Document.createShell("Children collection to be inserted must not be null.");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("center");
      Charset charset0 = document0.charset();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockFileOutputStream0, charset0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(false);
      document0.outerHtmlTail(outputStreamWriter0, 7, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("body");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("body");
      FormElement formElement0 = new FormElement(tag0, "kIgq=", attributes0);
      formElement0.toString();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "br");
      document0.prependElement("br");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("yh}w<w6");
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockPrintWriter0, 9);
      document0.html(bufferedWriter0);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Tag tag0 = Tag.valueOf("embed");
      CDataNode cDataNode0 = new CDataNode("s");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "embed", attributes0);
      formElement0.toString();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(6WOVJA2", "(6WOVJA2");
      // Undeclared exception!
//      try { 
        document0.html((MockPrintWriter) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Qr", "Qr");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "org.jsoup.nodes.Element$2");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      document0.outerHtmlHead(stringBuilder0, (-270), document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Tag tag0 = Tag.valueOf("textarea");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, ":nth-child(%d)", attributes0);
      formElement0.val("{HK@iq?+Z$`");
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Tag tag0 = Tag.valueOf("textarea");
      CDataNode cDataNode0 = new CDataNode("R9[ {41!?+x");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "R9[ {41!?+x", attributes0);
      formElement0.val();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = new Document("bS8B1=lmryxUXj)%T(");
      document0.toggleClass("bS8B1=lmryxUXj)%T(");
      document0.toggleClass("org.jsoup.nodes.Element$2");
      document0.hasClass("org.jsoup.nodes.Element$2");
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      String string0 = Node.EmptyString;
      Document document0 = Parser.parseBodyFragmentRelaxed(string0, "");
      document0.toggleClass(string0);
      Element element0 = document0.toggleClass("org.jsoup.parser.Token$EndTag");
      document0.addClass("");
      element0.hasClass("org.jsoup.parser.Token$EndTag");
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      String string0 = Node.EmptyString;
      Document document0 = Parser.parseBodyFragmentRelaxed(string0, "");
      Element element0 = document0.toggleClass(string0);
      document0.addClass("");
      element0.hasClass("Tag name must not bemempty.");
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Insert position out of bounds.", ".");
      Element element0 = document0.toggleClass(".");
      document0.addClass("Insert position out of bounds.");
      element0.hasClass("Insert position out of bounds.");
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Document document0 = Parser.parse("", "</");
      Element element0 = document0.toggleClass("");
      element0.hasClass("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("p", "p");
      document0.addClass("p");
      document0.hasClass("mg\"Q~f#\"q");
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Yy/};<W", "org.jsoup.select.CombiningEvaluator$And");
      Element element0 = document0.toggleClass("fd9p]#u1dt");
      element0.hasClass("org.jsoup.select.CombiningEvaluator$And");
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("mDV_A", "mDV_A");
      document0.hasClass("mDV_A");
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("s");
      Document document0 = Parser.parseBodyFragmentRelaxed("|dw", "s");
      Element element0 = document0.appendChild(cDataNode0);
      element0.data();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(6WOVJA2", "(6WOVJA2");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("*", "*");
      document0.parentNode = (Node) document0;
      Element.preserveWhitespace(document0);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("html", false);
      Element.preserveWhitespace(xmlDeclaration0);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.prependElement("br");
      document0.getElementsMatchingOwnText("br");
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("s");
      Document document0 = Parser.parseBodyFragmentRelaxed("|dw", "s");
      document0.appendChild(cDataNode0);
      document0.getElementsMatchingOwnText("s");
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = new Document("Qr");
      Element element0 = document0.prependElement("textarea");
      Document document1 = Parser.parseBodyFragment("textarea", ",t%CO");
      element0.appendChild(document1);
      document0.getElementsMatchingOwnText("textarea");
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Comment comment0 = new Comment("z", "z");
      Document document0 = Parser.parseBodyFragmentRelaxed(",AkAN!H2U?nN%-m7(7", ",AkAN!H2U?nN%-m7(7");
      document0.appendChild(comment0);
      document0.getElementsMatchingOwnText("u8g:1kTP");
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("8RKJv4inT", "8RKJv4inT");
      Element element0 = document0.append("8RKJv4inT");
      element0.text();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Document document1 = document0.clone();
      document0.appendChild(document1);
      document0.text();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("br", "br");
      document0.appendElement("br");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Comment comment0 = new Comment((String) null, (String) null);
      Document document0 = Parser.parseBodyFragmentRelaxed("embed", "<2BP:a#%UzT*+");
      document0.appendChild(comment0);
      document0.text();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = new Document("aside");
      document0.getElementById("Insert position out of bounds.");
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = Document.createShell("Qr");
      Element element0 = document0.prependElement("Qr");
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("(6WOVJ0A2", "(6WOVJ0A2");
      Element element0 = document0.prependElement("(6WOVJ0A2");
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Qr", "Qr");
      Element element0 = document0.prependElement("Qr");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Element element0 = document0.head();
      element0.appendChild(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Document.createShell("0jG,baO$QX<5");
      Element element0 = document0.body();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = new Document("Attributes incorrectly present on end tag");
      document0.parentNode = (Node) document0;
      document0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "cx8o97*Jf:xc*Kz}");
      Element element0 = document0.head();
      Elements elements0 = element0.nextElementSiblings();
      assertEquals("cx8o97*Jf:xc*Kz}", element0.baseUri());
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("G#t,/+1my%t", "G#t,/+1my%t");
      document0.nextElementSibling();
      assertEquals("G#t,/+1my%t", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Document document0 = new Document("T@/W");
      document0.parentNode = (Node) document0;
      document0.nextElementSibling();
      assertEquals("T@/W", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Yy/};<W", "org.jsoup.select.CombiningEvaluator$And");
      document0.siblingElements();
      assertEquals("org.jsoup.select.CombiningEvaluator$And", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(6WOVJ0A2", "&QZ6)rqqr</~EA@");
      Element element0 = document0.head();
      Elements elements0 = element0.siblingElements();
      assertEquals("&QZ6)rqqr</~EA@", element0.baseUri());
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Parser.parse(" ", "Attributes incorrectly present on end tag");
      Element element0 = document0.head();
      element0.after("Attributes incorrectly present on end tag");
      String string0 = element0.cssSelector();
      assertEquals("html > head:nth-child(1)", string0);
      assertEquals("Attributes incorrectly present on end tag", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = Parser.parse("", "</");
      document0.toggleClass("");
      document0.cssSelector();
      assertEquals("</", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("Qr", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("Insert position out of bounds.");
      Attributes attributes0 = cDataNode0.attributes();
      Attribute attribute0 = Attribute.createFromEncoded("id", "Qr");
      Attributes attributes1 = attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, "Qr", attributes1);
      String string0 = formElement0.cssSelector();
      assertEquals("#Qr", string0);
      assertEquals("Qr", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Node[] nodeArray0 = new Node[8];
      // Undeclared exception!
//      try { 
        document0.insertChildren(32, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Parser.parse("~w_g|`Z?hw=HJJFj", "(6WOVJ0A2");
      Node[] nodeArray0 = new Node[2];
      // Undeclared exception!
//      try { 
        document0.insertChildren((-1034), nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":N\"PIl|f", ":N\"PIl|f");
      Elements elements0 = document0.getElementsByAttributeValue("#root", "#root");
      // Undeclared exception!
//      try { 
        document0.insertChildren(1162, (Collection<? extends Node>) elements0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(6WOVJ0A2", "&QZ6)rqqr</~EA@");
      LinkedList<Document> linkedList0 = new LinkedList<Document>();
      // Undeclared exception!
//      try { 
        document0.insertChildren((-6049), (Collection<? extends Node>) linkedList0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("nD*Y/B", "nD*Y/B");
      LinkedList<DocumentType> linkedList0 = new LinkedList<DocumentType>();
      Element element0 = document0.insertChildren((-1), (Collection<? extends Node>) linkedList0);
      assertEquals("nD*Y/B", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("G#t,/+1my%t", "");
      List<Node> list0 = document0.siblingNodes();
      Element element0 = document0.insertChildren(0, (Collection<? extends Node>) list0);
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("aside", "aside");
      List<DataNode> list0 = document0.dataNodes();
      assertEquals("aside", document0.baseUri());
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      Element element0 = document0.append("org.jsoup.nodes.Element$NodeList");
      element0.textNodes();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("z", "z");
      Element element0 = document0.body();
      assertNotNull(element0);
      
      Elements elements0 = element0.children();
      assertEquals("z", element0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = new Document("T@/8");
      Elements elements0 = document0.getElementsByIndexGreaterThan((-1625949436));
      assertEquals(1, elements0.size());
      assertEquals("T@/8", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Qr", "Qr");
      document0.selectFirst("Qr");
      assertEquals(1, document0.childNodeSize());
      assertEquals("Qr", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = new Document("</");
      document0.getAllElements();
      assertEquals("</", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("boS8Bc=lmryxUXj)g(", "boS8Bc=lmryxUXj)g(");
      Element element0 = document0.removeClass("org.jsoup.parser.ParseError");
      assertEquals("boS8Bc=lmryxUXj)g(", element0.baseUri());
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = new Document("T@/8");
      // Undeclared exception!
//      try { 
        document0.before("T@/8");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("nD*Y/B", "nD*Y/B");
      document0.getElementsByAttribute("nD*Y/B");
      assertEquals("nD*Y/B", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Element element0 = new Element("org.jsoup.select.Evaluator$Class");
      Elements elements0 = element0.getElementsByAttributeValueNot("body", "h");
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("defer", "alside");
      Element element0 = document0.clone();
      assertNotSame(element0, document0);
      assertEquals("alside", element0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("", "");
      document0.doSetBaseUri("OZ}=5Qo`/sS|gk%");
      assertEquals("OZ}=5Qo`/sS|gk%", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("K|", "K|");
      // Undeclared exception!
//      try { 
        document0.after((Node) document0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("boS8Bc=lmryxUXj)g(", "boS8Bc=lmryxUXj)g(");
      document0.getElementsByAttributeValueContaining("boS8Bc=lmryxUXj)g(", "textarea");
      assertEquals(1, document0.childNodeSize());
      assertEquals("boS8Bc=lmryxUXj)g(", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = new Document("T@/W");
      Elements elements0 = document0.getElementsContainingText("/>");
      assertEquals("T@/W", document0.baseUri());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Parser.parse("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      // Undeclared exception!
//      try { 
        document0.getElementsByClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(".", ".");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueEnding(".", (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("*", "*");
      document0.is("*");
      assertEquals(1, document0.childNodeSize());
      assertEquals("*", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("|dw", "s");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueMatching("truespeed", (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Document document0 = new Document("T@/8");
      // Undeclared exception!
//      try { 
        document0.wrap("T@/8");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Element element0 = new Element("org.jsoup.select.Evaluator$Class");
      Elements elements0 = element0.getElementsByIndexEquals((-5043));
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeStarting("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("TS(", "TS(");
      Element element0 = document0.prependElement("TS(");
      element0.parent();
      assertEquals(2, document0.childNodeSize());
      assertEquals("TS(", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Children collection to be inserted must not be null.", "o)");
      Elements elements0 = document0.getElementsByIndexLessThan((-3554));
      assertEquals("o)", document0.baseUri());
      assertEquals(0, elements0.size());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Document document0 = Parser.parse(" ", "Attributes incorrectly present on end tag");
      // Undeclared exception!
//      try { 
        document0.after("Attributes incorrectly present on end tag");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingOwnText((Pattern) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
//      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      document0.prepend("8~R8m");
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("mDV_A", "mDV_A");
      // Undeclared exception!
//      try { 
        document0.attr((String) null, false);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = new Document("Y2H}<W6");
      // Undeclared exception!
//      try { 
        document0.html((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("z", "z");
      String string0 = document0.wholeText();
      assertEquals("z", document0.baseUri());
      assertEquals("z", string0);
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Document document0 = new Document("");
      // Undeclared exception!
//      try { 
        document0.before((Node) document0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("T@/W", "aside");
      Elements elements0 = document0.getElementsContainingOwnText("T@/W");
      assertEquals(1, elements0.size());
      assertEquals("aside", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Tag tag0 = Tag.valueOf("body");
      Element element0 = new Element(tag0, "s6");
      element0.dataset();
      assertEquals("s6", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Document document0 = Document.createShell("br");
      // Undeclared exception!
//      try { 
        document0.child((-3371));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = new Document("Attributes incorrectly present on end tag");
      document0.previousElementSiblings();
      assertEquals("Attributes incorrectly present on end tag", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Queue not long enough to consume sequence", "Queue not long enough to consume sequence");
      document0.prependText("Queue not long enough to consume sequence");
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("8RKJv4inT", "8RKJv4inT");
      Elements elements0 = document0.getElementsMatchingText("8RKJv4inT");
      assertEquals("8RKJv4inT", document0.baseUri());
      assertEquals(3, elements0.size());
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bS8B1=lmryxUXj)%T(", "bS8B1=lmryxUXj)%T(");
      document0.appendText("bS8B1=lmryxUXj)%T(");
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("z", "z");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Element element0 = new Element("t>+");
      Elements elements0 = element0.nextElementSiblings();
      assertTrue(elements0.isEmpty());
  }
}
