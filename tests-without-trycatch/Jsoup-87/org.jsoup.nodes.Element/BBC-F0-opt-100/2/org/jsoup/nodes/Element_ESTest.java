/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 23:12:14 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parse("!?/2')]", "!?/2')]");
      document0.prependText("F#l$wVef_=!D");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "LTzDO");
      Element element0 = document0.toggleClass("LTzDO");
      element0.toggleClass("4y3/MSZ^)BRN ~/");
      document0.hasClass("4y3/MSZ^)BRN ~/");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "k)wh0w[IH@!");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueMatching("sortable", "k)wh0w[IH@!");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Pattern syntax error: k)wh0w[IH@!
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O)j1Wx", "O)j1Wx");
      document0.appendElement("bp");
      Element element0 = document0.appendElement("org.jsoup.nodes.Element$NodeList");
      element0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Tag tag0 = Tag.valueOf("anX=5xs");
      Element element0 = new Element(tag0, "anX=5xs");
      StringWriter stringWriter0 = new StringWriter(864);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      element0.outerHtmlTail(stringWriter0, 864, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Document.createShell(";");
      File file0 = MockFile.createTempFile("defer", "defer");
      MockFileWriter mockFileWriter0 = new MockFileWriter(file0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlHead(mockPrintWriter0, 46, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Parser.parse("!?/2')]", "!?/2')]");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = Document.createShell("Z=VT}STl");
      document0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      Element element0 = document0.appendElement("bp");
      element0.wrap("Ls:`-28{jua");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("~Zj0W@x", "~Zj0W@x");
      Element element0 = document0.head();
      element0.wrap("!qIGd5RJM;B)v");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0W\"x", "O~j0W\"x");
      Element element0 = document0.body();
      element0.wrap("org.jsoup.select.Selector$SelectorParseException");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = Parser.parse("!?/2')]", "!?/2')]");
      document0.wholeText();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("~j0WF@x", "~j0WF@x");
      document0.siblingIndex = 20;
      document0.val("~j0WF@x");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Tag tag0 = Tag.valueOf("O~j0Wx");
      Element element0 = new Element(tag0, "O~j0Wx");
      element0.siblingIndex = (-1);
      element0.val((String) null);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      Element element0 = document0.head();
      element0.val("4br_vD3E$x)q^g");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "LTzDO");
      Element element0 = document0.toggleClass("LTzDO");
      element0.siblingIndex = 2773;
      document0.toggleClass("4y3/MSZ^)BRN ~/");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "LTzDO");
      Element element0 = document0.toggleClass("LTzDO");
      element0.siblingIndex = (-2067947214);
      element0.toggleClass("4y3/MSZ^)BRN ~/");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "LTzDO");
      Element element0 = document0.tagName("k)wh0w[IH@!");
      element0.parentNode = (Node) document0;
      element0.toggleClass("4y3/MSZ^)BRN ~/");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = new Document("+&`KHf8wohkqTU-W");
      document0.toggleClass("html");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O)j1Wx", "O)j1Wx");
      Element element0 = document0.appendElement("bp");
      element0.text("O)j1Wx");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      Element element0 = document0.head();
      element0.text("html > head");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      document0.text("html > head");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = new Document("%/R>I@'j`@6ZD|");
      document0.setSiblingIndex((-369402350));
      document0.tagName("%/R>I@'j`@6ZD|");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("math", "+&`KHf8wohkqTU-W");
      document0.tagName("math");
      document0.toggleClass("html");
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      element0.tagName("PXZ`Z5}*W5]>I'p(ep");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("]n|P:Y", parseSettings0);
      Element element0 = new Element(tag0, ")Ub>Znv.>");
      element0.tagName();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Parser.parse(";", ";");
      Element element0 = document0.head();
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Parser.parse("u2Bty6PNgWg|-", "u2Bty6PNgWg|-");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = new Document("style");
      Document document1 = document0.normalise();
      Element element0 = document1.head();
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Parser.parse("!?/2')]", "!?/2')]");
      document0.selectFirst("Y");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("</", "</");
      document0.selectFirst("head");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O)j1Wx", "O)j1Wx");
      document0.appendElement("bp");
      document0.selectFirst("bp");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Element element0 = new Element("gUY");
      element0.selectFirst("gUY");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = Document.createShell("?");
      Element element0 = document0.appendElement("br");
      element0.select("br");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = new Document("%/R>I@'j`@6ZD|");
      document0.setSiblingIndex((-369402350));
      document0.removeClass("%/R>I@'j`@6ZD|");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = Parser.parse("UMGEsgd.wV5lJ-", "]]>");
      Element element0 = document0.body();
      element0.removeClass("Rm");
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Document.createShell("%/R>I@'j@6ZD|");
      Element element0 = document0.prependChild(document0);
      element0.removeClass("SKIP_ENTIRELY");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Document.createShell(":contains");
      Element element0 = document0.body();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.select.StructuralEvaluator$Parent", "/k");
      Element element0 = document0.createElement("textarea");
      Element.preserveWhitespace(element0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      document0.prependChild(document0);
      document0.prependText("org.jsoup.select.Evaluator$IsFirstChild");
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = Document.createShell("B}WS's~6:! szieYc");
      Element element0 = document0.head();
      element0.prependText("k)wh0w[IH@!");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Element element0 = new Element("z=vt}stl");
      element0.prependElement("org.jsoup.nodes.Element");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O)j1Wx", "O)j1Wx");
      Element element0 = document0.appendElement("bp");
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Document.createShell("Z=VT}STl");
      Element element0 = document0.head();
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Element element0 = new Element("z=vt}stl");
      element0.siblingIndex = (-416);
      element0.prepend("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.body();
      element0.prepend("");
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.select.Evaluator$IsOnlyOfType", "");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      Element element0 = document0.head();
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Parser.parse("UMGEsgd.wV5lJ-", "]]>");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parse("</", "</");
      document0.appendTo(document0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator");
      Element element0 = document0.head();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.prepend("anX=5xs");
      element0.ownText();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("$=%)0xpx%E#(q", "$=%)0xpx%E#(q");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      Document document1 = document0.normalise();
      document0.prependChild(document1);
      document1.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      Element element0 = document0.head();
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "LTzDO");
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType((-1170), (-171));
      document0.is((Evaluator) evaluator_IsNthLastOfType0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      Element element0 = document0.appendElement("bp");
      element0.is("bp");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = Parser.parse("]]>", "]]>");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Document.createShell("?");
      document0.setSiblingIndex(11);
      document0.html("?");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = Document.createShell("</");
      document0.html("");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("~j0W@x", "~j0W@x");
      Element element0 = document0.head();
      element0.html();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      document0.hasAttr("");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("3x@/8!buv%SDo", "");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = Parser.parse("-SQb;@l/rY#eA!,3B", "-SQb;@l/rY#eA!,3B");
      Pattern pattern0 = Pattern.compile("", 677);
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = new Document("-SQb;@l/rY#eA!,3B");
      Pattern pattern0 = Pattern.compile("body");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = Document.createShell(":contains");
      Pattern pattern0 = Pattern.compile("");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = new Document(" ");
      document0.getElementsMatchingOwnText("InColumnGroup");
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = Parser.parse("UMGEsgd.wV5lJ-", "]]>");
      document0.getElementsContainingText("UMGEsgd.wV5lJ-");
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O)j1Wx", "O)j1Wx");
      document0.getElementsContainingOwnText("O)j1Wx");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      document0.getElementsByTag("org.jsoup.select.Evaluator$IsFirstChild");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      Element element0 = document0.createElement("$^+(GqO*=|");
      element0.getElementsByTag("$^+(GqO*=|");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.getElementsByIndexLessThan((-1433506051));
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = Parser.parse("u2Bty6PNgWg|-", "u2Bty6PNgWg|-");
      document0.getElementsByIndexGreaterThan(0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      document0.getElementsByIndexEquals(0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      document0.getElementsByAttributeValueNot("@[Xk!j@^pG0[L hI", " ");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Document document0 = Document.createShell("@[Xk!j@^pG0[L hI");
      document0.getElementsByAttributeValueNot("@[Xk!j@^pG0[L hI", "@[Xk!j@^pG0[L hI");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("0K|VQQ8_a<0", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("0K|VQQ8_a<0");
      Attributes attributes0 = cDataNode0.attributes();
      Attribute attribute0 = new Attribute("]`\f.36dj2(TYMwd9", "jn.Gv,<", attributes0);
      attributes0.put(attribute0);
      Element element0 = new Element(tag0, "/M1JD^.>2,", attributes0);
      element0.getElementsByAttributeValueContaining("]`\f.36dj2(TYMwd9", ".");
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      document0.getElementsByAttributeValue("html > head", "dToYiub#x?,gzWNmR");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Tag tag0 = Tag.valueOf("I*1");
      Element element0 = new Element(tag0, "?T>WTUrv_T`");
      element0.attr("I*1", "org.jsoup.nodes.Element$2");
      element0.getElementsByAttributeStarting("I*1");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parse("]]>", "]]>");
      document0.attr("]]>", true);
      document0.getElementsByAttribute("]]>");
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.select.Evaluator$IsOnlyOfType", "");
      Element element0 = document0.head();
      element0.setSiblingIndex(1550);
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      Element element0 = document0.head();
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.body();
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      document0.prependChild(document0);
      document0.empty();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      Element element0 = document0.appendElement("3");
      element0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Document document0 = new Document("~j0W@x");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.body();
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator");
      Element element0 = document0.body();
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = new Document("style");
      Document document1 = document0.normalise();
      Element element0 = document1.head();
      Locale locale0 = Locale.CHINA;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Parser.parse("</", "</");
      document0.appendTo(document0);
      Locale locale0 = Locale.FRENCH;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      Locale locale0 = Locale.FRENCH;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "LTzDO");
      Element element0 = document0.toggleClass("LTzDO");
      element0.className();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = Parser.parse("style", "style");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Document document0 = new Document("]q72*MEW3wH{ck uY");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Parser.parse("]]>", "]]>");
      Document document1 = (Document)document0.prependChild(document0);
      document1.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      Element element0 = document0.head();
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("=5xSr4yJL", "%/r>x@'@6zj|");
      Element element0 = document0.head();
      element0.before("");
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      Document document1 = (Document)document0.clone();
      document0.reparentChild(document1);
      document1.before("2{v\"pcT");
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = new Document("%r&`MEubk7O'Fi-,Ed");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = Parser.parse("!?/2')]", "!?/2')]");
      Element element0 = document0.attr("org.jsoup.nodes.Node$OuterHtmlVisitor", true);
      element0.attributes();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = new Document("style");
      Document document1 = document0.normalise();
      Element element0 = document1.head();
      Element element1 = element0.nextElementSibling();
      element1.attr("]q72*mew3wh{ck uy", false);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Element element0 = new Element("z=vt}stl");
      element0.siblingIndex = (-416);
      element0.attr("P2P@}", "ul");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      Element element0 = document0.head();
      element0.attr("", "4br_vD3E$x)q^g");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("~j0Wx", "~j0Wx");
      Element element0 = document0.appendElement("~j0Wx");
      element0.attr("Cbf@_$o", "Cbf@_$o");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      Element element0 = new Element("O~j0Wx");
      document0.appendTo(element0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      Element element0 = document0.head();
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Parser.parse("</", "</");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      Element element0 = document0.insertChildren(0, nodeArray0);
      element0.appendText("</");
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator");
      Element element0 = document0.head();
      element0.appendText("html > head");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = new Document(" ");
      Element element0 = document0.appendElement("br");
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "LTzDO");
      document0.appendElement("html");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("~j0W@x", "~j0W@x");
      Element element0 = document0.head();
      TextNode textNode0 = TextNode.createFromEncoded("~j0W@x");
      element0.appendChild(textNode0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("~j0W@x", "~j0W@x");
      TextNode textNode0 = TextNode.createFromEncoded("~j0W@x");
      document0.appendChild(textNode0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Element element0 = document0.body();
      element0.append("hy9z5+'`U");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator");
      Element element0 = document0.head();
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Document.createShell("QaH0]>mS'PZWrR1");
      Element element0 = document0.prependChild(document0);
      document0.after((Node) element0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      Element element0 = document0.appendElement("3");
      element0.after("3");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      Element element0 = document0.head();
      element0.after("4br_vD3E$x)q^g");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O)j1Wx", "O)j1Wx");
      Element element0 = document0.appendElement("BaseURI must not be null");
      element0.addClass("O)j1Wx");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator");
      Element element0 = document0.head();
      element0.addClass("java.lang.string@0000000081 l?alcvnoerjn ~/");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O)j1Wx", "O)j1Wx");
      Element element0 = document0.doClone(document0);
      element0.addClass("O)j1Wx");
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      document0.addClass("org.jsoup.select.Evaluator$IsFirstChild");
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("^V5W`Q5qi;.$#,Q", "^V5W`Q5qi;.$#,Q");
      document0.prependChild(document0);
      // Undeclared exception!
      document0.wrap("\"RMHn]'HUI/");
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Tag tag0 = Tag.valueOf("]q72*MEW3wH{ck uY");
      Element element0 = new Element(tag0, "oW");
      // Undeclared exception!
//      try { 
        element0.wrap("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("s+", "s+");
      TextNode textNode0 = TextNode.createFromEncoded("value", "java.lang.string@0000000038");
      document0.parentNode = (Node) textNode0;
      // Undeclared exception!
//      try { 
        document0.wrap("org.jsoup.nodes.Element$NodeList");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Document document0 = new Document("style");
      Document document1 = document0.normalise();
      Element element0 = document1.head();
      element0.replaceWith(document1);
      // Undeclared exception!
      document1.val("style");
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Parser.parse("<S>*E'P],Wl;M+G*<qH", "k)wh0w[IH@!");
      // Undeclared exception!
//      try { 
        document0.toggleClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = new Document("abbr");
      // Undeclared exception!
//      try { 
        document0.text("O@x");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Document", e);
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "k)wh0w[IH@!");
      // Undeclared exception!
//      try { 
        document0.text((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "k)wh0w[IH@!");
      List<Node> list0 = document0.childNodesCopy();
      document0.childNodes = list0;
      // Undeclared exception!
//      try { 
        document0.text();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.select.NodeTraversor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = Parser.parse("UMGEsgd.wV5lJ-", "]]>");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.tagName("E}Z=Zi~=");
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "");
      // Undeclared exception!
//      try { 
        document0.tagName("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Tag name must not be empty.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator");
      // Undeclared exception!
//      try { 
        document0.selectFirst("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
//      try { 
        document0.select(";|>U:'");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query ';|>U:'': unexpected token at ';|>U:''
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.select.Evaluator$IsOnlyOfType", "");
      // Undeclared exception!
//      try { 
        document0.select("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("~", "             ");
      // Undeclared exception!
//      try { 
        document0.removeClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0W\"x", "O~j0W\"x");
      CDataNode cDataNode0 = new CDataNode("org.jsoup.nodes.Element$1");
      document0.parentNode = (Node) cDataNode0;
      Document document1 = Document.createShell("org.jsoup.nodes.Element$1");
      Element element0 = document0.prependChild(document1);
      // Undeclared exception!
//      try { 
        Element.preserveWhitespace(element0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parse("abbr", "umhesg].wv5lj-");
      // Undeclared exception!
//      try { 
        document0.prependText((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      document0.prependChild(document0);
      // Undeclared exception!
      document0.prependElement("org.jsoup.select.Evaluator$IsFirstChild");
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "id");
      // Undeclared exception!
//      try { 
        document0.prependElement("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = Document.createShell("%/R>I@'j@6ZD|");
      List<Node> list0 = Parser.parseFragment("%/R>I@'j@6ZD|", (Element) document0, "[^-a-zA-Z0-9_:.]");
      document0.childNodes = list0;
      // Undeclared exception!
//      try { 
        document0.prependChild(document0);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Collections$UnmodifiableList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      CDataNode cDataNode0 = new CDataNode("+9j7A]B-");
      Node node0 = cDataNode0.doClone(document0);
      // Undeclared exception!
//      try { 
        document0.prependChild(node0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      // Undeclared exception!
//      try { 
        document0.prependChild((Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("~j0WF@x", "x/u");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.prepend("class");
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("Tag name must not be empty.", "h$'pjoZ>#bXU");
      Element element0 = document0.toggleClass("TagOpen");
      element0.childNodes = null;
      // Undeclared exception!
//      try { 
        document0.prepend("textarea");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
//      try { 
        document0.prepend((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = Parser.parse("]]>", "]]>");
      // Undeclared exception!
//      try { 
        document0.outerHtmlTail((Appendable) null, 345, (Document.OutputSettings) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("head", "head");
      Charset charset0 = document0.charset();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      // Undeclared exception!
//      try { 
        document0.outerHtmlHead(charBuffer0, 32, (Document.OutputSettings) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "k)wh0w[IH@!");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "k)wh0w[IH@!");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        document0.outerHtmlHead(stringBuilder0, (-4378), document_OutputSettings0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // width must be > 0
//         //
//         verifyException("org.jsoup.internal.StringUtil", e);
//      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      // Undeclared exception!
//      try { 
        document0.lastElementSibling();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = Parser.parse("Q_WPPG[", "Q_WPPG[");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      document0.insertChildren(0, nodeArray0);
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType((-1010136971), (-171));
      // Undeclared exception!
      document0.is((Evaluator) evaluator_IsNthLastOfType0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Tag tag0 = Tag.valueOf("d=vt}sfl");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "d=vt}sfl", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.is((Evaluator) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Parser.parse("?", "?");
      // Undeclared exception!
//      try { 
        document0.is("?");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query '?': unexpected token at '?'
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = Document.createShell("%/R>I@'j@6ZD|");
      Element element0 = document0.prependChild(document0);
      // Undeclared exception!
      element0.is("SKIP_ENTIRELY");
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = new Document("~j0W@x");
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      // Undeclared exception!
//      try { 
        document0.insertChildren(0, nodeArray0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      Element element0 = document0.prependChild(document0);
      LinkedList<Document> linkedList0 = new LinkedList<Document>();
      linkedList0.add((Document) element0);
      // Undeclared exception!
//      try { 
        document0.insertChildren(1, (Collection<? extends Node>) linkedList0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 1, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "LTzDO");
      Element element0 = document0.tagName("k)wh0w[IH@!");
      element0.parentNode = (Node) document0;
      // Undeclared exception!
      document0.html("l?ALcVNoeRJN");
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
//      try { 
        document0.html(pipedWriter0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Pipe not connected
//         //
//         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      DataNode dataNode0 = new DataNode("O~j0Wx");
      nodeArray0[3] = (Node) dataNode0;
      document0.addChildren(nodeArray0);
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      document0.html(pipedWriter0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
//      try { 
        document0.html((PipedWriter) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      document0.prependChild(document0);
      // Undeclared exception!
      document0.html();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#root", "F#l$wVef_=!D");
      // Undeclared exception!
//      try { 
        document0.hasClass((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingText((Pattern) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.select.Evaluator$Matches", e);
//      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "LTzDO");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingText((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Parser.parse("Q_WPPG[", "Q_WPPG[");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingText("Q_WPPG[");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Pattern syntax error: Q_WPPG[
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = new Document("~j0W@x");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingOwnText((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = new Document("~j0W@x");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingOwnText("&{-J& X2^JR");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Pattern syntax error: &{-J& X2^JR
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      Element element0 = document0.appendElement("bp");
      element0.childNodes = null;
      // Undeclared exception!
//      try { 
        document0.getElementsContainingOwnText("AutJ`.0q_Wqi#h$D/$");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#mx~l?#h>^rsb,wN zQ", "#mx~l?#h>^rsb,wN zQ");
      Element element0 = document0.appendElement("s+");
      element0.siblingIndex = (-1672);
      // Undeclared exception!
//      try { 
        document0.getElementsContainingOwnText("#mx~l?#h>^rsb,wN zQ");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = new Document("-SQb;@l/rY#eA!,3B");
      // Undeclared exception!
//      try { 
        document0.getElementsByTag("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Document.createShell("head");
      // Undeclared exception!
//      try { 
        document0.getElementsByClass("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parse("LTzDO", "org.jsoup.select.Evaluator$IsFirstChild");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueStarting("", "$xPAVvMrD]%e|/");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Document.createShell("\"w`E\"9Tvb4x?3 v");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueMatching(" ", (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueEnding((String) null, "body");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueContaining("p`", "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("~j0WF@x", "~j0WF@x");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeStarting((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "             ");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttribute("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Element element0 = new Element("br");
      // Undeclared exception!
//      try { 
        element0.getElementById("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
//      try { 
        document0.firstElementSibling();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      Element element0 = document0.head();
      element0.setSiblingIndex((-1111));
      // Undeclared exception!
//      try { 
        element0.cssSelector();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parse("!?/2')]", "!?/2')]");
      // Undeclared exception!
//      try { 
        document0.classNames((Set<String>) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator");
      // Undeclared exception!
//      try { 
        document0.child(6);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 6, Size: 1
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.before("org.jsoup.nodes.Element$NodeList");
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = Parser.parse("Q_WPPG[", "Q_WPPG[");
      // Undeclared exception!
//      try { 
        document0.attr((String) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Parser.parse("Q_WPPG[", "Q_WPPG[");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      document0.insertChildren(0, nodeArray0);
      // Undeclared exception!
      document0.attr("7lim5T3Hn%\"2_k", "");
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator");
      // Undeclared exception!
//      try { 
        document0.attr((String) null, "br");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.ParseSettings", e);
//      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parse("textarea", "textarea");
      // Undeclared exception!
//      try { 
        document0.appendTo((Element) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.appendElement("u_A?*Y4RJVe_x-1e:");
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = Parser.parse("!?/2')]", "!?/2')]");
      // Undeclared exception!
//      try { 
        document0.appendElement("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = new Document("~j0W@x");
      document0.reparentChild(document0);
      // Undeclared exception!
//      try { 
        document0.appendChild(document0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      // Undeclared exception!
//      try { 
        document0.appendChild((Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("4x#8=4lx(Zag", "org.jsoup.select.Evaluator");
      List<Node> list0 = document0.childNodes();
      document0.childNodes = list0;
      // Undeclared exception!
//      try { 
        document0.append("org.jsoup.select.Evaluator");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Collections$UnmodifiableCollection", e);
//      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      // Undeclared exception!
//      try { 
        document0.append((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      Element element0 = document0.prependChild(document0);
      // Undeclared exception!
//      try { 
        element0.after((Node) document0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 1, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      Element element0 = document0.prependChild(document0);
      // Undeclared exception!
      element0.after("org.jsoup.select.Evaluator$IsFirstChild");
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("4br_vD3E$x)q^g", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, ".Asgg!a", (Attributes) null);
      // Undeclared exception!
//      try { 
        formElement0.addClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Element element0 = null;
//      try {
        element0 = new Element((Tag) null, "]q72*MEW3wH{ck uY", attributes0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Tag tag0 = Tag.valueOf(", currentElement=");
      Element element0 = null;
//      try {
        element0 = new Element(tag0, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Element element0 = null;
//      try {
        element0 = new Element("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("org.jsoup.parser.Token");
      Attributes attributes0 = cDataNode0.attributes();
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf("org.jsoup.select.Evaluator$IsOnlyOfType", parseSettings0);
      Element element0 = new Element(tag0, "html", attributes0);
      PipedWriter pipedWriter0 = new PipedWriter();
      element0.html(pipedWriter0);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = Parser.parse("-SQb;@l/rY#eA!,3B", "html");
      document0.toggleClass("-SQb;@l/rY#eA!,3B");
      Set<String> set0 = document0.classNames();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(" />", ";cm0ahaPt+<~cn[XuIA");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Parser.parse("UMGEsgd.wV5lJ-", "]]>");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Document document0 = Document.createShell("head");
      Element element0 = document0.appendText("head");
      element0.hasText();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Document document0 = Parser.parse("Q_WPPG[", "Q_WPPG[");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      Element element0 = document0.appendElement("f");
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Document.createShell("4br_vD3E$x)q^g");
      Elements elements0 = document0.getAllElements();
      document0.insertChildren(0, (Collection<? extends Node>) elements0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      Element element0 = document0.prependChild(document0);
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      Element element0 = document0.head();
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      Element element0 = document0.prependChild(document0);
      element0.cssSelector();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Document.createShell("?");
      Element element0 = document0.head();
      element0.html("?");
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = Parser.parse("!?/2')]", "!?/2')]");
      document0.hasClass("!?/2')]");
      document0.hasAttr("F#l$wVef_=!D");
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = new Document("style");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Element element0 = new Element("-SQb;@l/rY#eA!,3B");
      element0.className();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingOwnText((Pattern) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
//      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = new Document("~j0W@x");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("org.jsoup.select.Evaluator$IsOnlyOfType", "");
      Pattern pattern0 = Pattern.compile("", 1414);
      document0.getElementsByAttributeValueMatching("org.jsoup.parser.ParseError", pattern0);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.append("hy9z5+'`U");
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator");
      document0.id();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator");
      document0.cssSelector();
      document0.clone();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("}NEOkE*hx M.E\"U+OaJ", "}NEOkE*hx M.E\"U+OaJ");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document document1 = document0.outputSettings(document_OutputSettings0);
      document_OutputSettings0.prettyPrint(false);
      document1.html();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Element element0 = new Element("br");
      element0.outerHtml();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      document0.appendElement("br");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("$=%)0xpx%E#(q", "$=%)0xpx%E#(q");
      CharBuffer charBuffer0 = CharBuffer.allocate(4);
      // Undeclared exception!
//      try { 
        document0.html(charBuffer0);
//        fail("Expecting exception: BufferOverflowException");
      
//      } catch(BufferOverflowException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.CharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("O~j0Wx", "O~j0Wx");
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      // Undeclared exception!
//      try { 
        document0.outerHtmlHead(charBuffer0, 58, document_OutputSettings1);
//        fail("Expecting exception: BufferOverflowException");
      
//      } catch(BufferOverflowException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.CharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("id", "id");
      document0.val("@UUuC5{V$M2?heQ");
      document0.val();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("id", "id");
      document0.val();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator");
      document0.toggleClass("org.jsoup.select.Evaluator");
      document0.toggleClass("org.jsoup.select.Evaluator");
      document0.toggleClass("org.jsoup.select.Evaluator");
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "LTzDO");
      document0.toggleClass("LTzDO");
      document0.toggleClass("k)wh0w[IH@!");
      document0.hasClass("k)wh0w[IH@!");
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "LTzDO");
      document0.toggleClass("LTzDO");
      document0.toggleClass("4y3/MSZ^)BRN ~/");
      document0.hasClass("l?ALcVNoeRJN");
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "k)wh0w[IH@!");
      document0.toggleClass("k)wh0w[IH@!");
      document0.toggleClass(" ");
      document0.hasClass("l?ALcVNoeRJN");
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Document document0 = Parser.parse("LTzDO", "org.jsoup.select.Evaluator$IsFirstChild");
      document0.toggleClass("org.jsoup.select.Evaluator$IsFirstChild");
      document0.hasClass("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator");
      Element element0 = document0.toggleClass("org.jsoup.select.Evaluator");
      element0.getElementsByClass("org.jsoup.select.Evaluator");
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Document document0 = Document.createShell("</");
      document0.toggleClass("");
      document0.hasClass("ScriptDataEscapedLessthanSign");
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.appendText("");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Document.createShell("QaH0]>mS'PZWrR1");
      document0.prependChild(document0);
      Element.preserveWhitespace(document0);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Element.preserveWhitespace((Node) null);
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = Document.createShell("?");
      document0.appendElement("br");
      document0.getElementsContainingOwnText("br");
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      CDataNode cDataNode0 = new CDataNode("org.jsoup.nodes.element");
      document0.prependChild(cDataNode0);
      Pattern pattern0 = Pattern.compile("value");
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = Document.createShell("%/R>I@'j@6ZD|");
      Comment comment0 = new Comment("#v$xj;z");
      document0.prependChild(comment0);
      document0.getElementsMatchingOwnText("%/R>I@'j@6ZD|");
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.appendText("");
      element0.wholeText();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.appendText("");
      element0.prependText("eN6fY-~5^7y5m");
      element0.text();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.appendText("");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      document0.appendElement("bp");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      document0.appendElement("br");
      document0.getElementsContainingText("SHH");
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      Element element0 = document0.appendElement("br");
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      Element element0 = document0.prependChild(document0);
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Document document0 = Parser.parse("]]>", "]]>");
      Element element0 = document0.prependChild(document0);
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      document0.prependChild(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = Parser.parse("u2Bty6PNgWg|-", "u2Bty6PNgWg|-");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      Element element0 = document0.head();
      element0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      Element element0 = document0.head();
      Elements elements0 = element0.nextElementSiblings();
      assertEquals("4br_vD3E$x)q^g", element0.baseUri());
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document document0 = new Document("~j0W@x");
      document0.nextElementSibling();
      assertEquals("~j0W@x", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = new Document("%/R>I@'@@6ZD|");
      document0.reparentChild(document0);
      document0.nextElementSiblings();
      assertEquals("%/R>I@'@@6ZD|", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      StringReader stringReader0 = new StringReader("lNLi");
      Document document0 = parser0.parseInput((Reader) stringReader0, "&&-J& X2JR");
      Element element0 = document0.body();
      Elements elements0 = element0.siblingElements();
      assertEquals(1, elements0.size());
      assertEquals("&&-J& X2JR", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("3x@/8!buv%SDo", "");
      document0.siblingElements();
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = new Document("%/R>I@'j@6ZD|");
      document0.reparentChild(document0);
      // Undeclared exception!
//      try { 
        document0.siblingElements();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal Capacity: -1
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parse(";", ";");
      Element element0 = document0.head();
      String string0 = element0.cssSelector();
      assertEquals("html > head", string0);
      assertEquals(";", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "LTzDO");
      Element element0 = document0.toggleClass("LTzDO");
      element0.cssSelector();
      assertEquals("LTzDO", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Element element0 = new Element("z=vt}stl");
      Node[] nodeArray0 = new Node[3];
      // Undeclared exception!
//      try { 
        element0.insertChildren(4, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "k)wh0w[IH@!");
      Node[] nodeArray0 = new Node[7];
      // Undeclared exception!
//      try { 
        document0.insertChildren((-1170), nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
//      try { 
        document0.insertChildren((-1), nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Array must not contain any null objects
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Parser.parse("!?/2')]", "!?/2')]");
      LinkedList<Comment> linkedList0 = new LinkedList<Comment>();
      // Undeclared exception!
//      try { 
        document0.insertChildren(1180, (Collection<? extends Node>) linkedList0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      LinkedList<XmlDeclaration> linkedList0 = new LinkedList<XmlDeclaration>();
      // Undeclared exception!
//      try { 
        document0.insertChildren((-4), (Collection<? extends Node>) linkedList0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("~j0W@x", "~j0W@x");
      List<Node> list0 = document0.siblingNodes();
      Element element0 = document0.insertChildren((-1), (Collection<? extends Node>) list0);
      assertEquals("~j0W@x", element0.baseUri());
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      LinkedList<XmlDeclaration> linkedList0 = new LinkedList<XmlDeclaration>();
      Element element0 = document0.insertChildren(0, (Collection<? extends Node>) linkedList0);
      assertEquals("org.jsoup.select.Evaluator$IsFirstChild", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      List<DataNode> list0 = document0.dataNodes();
      assertEquals("4br_vD3E$x)q^g", document0.baseUri());
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Document document0 = new Document("~j0W@x");
      Element element0 = document0.prependText("&{-J& X2^JR");
      List<TextNode> list0 = element0.textNodes();
      assertFalse(list0.isEmpty());
      assertEquals("~j0W@x", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = new Document("~j0W@x");
      document0.normalise();
      document0.textNodes();
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      Element element0 = document0.createElement("4br_vD3E$x)q^g");
      document0.reparentChild(element0);
      element0.before("4br_vD3E$x)q^g");
      document0.getElementsByIndexEquals(28);
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Document document0 = new Document(" ");
      Elements elements0 = document0.getElementsByIndexGreaterThan(1291);
      assertEquals(" ", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Element element0 = new Element("-SQb;@l/rY#eA!,3B");
      // Undeclared exception!
//      try { 
        element0.selectFirst("]q72*MEW3wH{ck uY");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query ']q72*MEW3wH{ck uY': unexpected token at ']q72*MEW3wH{ck uY'
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Document.createShell("%/R>I@'j@6ZD|");
      document0.is("SKIP_ENTIRELY");
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      // Undeclared exception!
//      try { 
        document0.before("4br_vD3E$x)q^g");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("~", "             ");
      document0.getElementsByAttribute("~");
      assertEquals("             ", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueNot("", "org.jsoup.nodes.element");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Document document0 = new Document("~j0W@x");
      Element element0 = document0.shallowClone();
      assertEquals("~j0W@x", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = Parser.parse("k)wh0w[IH@!", "k)wh0w[IH@!");
      document0.doSetBaseUri("k)wh0w[IH@!");
      assertEquals("k)wh0w[IH@!", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Document document0 = Document.createShell("QaH0]>mS'PZWrR1");
      // Undeclared exception!
//      try { 
        document0.after((Node) document0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("O~j0Wx", "O~j0Wx");
      assertEquals(1, document0.childNodeSize());
      
      document0.title("l?alcvnoerjn");
      Elements elements0 = document0.getElementsMatchingText("O~j0Wx");
      assertEquals(3, elements0.size());
      assertEquals("O~j0Wx", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      document0.getElementsByAttributeValueContaining("4br_vD3E$x)q^g", "]]?|\" rf4Rh#>A% bP");
      assertEquals(1, document0.childNodeSize());
      assertEquals("4br_vD3E$x)q^g", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Document.createShell("]&)Hb><.]D,u7a@<($");
      document0.getElementsByAttributeValueEnding(".TK>,7?86Rjx,uQGbK", "org.jsoup.nodes.Element$1");
      assertEquals("]&)Hb><.]D,u7a@<($", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("");
      document0.is((Evaluator) evaluator_ContainsData0);
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.select.Evaluator$IsFirstChild", "org.jsoup.select.Evaluator$IsFirstChild");
      document0.getElementsByAttributeValueMatching("", "org.jsoup.select.Evaluator$IsFirstChild");
      assertEquals(1, document0.childNodeSize());
      assertEquals("org.jsoup.select.Evaluator$IsFirstChild", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("\">9SvOP1&PlGBVF", "\">9SvOP1&PlGBVF");
      Element element0 = document0.attr("\">9SvOP1&PlGBVF", "");
      assertEquals("\">9SvOP1&PlGBVF", element0.baseUri());
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("~Zj0W@x", "~Zj0W@x");
      document0.getElementsByAttributeStarting("~Zj0W@x");
      assertEquals(1, document0.childNodeSize());
      assertEquals("~Zj0W@x", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0W\"x", "O~j0W\"x");
      document0.prependElement("html");
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = Parser.parse("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      Elements elements0 = document0.getElementsByIndexLessThan(3833);
      assertEquals(3, elements0.size());
      assertEquals("4br_vD3E$x)q^g", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("4br_vD3E$x)q^g", "4br_vD3E$x)q^g");
      // Undeclared exception!
//      try { 
        document0.after("4br_vD3E$x)q^g");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Document document0 = Document.createShell("?");
      document0.select("br");
      assertEquals("?", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Parser.parse("UMGEsgd.wV5lJ-", "]]>");
      document0.getElementsByAttributeValueStarting("]]>", "UMGEsgd.wV5lJ-");
      assertEquals(1, document0.childNodeSize());
      assertEquals("]]>", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValue("br", "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Tag tag0 = Tag.valueOf("D=VT}Sfl");
      Element element0 = new Element(tag0, ":contains");
      // Undeclared exception!
//      try { 
        element0.html((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      // Undeclared exception!
//      try { 
        document0.before((Node) document0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("bfN_OQKS;o`?]5", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "v]8'^GCadQD .4p<*", attributes0);
      formElement0.dataset();
      assertEquals("v]8'^GCadQD .4p<*", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      Element element0 = document0.empty();
      assertEquals("org.jsoup.select.Evaluator$IsFirstChild", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "");
      // Undeclared exception!
//      try { 
        document0.child((-668));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0Wx", "O~j0Wx");
      document0.previousElementSiblings();
      assertEquals(1, document0.childNodeSize());
      assertEquals("O~j0Wx", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Document document0 = new Document("org.jsoup.select.Evaluator$IsFirstChild");
      Elements elements0 = document0.getElementsMatchingText("org.jsoup.select.Evaluator$IsFirstChild");
      assertEquals("org.jsoup.select.Evaluator$IsFirstChild", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Document document0 = Document.createShell("^%7miA[)b6");
      // Undeclared exception!
//      try { 
        document0.appendText((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("O~j0W\"x", "O~j0W\"x");
      // Undeclared exception!
//      try { 
        document0.wrap("org.jsoup.select.Selector$SelectorParseException");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.getElementById("/~u8dgGd?\"+");
  }
}
