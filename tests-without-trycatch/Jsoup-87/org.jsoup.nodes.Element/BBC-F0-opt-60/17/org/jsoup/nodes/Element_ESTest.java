/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 16:07:37 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.CharArrayWriter;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.MissingFormatArgumentException;
import java.util.Set;
import java.util.UnknownFormatConversionException;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("BeforeAttIributeName", "BeforeAttIributeName");
      Element element0 = document0.removeClass("Oay6:pCRFF|H7<.@Y_");
      element0.siblingIndex = (-1003);
      element0.html();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Parser.parse("mdarV", "mdarV");
      document0.addClass("java.lang.string@0000000011");
      document0.toggleClass("TagKname must ow be empty.");
      document0.hasClass("]I!nbS$X`");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = new Document("AlgW&SBn{N1lTg~RA^A");
      Tag tag0 = Tag.valueOf("AlgW&SBn{N1lTg~RA^A");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "AlgW&SBn{N1lTg~RA^A", attributes0);
      document0.setParentNode(pseudoTextElement0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = Document.createShell("mark");
      StringBuilder stringBuilder0 = new StringBuilder("mark");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlTail(stringBuilder0, 3017, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Tag tag0 = Tag.valueOf("ZW]\"DDfd+w Iu/k");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "$O{\"7Ji]2%#q(x07u", attributes0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "$O{\"7Ji]2%#q(x07u");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      formElement0.outerHtmlHead(stringBuilder0, 1, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("cU}Pa~1g<oX[", "");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Document.createShell("mark");
      document0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("D;egvYAw.y", ":nth-child(%d)");
      document0.wrap(":nth-child(%d)");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      Element element0 = document0.body();
      element0.wrap("@k");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Parser", "S$");
      Element element0 = document0.head();
      element0.wholeText();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("RV{9F.;x}@]L+", "RV{9F.;x}@]L+");
      Element element0 = document0.toggleClass("RV{9F.;x}@]L+");
      element0.siblingIndex = 2625;
      element0.val("RV{9F.;x}@]L+");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("n^lidrte");
      FormElement formElement0 = new FormElement(tag0, "n^lidrte", attributes0);
      formElement0.setSiblingIndex((-1956040007));
      formElement0.val("/");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Parser", "S$");
      Element element0 = document0.val("org.jsoup.internal.Normalizer");
      element0.val();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Attributes$Dataset$EntrySet", "org.jsoup.nodes.Attributes$Dataset$EntrySet");
      document0.setSiblingIndex(124);
      document0.toggleClass("org.jsoup.nodes.Attributes$Dataset$EntrySet");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("n^lidrte");
      FormElement formElement0 = new FormElement(tag0, "n^lidrte", attributes0);
      formElement0.setSiblingIndex((-1956040007));
      formElement0.toggleClass("");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("D;egvYAw.y", "D;egvYAw.y");
      Element element0 = document0.head();
      element0.toggleClass("D;egvYAw.y");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      Element element0 = document0.appendText("br");
      element0.siblingIndex = 1579;
      document0.text(".");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Parser", "S$");
      Element element0 = document0.head();
      element0.text("org.jsoup.parser.Parser");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = Parser.parse("n^lidrte", "n^lidrte");
      Element element0 = document0.head();
      element0.text();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Tag tag0 = Tag.valueOf("rp");
      CDataNode cDataNode0 = new CDataNode("87`TT");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "'4<W*f+|z@P@H", attributes0);
      formElement0.setSiblingIndex(484);
      formElement0.tagName("Ck@u4WOt9zN..adLJ");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("n^lidrte");
      FormElement formElement0 = new FormElement(tag0, "n^lidrte", attributes0);
      formElement0.setSiblingIndex((-1956040007));
      formElement0.tagName("/");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Tag tag0 = Tag.valueOf("EDQ'8AbD");
      CDataNode cDataNode0 = new CDataNode("D;egvYAw.y");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "EDQ'8AbD", attributes0);
      formElement0.tagName("head");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Tag tag0 = Tag.valueOf("reversed");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "7$.z`ROFIV", attributes0);
      Element element0 = pseudoTextElement0.appendElement("kwg]y{w4ls-abv-tb|l");
      element0.tagName("%F}xoul:xdtN2g");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Parser", "S$");
      document0.tagName("wbr");
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0", "0");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("mark", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("mark");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "l/2:QpO+FgVnvE", attributes0);
      Element element0 = pseudoTextElement0.appendElement("br");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("mark", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("mark");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "l/2:QpO+FgVnvE", attributes0);
      pseudoTextElement0.tag();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Parser", "S$");
      Element element0 = document0.head();
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0", "0");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("RV{9F.;x}@]L+", "CommentStart");
      Element element0 = document0.head();
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = Document.createShell("y09w");
      document0.selectFirst("y09w");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Document.createShell("M");
      document0.selectFirst("body");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Tag tag0 = Tag.valueOf("reversed");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "reversed", attributes0);
      formElement0.selectFirst("reversed");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("{PB-[ZYCR", "`VF_>pWz~f");
      document0.select("org.jsoup.parser.Token");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Tag tag0 = Tag.valueOf("5+d!QO$<");
      CDataNode cDataNode0 = new CDataNode("5+d!QO$<");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "5+d!QO$<", attributes0);
      pseudoTextElement0.appendElement("Cr");
      pseudoTextElement0.select("Cr");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("n^lidrte");
      FormElement formElement0 = new FormElement(tag0, "^Kz'^~y &Q)VmL4g@", attributes0);
      formElement0.siblingIndex = 634;
      formElement0.removeClass("UXqQ:onVFR");
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Document.createShell("mark");
      Element element0 = document0.head();
      element0.removeClass("W,LcR~rWJ=Lo<");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("?q$", "?q$");
      Element element0 = document0.body();
      element0.before("?q$");
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("textarea", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("textarea");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "textarea", attributes0);
      Element.preserveWhitespace(pseudoTextElement0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("BeforeAttIributeName", "BeforeAttIributeName");
      Element element0 = document0.removeClass("Oay6:pCRFF|H7<.@Y_");
      element0.siblingIndex = (-1003);
      element0.prependText(":nth-child(%d)");
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("D;egvYAw.y", "D;egvYAw.y");
      Element element0 = document0.body();
      element0.prependText("D;egvYAw.y");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("textarGa", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "textarGa", attributes0);
      formElement0.prependElement("HEAD");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("-", "br");
      Element element0 = document0.body();
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("BeforeAttIributeName", "BeforeAttIributeName");
      Element element0 = document0.removeClass("Oay6:pCRFF|H7<.@Y_");
      element0.siblingIndex = (-1003);
      document0.prepend("BeforeAttIributeName");
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("D;egvAw.y", "D;egvAw.y");
      Element element0 = document0.body();
      element0.prepend("H.TI3");
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("D;egvAw.y", "D;egvAw.y");
      Element element0 = document0.appendElement("Y;");
      element0.prepend("H.TI3");
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = new Document("AlgW&SBn{N1lTg~RA^A");
      document0.prepend("");
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Element element0 = new Element("ct");
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Parser.parse("reversed", "yMd");
      Element element0 = document0.body();
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "qKg ^!Y|HzT@~gd/|0");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      CDataNode cDataNode0 = new CDataNode("^7rU m3K/${#7I7");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("vf4h/<C{jmc-}aP");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "d]\"3uY|F^", attributes0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) cDataNode0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) pseudoTextElement0;
      nodeArray0[3] = (Node) pseudoTextElement0;
      document0.addChildren(nodeArray0);
      pseudoTextElement0.parent();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("D;egvYAw.y", ":nth-child(%d)");
      Document document1 = new Document("");
      document0.appendTo(document1);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("W;qx*WBd=n,w", "noscript");
      Element element0 = document0.head();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Tag tag0 = Tag.valueOf("&CE_$I6j6;-");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "#root", attributes0);
      formElement0.appendText("#root");
      formElement0.ownText();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      CDataNode cDataNode0 = new CDataNode("^7rU m3K/${#7I7");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("vf4h/<C{jmc-}aP");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "d]\"3uY|F^", attributes0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) cDataNode0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) pseudoTextElement0;
      nodeArray0[3] = (Node) pseudoTextElement0;
      document0.addChildren(nodeArray0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("u7!tlki", "u7!tlki");
      Element element0 = document0.prependElement("org.jsoup.parser.ParseErrorList");
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      Element element0 = document0.body();
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Parser.parse("hyZ1/;\"vhN^F}DV@w", "hyZ1/;\"vhN^F}DV@w");
      Pattern pattern0 = Pattern.compile("jada.lanx.string@0000000067");
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      document0.is((Evaluator) evaluator_MatchesOwn0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Element element0 = new Element("ct");
      element0.is("ct");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = new Document("m+yCMOc6=B");
      document0.is(" .Jz*A5oL");
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Document.createShell("mark");
      Document document1 = document0.clone();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document1;
      document1.insertChildren(1, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = Parser.parse(" />", "%K)}|y+I3rlq");
      Pattern pattern0 = Pattern.compile(" />", (-1847));
      Elements elements0 = document0.getElementsMatchingText(pattern0);
      Element element0 = document0.head();
      Element element1 = element0.doClone(document0);
      Element element2 = element1.addClass("java.lang.string@0000000069");
      element2.insertChildren((-1), (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = Parser.parse("Pattern syntax error: ", ";VD&fODy");
      Element element0 = document0.createElement("Pattern syntax error: ");
      element0.siblingIndex = (-237);
      element0.html("s+");
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.html("");
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("{PB-[ZYCR", "`VF_>pWz~f");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      document0.html(charArrayWriter0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = new Document("AlgW&SBn{N1lTg~RA^A");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("", "");
      Element element0 = document0.body();
      element0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("AlgW&SBn{N1lTg~RA^A", "AlgW&SBn{N1lTg~RA^A");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      document0.getElementsMatchingText("</");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Tag tag0 = Tag.valueOf("!H,|UL!-7]k");
      CDataNode cDataNode0 = new CDataNode("");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "id", attributes0);
      pseudoTextElement0.getElementsMatchingText("");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("qKg ^!Y|HzT@~gd/|0", "qKg ^!Y|HzT@~gd/|0");
      document0.getElementsMatchingOwnText("rB7KyBC07m4/&cd39!");
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("s[t\"}Xzf)9)v36-)k", "");
      document0.getElementsContainingOwnText((String) null);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("AlgW&SBn{N1lTg~RA^A", "");
      document0.getElementsByTag("Hpz=u52~0_8, ");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Token$Doctype", "reversed");
      document0.getElementsByTag("html");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("AlgW&SBn{N1lTg~RA^A", "AlgW&SBn{N1lTg~RA^A");
      document0.getElementsByIndexGreaterThan(0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      document0.getElementsByIndexEquals(0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = Document.createShell("4m'\"iTqRW<");
      document0.getElementsByAttributeValueNot("                    ", "                    ");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("mark", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("mark");
      Attributes attributes0 = cDataNode0.attributes();
      Attribute attribute0 = Attribute.createFromEncoded("l/2:QpO+FgVnvE", "mark");
      Attributes attributes1 = attributes0.put(attribute0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "l/2:QpO+FgVnvE", attributes1);
      Pattern pattern0 = Pattern.compile("mark", (-377));
      pseudoTextElement0.getElementsByAttributeValueMatching("l/2:QpO+FgVnvE", pattern0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("mark");
      Attributes attributes0 = cDataNode0.attributes();
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("l/2:QpO+FgVnvE", parseSettings0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "mark", attributes0);
      pseudoTextElement0.getElementsByAttributeValueEnding("Wou9+VPG0.YMS,/", "CT");
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("mark");
      Attributes attributes0 = cDataNode0.attributes();
      Attribute attribute0 = Attribute.createFromEncoded("l/2:QpO+FgVnvE", "l/2:QpO+FgVnvE");
      Attributes attributes1 = attributes0.put(attribute0);
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("l/2:QpO+FgVnvE", parseSettings0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "mark", attributes1);
      pseudoTextElement0.getElementsByAttributeValueEnding("l/2:QpO+FgVnvE", "l/2:QpO+FgVnvE");
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("8$;~I)]y", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("8$;~I)]y");
      Attributes attributes0 = cDataNode0.attributes();
      Attribute attribute0 = new Attribute("8$;~I)]y", "8$;~I)]y", attributes0);
      Attributes attributes1 = attributes0.put(attribute0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "8$;~I)]y", attributes1);
      pseudoTextElement0.getElementsByAttributeValue("8$;~I)]y", "8$;~I)]y");
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Tag tag0 = Tag.valueOf("ye");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("/G6\"qa^X,+@~U2)", "/G6\"qa^X,+@~U2)");
      Attributes attributes1 = attributes0.put(attribute0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "/G6\"qa^X,+@~U2)", attributes1);
      pseudoTextElement0.getElementsByAttributeStarting("/G6\"qa^X,+@~U2)");
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = Parser.parse(".!Kloq?@W1XSl]<", ".!Kloq?@W1XSl]<");
      Element element0 = document0.attr("&N", "&N");
      element0.getElementsByAttribute("&N");
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Document document0 = Parser.parse("listing", "]{]W");
      document0.appendTo(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      document0.siblingIndex = (-742);
      document0.empty();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      Element element0 = document0.body();
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Parser.parse("mark", "mark");
      document0.setSiblingIndex((-2458));
      document0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#root", "#root");
      Element element0 = document0.body();
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader(" > ");
      Document document0 = parser0.parseInput((Reader) stringReader0, " > ");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.parser.Parser", "org.jsoup.parser.Parser");
      Element element0 = document0.head();
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = Parser.parse("Pattern syntax error: ", ";VD&fODy");
      Element element0 = document0.createElement("Pattern syntax error: ");
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.parser.Parser", "org.jsoup.parser.Parser");
      document0.clone();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Parser", "S$");
      Element element0 = document0.head();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      Comment comment0 = new Comment("@k", "br");
      nodeArray0[4] = (Node) comment0;
      nodeArray0[5] = (Node) document0;
      nodeArray0[6] = (Node) document0;
      nodeArray0[7] = (Node) document0;
      document0.addChildren(nodeArray0);
      Set<String> set0 = document0.classNames();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Element element0 = new Element(",");
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Document.createShell("mark");
      Element element0 = document0.toggleClass("mark");
      element0.classNames();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("DerY</.;", "DerY</.;");
      Element element0 = document0.toggleClass("DerY</.;");
      element0.className();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Element element0 = new Element(">o3/74iWaQff!$=~");
      element0.children();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Document document0 = new Document("textarea");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = Parser.parse("Jx&6=$& -3DeiGy", "Jx&6=$& -3DeiGy");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Tag tag0 = Tag.valueOf("6|c28");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "cr", attributes0);
      pseudoTextElement0.appendElement("org.jsoup.parser.Token$Comment");
      pseudoTextElement0.child(0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Parser", "org.jsoup.parser.Parser");
      document0.parentNode = (Node) document0;
      document0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Tag tag0 = Tag.valueOf("]N");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "D1H\"]>mEP3'vmp| x", attributes0);
      Element element0 = pseudoTextElement0.appendElement("B}kC~ Oo7LKaFTCO");
      element0.before((Node) pseudoTextElement0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("D;egvYAw.y", "D;egvYAw.y");
      Element element0 = document0.body();
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      Document document1 = new Document("^7rU m3K/${#7I7");
      document0.reparentChild(document1);
      document1.before("br");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("AlgW&SBn{N1lTg~RA^A", "AlgW&SBn{N1lTg~RA^A");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("rcdataendtagopen", "rcdataendtagopen");
      Element element0 = document0.toggleClass("rcdataendtagopen");
      element0.attributes();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = Parser.parse(".!Kloq?@W1XSl]<", ".!Kloq?@W1XSl]<");
      document0.setSiblingIndex((-16));
      document0.attr("u<S=e`j_", true);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      Comment comment0 = new Comment("@k", "br");
      nodeArray0[4] = (Node) comment0;
      nodeArray0[5] = (Node) document0;
      nodeArray0[6] = (Node) document0;
      nodeArray0[7] = (Node) document0;
      document0.addChildren(nodeArray0);
      document0.attr("n4.sc", true);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("@10a<vb", "@10a<vb");
      document0.attr("@10a<vb", true);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("R", "R");
      Element element0 = document0.body();
      element0.attr("R", "R");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = new Document(".!Kloq?@W1XSl]<");
      document0.attr("&N", "&N");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = Parser.parse("reversed", "yMd");
      Element element0 = document0.body();
      element0.appendText("<!");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("mark", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("mark");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ":rDDe*q)|", attributes0);
      pseudoTextElement0.appendElement("head");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = new Document("auh@n[6YjJ=*.t!u");
      Document document1 = document0.normalise();
      Element element0 = document1.body();
      element0.appendChild(document1);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("AlW&SBnN1lTg~RA^A", "AlW&SBnN1lTg~RA^A");
      document0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = Parser.parse("Pattern syntax error: ", ";VD&fODy");
      Element element0 = document0.createElement("Pattern syntax error: ");
      element0.siblingIndex = (-237);
      element0.append("WzS>K/b'0l_O#SV");
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.parser.Parser", "org.jsoup.parser.Parser");
      Element element0 = document0.head();
      element0.append("YMZ8X*J/;7");
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0", "0");
      Element element0 = document0.appendElement("0");
      element0.append("0");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("#9mar", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("#9mar");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "#9mar", attributes0);
      pseudoTextElement0.append("");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("AlgW&SBn{N1lTg~RA^A", "AlgW&SBn{N1lTg~RA^A");
      Element element0 = document0.head();
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = Parser.parse("ow", "g@5Q3a<>oI");
      Element element0 = document0.appendElement("textarGa");
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      Element element0 = document0.prepend("Hpz=u52~0_8, ");
      document0.reparentChild(element0);
      document0.after((Node) element0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("mark");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "textarea", attributes0);
      Element element0 = pseudoTextElement0.appendElement("textarea");
      element0.after("@!");
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("D;egvYAw.y", "D;egvYAw.y");
      Element element0 = document0.body();
      element0.after("9");
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Document document0 = Document.createShell(">o3/74iWaQff!$=~");
      Element element0 = document0.body();
      element0.addClass("}>{wmhvM#");
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.wrap("Hpz=u52~0_8, ");
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Parser", "S$");
      // Undeclared exception!
//      try { 
        document0.wrap("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Document.createShell("BeforeAttIributeName");
      DataNode dataNode0 = new DataNode("BeforeAttIributeName", "BeforeAttIributeName");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
//      try { 
        document0.wrap("ree");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("#maDr", parseSettings0);
      Element element0 = new Element(tag0, "#maDr");
      element0.childNodes = null;
      // Undeclared exception!
//      try { 
        element0.wholeText();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.val("YD8Dpc6%dL\"");
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("mark", "mark");
      Parser parser0 = Parser.htmlParser();
      Parser parser1 = parser0.settings((ParseSettings) null);
      Document document1 = document0.parser(parser1);
      // Undeclared exception!
//      try { 
        document1.val("jqC4g2uPI^vCZ+.OrDX");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      String[] stringArray0 = new String[2];
      attributes0.keys = stringArray0;
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("textarGa", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "textarGa", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.val("textarGa");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // 0
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("AlgW&SBn{N1lTg~RA^A", "AlgW&SBn{N1lTg~RA^A");
      // Undeclared exception!
//      try { 
        document0.toggleClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader(" > ");
      Document document0 = parser0.parseInput((Reader) stringReader0, " > ");
      // Undeclared exception!
//      try { 
        document0.text("qbg!w&b$ndN!k>u7(.H");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Document", e);
//      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("% Dn-5QG+|t", "% Dn-5QG+|t");
      // Undeclared exception!
//      try { 
        document0.text((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Document document0 = Parser.parse("mark", "mark");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.tagName("`C_;4SLnINUA[~Y$Gk");
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", "");
      Document document1 = new Document(" > ");
      document1.reparentChild(document0);
      // Undeclared exception!
//      try { 
        document0.siblingElements();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal Capacity: -1
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Element element0 = new Element("br");
      element0.doSetBaseUri((String) null);
      // Undeclared exception!
//      try { 
        element0.shallowClone();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("cU}Pa~1g<oX[", "");
      // Undeclared exception!
//      try { 
        document0.selectFirst("ZL*Q1`=3R]");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query 'ZL*Q1`=3R]': unexpected token at '1`=3R]'
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Document.createShell("mark");
      // Undeclared exception!
//      try { 
        document0.selectFirst((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("n", "m}:6D");
      // Undeclared exception!
//      try { 
        document0.select("m}:6D");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query 'm}:6D': unexpected token at '}:6D'
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("cr");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "cr", attributes0);
      // Undeclared exception!
//      try { 
        pseudoTextElement0.select("[__uM`n%=ii0t");
//        fail("Expecting exception: UnknownFormatConversionException");
      
//      } catch(UnknownFormatConversionException e) {
//         //
//         // Conversion = '='
//         //
//         verifyException("java.util.Formatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("k.U_|BhN({q", "e;dC_V");
      // Undeclared exception!
//      try { 
        document0.select((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("N\"#vP.,&eW[pw", "%F}xoul:xdtN2g");
      // Undeclared exception!
//      try { 
        document0.removeClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("):", "mark");
      DataNode dataNode0 = new DataNode((String) null, (String) null);
      document0.setParentNode(dataNode0);
      // Undeclared exception!
//      try { 
        document0.previousElementSiblings();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("V0n90", "e_<F?j~");
      DocumentType documentType0 = new DocumentType("e_<F?j~", "nl?lK-tOmIS", "nl?lK-tOmIS", "WOW#T*X2n!X^;O+KLi3", (String) null);
      document0.setParentNode(documentType0);
      // Undeclared exception!
//      try { 
        document0.previousElementSibling();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = Document.createShell("reersed");
      DocumentType documentType0 = new DocumentType("org.jsoup.nodes.Element$2", "org.jsoup.nodes.Element$2", "s+", "org.jsoup.nodes.Element$2", "org.jsoup.nodes.Element$2");
      document0.setParentNode(documentType0);
      // Undeclared exception!
//      try { 
        Element.preserveWhitespace(document0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Element element0 = new Element("progress");
      List<Node> list0 = element0.childNodes();
      element0.childNodes = list0;
      // Undeclared exception!
//      try { 
        element0.prependText("progress");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Collections$UnmodifiableList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = Parser.parse("mark", "mark");
      // Undeclared exception!
//      try { 
        document0.prependText((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.prependElement("GL'g");
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Tag tag0 = Tag.valueOf(">+GRtx}z&T\"6#^w:j");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "fpd})_X?*|!,q%H};", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.prependElement((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Element element0 = new Element("nobr");
      Document document0 = new Document("nobr");
      CDataNode cDataNode0 = new CDataNode("nobr");
      Node node0 = cDataNode0.doClone(element0);
      // Undeclared exception!
//      try { 
        document0.prependChild(node0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = Parser.parse("mark", "mark");
      // Undeclared exception!
//      try { 
        document0.prependChild((Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.prepend("A");
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      // Undeclared exception!
//      try { 
        document0.prepend((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = Parser.parse("97F4u", "97F4u");
      CDataNode cDataNode0 = new CDataNode("cr");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
//      try { 
        document0.parent();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("AfterBody", "AfterBody");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(1085);
      StringWriter stringWriter0 = new StringWriter(1085);
      // Undeclared exception!
      document0.outerHtmlTail(stringWriter0, 668, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("cr", "cr");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "cr");
      // Undeclared exception!
//      try { 
        document0.outerHtmlTail(charBuffer0, (-411), document_OutputSettings0);
//        fail("Expecting exception: ReadOnlyBufferException");
      
//      } catch(ReadOnlyBufferException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.StringCharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        document0.outerHtmlTail(charBuffer0, 1, document_OutputSettings0);
//        fail("Expecting exception: BufferOverflowException");
      
//      } catch(BufferOverflowException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.CharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("% Dn-5QG+|t", "% Dn-5QG+|t");
      StringBuffer stringBuffer0 = new StringBuffer();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        document0.outerHtmlTail(stringBuffer0, (-2), document_OutputSettings0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // width must be > 0
//         //
//         verifyException("org.jsoup.internal.StringUtil", e);
//      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("HB7k?_N@ycX!_^D", "HB7k?_N@ycX!_^D");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
//      try { 
        document0.outerHtmlTail(pipedWriter0, (-1232), document_OutputSettings0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Pipe not connected
//         //
//         verifyException("java.io.PipedWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = Parser.parse("HKa Gc]J", "textarGa");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("textarGa");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(1491);
      // Undeclared exception!
      document0.outerHtmlHead(mockPrintWriter0, 1491, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Attributes", "org.jsoup.nodes.Attributes");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "org.jsoup.nodes.Attributes");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        document0.outerHtmlHead(charBuffer0, 10, document_OutputSettings0);
//        fail("Expecting exception: ReadOnlyBufferException");
      
//      } catch(ReadOnlyBufferException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.StringCharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        document0.outerHtmlHead((Appendable) null, (-589), document_OutputSettings0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("% Dn-5QG+|t", "% Dn-5QG+|t");
      MockFileWriter mockFileWriter0 = new MockFileWriter("<html>\n <head></head>\n <body>\n  % Dn-5QG+|t\n </body>\n</html>", true);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        document0.outerHtmlHead(mockFileWriter0, (-1153), document_OutputSettings0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // width must be > 0
//         //
//         verifyException("org.jsoup.internal.StringUtil", e);
//      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("br", "br");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
//      try { 
        document0.outerHtmlHead(pipedWriter0, (-1491231278), document_OutputSettings0);
//        fail("Expecting exception: IOException");
      
//      } catch(IOException e) {
//         //
//         // Pipe not connected
//         //
//         verifyException("java.io.PipedWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("mark", "mark");
      CDataNode cDataNode0 = new CDataNode("mark");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
//      try { 
        document0.nextElementSiblings();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("@k", "Hpz=u52~0_8, ");
      // Undeclared exception!
//      try { 
        document0.lastElementSibling();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Parser.parse(".|c228", "uu");
      CDataNode cDataNode0 = new CDataNode(".|c228");
      document0.parentNode = (Node) cDataNode0;
      // Undeclared exception!
//      try { 
        document0.lastElementSibling();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("AlgW&SBn{N1lTg~RA^A", "");
      document0.prependChild(document0);
      // Undeclared exception!
      document0.is((Evaluator) null);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      // Undeclared exception!
//      try { 
        document0.is((Evaluator) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Element element0 = new Element("BT*");
      // Undeclared exception!
//      try { 
        element0.is(">o3/74iWaQff!$=~");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query 'o3/74iWaQff!$=': unexpected token at '/74iWaQff!$='
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("mark", "mark");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.is("br");
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Element element0 = new Element("D;egvYAw.y");
      Document document0 = Parser.parseBodyFragmentRelaxed("rzBQ5)PY*,)Mh8rw33", "rzBQ5)PY*,)Mh8rw33");
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) element0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document0;
      nodeArray0[6] = (Node) element0;
      // Undeclared exception!
//      try { 
        document0.insertChildren((-2), nodeArray0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Tag tag0 = Tag.valueOf("HB7k?_N@ycX!_^D");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "cr", attributes0);
      pseudoTextElement0.appendElement("cr");
      Pattern pattern0 = Pattern.compile("");
      Elements elements0 = pseudoTextElement0.getElementsMatchingOwnText(pattern0);
      // Undeclared exception!
//      try { 
        pseudoTextElement0.insertChildren((-1), (Collection<? extends Node>) elements0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 1, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.html(">o3/74iWaQff!$=~");
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("D;egvYAw.y", "D;egvYAw.y");
      // Undeclared exception!
//      try { 
        document0.html((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("cr", "cr");
      TextNode textNode0 = TextNode.createFromEncoded("cr");
      document0.setParentNode(textNode0);
      // Undeclared exception!
//      try { 
        document0.html("cr");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      document0.reparentChild(document0);
      MockFileWriter mockFileWriter0 = new MockFileWriter("z}*MvW$[B'w\"", false);
      // Undeclared exception!
      document0.html(mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
//      try { 
        document0.html(charBuffer0);
//        fail("Expecting exception: BufferOverflowException");
      
//      } catch(BufferOverflowException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.CharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Parser", "S$");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
      // Undeclared exception!
//      try { 
        document0.html((OutputStreamWriter) mockFileWriter0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.mock.java.io.MockFileWriter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = new Document("textarea");
      Document document1 = document0.clone();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document1;
      nodeArray0[1] = (Node) document0;
      document1.insertChildren(0, nodeArray0);
      // Undeclared exception!
      document1.html();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(".", ".");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset((Charset) null);
      Document document1 = document0.outputSettings(document_OutputSettings1);
      // Undeclared exception!
//      try { 
        document1.html();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Document$OutputSettings", e);
//      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = Parser.parse("textarGa", "textarGa");
      TextNode textNode0 = TextNode.createFromEncoded("");
      document0.setParentNode(textNode0);
      // Undeclared exception!
//      try { 
        document0.html();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      StringReader stringReader0 = new StringReader("In}G!Zr");
      Document document0 = parser0.parseInput((Reader) stringReader0, " ,c)**R:UKmHmX");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document document1 = document0.outputSettings(document_OutputSettings0);
      document1.childNodes = null;
      // Undeclared exception!
//      try { 
        document1.hasText();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("AlgW&SBn{N1lTg~RA^A", "AlgW&SBn{N1lTg~RA^A");
      // Undeclared exception!
//      try { 
        document0.hasClass((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Parser.parse("ZSg", "ZSg");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingText((Pattern) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.select.Evaluator$Matches", e);
//      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("mark");
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("yR;Z-Ley!j(G_NoL", "%s");
      document0.setParentNode(cDataNode0);
      Pattern pattern0 = Pattern.compile("%s");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingText(pattern0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf(">k", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "R4&~hDGruY~H", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.getElementsMatchingText((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Tag tag0 = Tag.valueOf("j`CU1OU");
      CDataNode cDataNode0 = new CDataNode("C^p'sk]\"%5i>3");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ">fchb/&A<G':dX&OH ", attributes0);
      // Undeclared exception!
//      try { 
        pseudoTextElement0.getElementsMatchingOwnText((Pattern) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
//      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("D;egvYAw.y", "D;egvYAw.y");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingOwnText((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("AlgW&SBn{N1lTg~RA^A", "AlgW&SBn{N1lTg~RA^A");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingOwnText("AlgW&SBn{N1lTg~RA^A");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Pattern syntax error: AlgW&SBn{N1lTg~RA^A
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("cr", "cr");
      TextNode textNode0 = TextNode.createFromEncoded("w");
      document0.setParentNode(textNode0);
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingOwnText("cr");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("eveQrsd", "eveQrsd");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("eveQrsd", "eveQrsd", false);
      document0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
//      try { 
        document0.getElementsContainingText("QT[$vNo?gFJ0]pS_");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0", "0");
      document0.siblingIndex = (-980);
      document0.setParentNode(document0);
      // Undeclared exception!
//      try { 
        document0.getElementsContainingText("0");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("3&hcr[`9!y", "3&hcr[`9!y");
      DocumentType documentType0 = new DocumentType((String) null, "3&hcr[`9!y", (String) null, "3&hcr[`9!y", (String) null);
      document0.setParentNode(documentType0);
      // Undeclared exception!
//      try { 
        document0.getElementsContainingOwnText("|y<6S~%n'lxsGo`2y");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("", "");
      // Undeclared exception!
//      try { 
        document0.getElementsByTag("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = Document.createShell(":%s(%dn%+dd)");
      Comment comment0 = new Comment(":%s(%dn%+dd)", ":%s(%dn%+dd)");
      document0.setParentNode(comment0);
      // Undeclared exception!
//      try { 
        document0.getElementsByIndexGreaterThan(4453);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.nodes.element$1");
      Element element0 = document0.head();
      ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
      List<Node> list0 = Parser.parseFragment("org.jsoup.nodes.element$1", (Element) document0, "@{v7.OPiFvjGhj}61cL", parseErrorList0);
      element0.childNodes = list0;
      // Undeclared exception!
//      try { 
        document0.getElementsByIndexEquals((-1381));
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.select.NodeTraversor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("sup", parseSettings0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "w[#;hvO6Oy+Q6C", (Attributes) null);
      // Undeclared exception!
//      try { 
        pseudoTextElement0.getElementsByClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("scripqdatadouble<schpeedasl", "scripqdatadouble<schpeedasl");
      List<Node> list0 = document0.childNodesCopy();
      document0.childNodes = list0;
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueStarting("scripqdatadouble<schpeedasl", "Children collection to be inserted must not be null.");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.select.NodeTraversor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Element element0 = new Element(">o3/74iWaQff!$=~");
      // Undeclared exception!
//      try { 
        element0.getElementsByAttributeValueStarting((String) null, "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("textarea");
      FormElement formElement0 = new FormElement(tag0, "]&2e8EyT6", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.getElementsByAttributeValueNot("^", "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Document.createShell(":%s(%dn%+dd)");
      document0.siblingIndex = (-24);
      document0.setParentNode(document0);
      Pattern pattern0 = Pattern.compile(":%s(%dn%+dd)");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueMatching(":%s(%dn%+dd)", pattern0);
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Document document0 = Document.createShell("Children collection to be inserted must not be null.");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueMatching((String) null, (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Document document0 = new Document("AlgW&SBn{N1lTg~RA^A");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueMatching("", "AlgW&SBn{N1lTg~RA^A");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Pattern syntax error: AlgW&SBn{N1lTg~RA^A
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("AlgW&SBn{N1lTg~RA^A", "AlgW&SBn{N1lTg~RA^A");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueEnding("AlgW&SBn{N1lTg~RA^A", (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Tag tag0 = Tag.valueOf("b1");
      CDataNode cDataNode0 = new CDataNode("org.jsoup.nodes.Element$NodeList");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "b1", attributes0);
      attributes0.keys = null;
      // Undeclared exception!
//      try { 
        element0.getElementsByAttributeValueContaining("!", "org.jsoup.nodes.Element$NodeList");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "qKg ^!Y|HzT@~gd/|0");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueContaining((String) null, "head");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("% Dn-5QG+|t", "data");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValue("", "value");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeStarting("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttribute("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.parser.XmlTreeBuilder", "mark");
      // Undeclared exception!
//      try { 
        document0.getElementById((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = new Document("ZAFx");
      // Undeclared exception!
//      try { 
        document0.firstElementSibling();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Tag tag0 = Tag.valueOf("]N");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "D1H\"]>mEP3'vmp| x", attributes0);
      Element element0 = pseudoTextElement0.appendElement("B}kC~ Oo7LKaFTCO");
      // Undeclared exception!
//      try { 
        element0.cssSelector();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query 'b}kc': unexpected token at '}kc'
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("mark", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("mark");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "class", attributes0);
      pseudoTextElement0.setParentNode(cDataNode0);
      // Undeclared exception!
//      try { 
        pseudoTextElement0.cssSelector();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("y<evz55Y8|_L2W", "unknown combinator:");
      // Undeclared exception!
//      try { 
        document0.classNames((Set<String>) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Element element0 = new Element(",");
      // Undeclared exception!
//      try { 
        element0.child(0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Document document0 = new Document("8m+yCMOc6=B");
      // Undeclared exception!
//      try { 
        document0.child((-1432352094));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("3&5c[`9!y", "3&5c[`9!y");
      Comment comment0 = new Comment("3&5c[`9!y");
      comment0.reparentChild(document0);
      // Undeclared exception!
//      try { 
        document0.before((Node) comment0);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.AbstractList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Document document0 = Document.createShell("4m'\"iTqRW<");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.before("4m'\"iTqRW<");
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = Document.createShell("o");
      TextNode textNode0 = new TextNode("3#9");
      document0.setParentNode(textNode0);
      // Undeclared exception!
//      try { 
        document0.before("3#9");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Tag tag0 = Tag.valueOf("reversed");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "reversed", attributes0);
      attributes0.keys = null;
      // Undeclared exception!
//      try { 
        formElement0.attr("bT", true);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("-", "DOCTYPE");
      // Undeclared exception!
//      try { 
        document0.attr((String) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.attr("", "8H`u()1z*l7wP}");
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("mark", "mark");
      // Undeclared exception!
//      try { 
        document0.attr((String) null, "q");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.ParseSettings", e);
//      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      Comment comment0 = new Comment("");
      document0.setParentNode(comment0);
      // Undeclared exception!
//      try { 
        document0.appendTo(document0);
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.AbstractList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Document document0 = Parser.parse(".0", ".0");
      // Undeclared exception!
//      try { 
        document0.appendText((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("[", "[");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.appendElement("RV{9F.;x}@]L+");
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Document document0 = new Document("mdarV");
      Tag tag0 = Tag.valueOf("mdarV");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "mdarV", attributes0);
      List<Node> list0 = document0.childNodes();
      pseudoTextElement0.childNodes = list0;
      // Undeclared exception!
//      try { 
        pseudoTextElement0.appendElement("C)");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Collections$UnmodifiableCollection", e);
//      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = Document.createShell("j^|d&o<!+Sk8Z^ka");
      // Undeclared exception!
//      try { 
        document0.appendElement((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      Document document1 = (Document)document0.appendText("br");
      document1.reparentChild(document0);
      document1.siblingIndex = 1579;
      Tag tag0 = Tag.valueOf(" />");
      CDataNode cDataNode0 = new CDataNode((String) null);
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "", attributes0);
      // Undeclared exception!
//      try { 
        pseudoTextElement0.appendChild(document1);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 1579, Size: 2
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("QZe#0,Oh:", "QZe#0,Oh:");
      // Undeclared exception!
//      try { 
        document0.appendChild((Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.append("br");
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader(" > ");
      Document document0 = parser0.parseInput((Reader) stringReader0, " > ");
      // Undeclared exception!
//      try { 
        document0.append((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("4m'\"iTqRW<", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("n[jdJ]Ny&>L..$F|");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "Nvv=?jm`&R2r{6Z", attributes0);
      Element element0 = pseudoTextElement0.doClone(cDataNode0);
      // Undeclared exception!
//      try { 
        element0.append("n[jdJ]Ny&>L..$F|");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("mark");
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("yR;Z-Ley!j(G_NoL", "%s");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
//      try { 
        document0.after((Node) cDataNode0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 1, Size: 0
//         //
//         verifyException("java.util.AbstractList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("mark", "mark");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.after("head");
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Document.createShell("scripqdatadouble<schpeedasl");
      Element element0 = document0.appendElement("java.lang.string@0000000067");
      element0.setSiblingIndex(23);
      // Undeclared exception!
//      try { 
        element0.after("java.lang.string@0000000067");
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 24, Size: 2
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Tag tag0 = Tag.valueOf(" />");
      CDataNode cDataNode0 = new CDataNode(" />");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, " />", attributes0);
      attributes0.vals = null;
      // Undeclared exception!
//      try { 
        pseudoTextElement0.addClass(" />");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Attributes", e);
//      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Tag tag0 = Tag.valueOf("^,+MmgR pI{%C=$]X");
      Element element0 = new Element(tag0, "^,+MmgR pI{%C=$]X");
      // Undeclared exception!
//      try { 
        element0.addClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("A");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = null;
//      try {
        element0 = new Element((Tag) null, "</", attributes0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Element element0 = null;
//      try {
        element0 = new Element((Tag) null, " .");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Element element0 = null;
//      try {
        element0 = new Element("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("AlgW&SBn{N1lTg~RA^A", "AlgW&SBn{N1lTg~RA^A");
      Element element0 = document0.shallowClone();
      element0.html((BufferedWriter) null);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("mark", "mark");
      document0.addClass("mark");
      document0.toggleClass("org.jsoup.nodes.Element");
      document0.hasClass("org.jsoup.nodes.Element");
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Document.createShell("mark");
      document0.hasClass("mark");
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("scripqatadouble<schpeedasl", "scripqatadouble<schpeedasl");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add((String) null);
      // Undeclared exception!
//      try { 
        document0.classNames((Set<String>) linkedHashSet0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.System", e);
//      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      document0.prepend("Hpz=u52~0_8, ");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Tag tag0 = Tag.valueOf("reversed");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.Evaluator$MatchText", attributes0);
      formElement0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Document document0 = Parser.parse("        ", "Insert position out of bounds.");
      Element element0 = document0.body();
      element0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("mark", "mark");
      document0.setParentNode(document0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("RV{9F.;x}@]L+", "RV{9F.;x}@]L+");
      Element element0 = document0.body();
      Element element1 = element0.previousElementSibling();
      element1.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      document0.addChildren(nodeArray0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Parser", "S$");
      Element element0 = document0.head();
      Element element1 = element0.val("org.jsoup.internal.Normalizer");
      element1.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      document0.reparentChild(document0);
      document0.cssSelector();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("maFk", "60Q`\"dBFhBoVbJ9%EG");
      Element element0 = document0.body();
      element0.html("AlgW&SBn{N1lTg~RA^A");
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Parser.parse("Jx&6=$& -3DeiGy", "Jx&6=$& -3DeiGy");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Parser", "S$");
      document0.getElementById("]KV\"n~YS>_Yzr03Mb");
      document0.absUrl(",d");
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("DerY</.;", "DerY</.;");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("@10a<vb", "@10a<vb");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      document0.empty();
      document0.getElementsByIndexLessThan(32);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Element element0 = new Element("progress");
      element0.baseUri();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("4m'\"iTqRW<", "4m'\"iTqRW<");
      Pattern pattern0 = Pattern.compile("4m'\"iTqRW<", 2497);
      document0.getElementsByAttributeValueMatching("4m'\"iTqRW<", pattern0);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Parser.parse("n^lidrte", "n^lidrte");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Element element0 = new Element("progress");
      element0.prependText("progress");
      element0.appendElement("$=");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.outline(true);
      // Undeclared exception!
//      try { 
        element0.outerHtmlTail((Appendable) null, 4, document_OutputSettings0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Element element0 = new Element("progress");
      element0.prependText("progress");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.outline(true);
      // Undeclared exception!
//      try { 
        element0.outerHtmlTail((Appendable) null, 4, document_OutputSettings0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Element element0 = new Element("progress");
      element0.prependText("progress");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        element0.outerHtmlTail((Appendable) null, 4, document_OutputSettings0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("scripqdatadouble<schpeedasl", "scripqdatadouble<schpeedasl");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "scripqdatadouble<schpeedasl");
      // Undeclared exception!
//      try { 
        document0.html(charBuffer0);
//        fail("Expecting exception: ReadOnlyBufferException");
      
//      } catch(ReadOnlyBufferException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.StringCharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("mark", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("mark");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "mark", attributes0);
      pseudoTextElement0.appendElement("br");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
//      try { 
        pseudoTextElement0.html(pipedWriter0);
//        fail("Expecting exception: RuntimeException");
      
//      } catch(RuntimeException e) {
//         //
//         // java.io.IOException: Pipe not connected
//         //
//         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
//      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("#9mdar", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("#9mdar");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "#9mdar", attributes0);
      pseudoTextElement0.appendElement("br");
      pseudoTextElement0.toString();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Document.createShell("y09w");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      Document document1 = document0.outputSettings(document_OutputSettings1);
      document1.html();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("textarea", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "textarea", attributes0);
      formElement0.val("textarea");
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("textarea");
      FormElement formElement0 = new FormElement(tag0, "]&2e8EyT6", attributes0);
      formElement0.val();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("RV{9F.;x}@]L+", "RV{9F.;x}@]L+");
      document0.addClass("RV{9F.;x}@]L+");
      Element element0 = document0.toggleClass("a}5l-6.");
      element0.toggleClass("a}5l-6.");
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("V5;8nA9&h,Mx.#G", "V5;8nA9&h,Mx.#G");
      Element element0 = document0.addClass("V5;8nA9&h,Mx.#G");
      document0.toggleClass("V5;8nA9&h,Mx.#G");
      element0.getElementsByClass("V5;8nA9&h,Mx.#G");
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("reversed", "=&");
      document0.addClass("Insert position out of bounds.");
      document0.toggleClass("");
      document0.hasClass("textarea");
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = Parser.parse("hyZ1/;\"vhN^F}DV@w", "hyZ1/;\"vhN^F}DV@w");
      document0.getAllElements();
      document0.addClass("hyZ1/;\"vhN^F}DV@w");
      Pattern pattern0 = Pattern.compile("jada.lanx.string@0000000067");
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      document0.toggleClass("hyZ1/;\"vhN^F}DV@w");
      document0.hasClass("java.lang.string@0000000067");
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Document document0 = new Document("A}");
      document0.addClass(".|c228");
      document0.toggleClass("Tag name must not be empty.");
      document0.hasClass("A}");
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = Parser.parse("DgvcYAw.y", "DgvcYAw.y");
      document0.addClass("DgvcYAw.y");
      document0.toggleClass(" />");
      document0.hasClass("^]^G#OZm2n");
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Document document0 = Parser.parse("WMmZ\"iTqRW<", "WMmZ\"iTqRW<");
      document0.addClass("<q4&ew");
      document0.toggleClass("WMmZ\"iTqRW<");
      document0.hasClass("org.jsoup.select.CombiningEvaluator$And");
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("s[t\"}Xzf)9)v36-)k", "");
      document0.toggleClass("h");
      document0.hasClass("Could not parse query '%s': unexpected token at '%s'");
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("D;egvYAw.y", "D;egvYAw.y");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Parser.parse("P", "              ");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("0", "0");
      document0.setParentNode(document0);
      document0.getElementsContainingText("0");
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Element.preserveWhitespace((Node) null);
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("#9mdar", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("#9mdar");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "#9mdar", attributes0);
      pseudoTextElement0.appendElement("br");
      Pattern pattern0 = Pattern.compile("#9mdar");
      pseudoTextElement0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = new Document("8m+yCMOc6=B");
      CDataNode cDataNode0 = new CDataNode("sm&~N{pYs");
      Element element0 = document0.appendChild(cDataNode0);
      Pattern pattern0 = Pattern.compile("org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling");
      element0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("DerY</.;", "DerY</.;");
      Pattern pattern0 = Pattern.compile("DerY</.;");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      document0.appendText("@o?40|o0hsPu");
      document0.title("@k");
      Pattern pattern0 = Pattern.compile("@o?40|o0hsPu", 63);
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      Element element0 = document0.appendText("br");
      Pattern pattern0 = Pattern.compile("8k", 63);
      element0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("BeforeAttIributeName", "BeforeAttIributeName");
      document0.prepend("BeforeAttIributeName");
      document0.getElementsContainingText("BeforeAttIributeName");
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("#9mdar", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("#9mdar");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "#9mdar", attributes0);
      pseudoTextElement0.appendElement("br");
      Pattern pattern0 = Pattern.compile("#9mdar");
      Element element0 = pseudoTextElement0.prependText("br");
      element0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("y& Aw_A %", "y& Aw_A %");
      Element element0 = document0.appendElement("Fy");
      Elements elements0 = document0.getElementsContainingText("+9[");
      element0.insertChildren((-1), (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("HB7kN@cX!_^D", "HB7kN@cX!_^D");
      DocumentType documentType0 = new DocumentType("HB7kN@cX!_^D", "HB7kN@cX!_^D", "");
      document0.appendChild(documentType0);
      document0.getElementsContainingText("ow");
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("TagOpen", "';egvYAw.y");
      Element element0 = document0.appendElement("';egvYAw.y");
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = new Document("ZAFx");
      Element element0 = document0.prependElement("Q.#bfD3Z");
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      Element element0 = document0.head();
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      document0.reparentChild(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("R", "R");
      Element element0 = document0.body();
      element0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Document document0 = Parser.parse("mark", "mark");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("?q$", "?q$");
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("4m'\"iTqRW<", "4m'\"iTqRW<");
      Element element0 = document0.head();
      Elements elements0 = element0.nextElementSiblings();
      assertEquals(1, elements0.size());
      assertEquals("4m'\"iTqRW<", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Document document0 = Document.createShell("@k");
      document0.siblingElements();
      assertEquals(1, document0.childNodeSize());
      assertEquals("@k", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Document document0 = Document.createShell("mark");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.addChildren(nodeArray0);
      document0.siblingElements();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("D;ew&gvYAw.y", "D;ew&gvYAw.y");
      Element element0 = document0.body();
      element0.wrap("/z>5X| >Q");
      String string0 = element0.cssSelector();
      assertEquals("D;ew&gvYAw.y", element0.baseUri());
      assertEquals("html > head:nth-child(2) > body:nth-child(1)", string0);
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("D;ew&gvYAw.y", "D;ew&gvYAw.y");
      Element element0 = document0.body();
      String string0 = element0.cssSelector();
      assertEquals("D;ew&gvYAw.y", element0.baseUri());
      assertEquals("html > body", string0);
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Attributes$Dataset$EntrySet", "org.jsoup.nodes.Attributes$Dataset$EntrySet");
      document0.toggleClass("org.jsoup.nodes.Attributes$Dataset$EntrySet");
      document0.cssSelector();
      assertEquals("org.jsoup.nodes.Attributes$Dataset$EntrySet", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Tag tag0 = Tag.valueOf(">+GRtx}z&T\"6#^w:j");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "fpd})_X?*|!,q%H};", attributes0);
      Node[] nodeArray0 = new Node[4];
      // Undeclared exception!
//      try { 
        formElement0.insertChildren(1, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Parser", "S$");
      Node[] nodeArray0 = new Node[4];
      // Undeclared exception!
//      try { 
        document0.insertChildren((-1110026255), nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Parser", "S$");
      List<DataNode> list0 = document0.dataNodes();
      // Undeclared exception!
//      try { 
        document0.insertChildren(5, (Collection<? extends Node>) list0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Document document0 = Document.createShell("");
      LinkedHashSet<XmlDeclaration> linkedHashSet0 = new LinkedHashSet<XmlDeclaration>();
      // Undeclared exception!
//      try { 
        document0.insertChildren((-1099), (Collection<? extends Node>) linkedHashSet0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("y& Aw_A %", "y& Aw_A %");
      Elements elements0 = document0.getElementsContainingText("+9[");
      assertTrue(elements0.isEmpty());
      
      Element element0 = document0.insertChildren((-1), (Collection<? extends Node>) elements0);
      assertEquals(1, element0.childNodeSize());
      assertEquals("y& Aw_A %", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.parser.Parser", "S$");
      LinkedHashSet<FormElement> linkedHashSet0 = new LinkedHashSet<FormElement>();
      Element element0 = document0.insertChildren(0, (Collection<? extends Node>) linkedHashSet0);
      assertEquals(1, element0.childNodeSize());
      assertEquals("S$", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("cU}Pa~1g<oX[", "");
      DataNode dataNode0 = new DataNode((String) null);
      document0.prependChild(dataNode0);
      document0.dataNodes();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Document document0 = new Document("8m+yCMOc6=B");
      CDataNode cDataNode0 = new CDataNode("sm&~N{pYs");
      document0.appendChild(cDataNode0);
      List<TextNode> list0 = document0.textNodes();
      assertFalse(list0.isEmpty());
      assertEquals("8m+yCMOc6=B", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Document document0 = Parser.parse(">+GRtx}z&T\"6#^w:j", ">+GRtx}z&T\"6#^w:j");
      List<TextNode> list0 = document0.textNodes();
      assertTrue(list0.isEmpty());
      assertEquals(">+GRtx}z&T\"6#^w:j", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("HB7k?_N@ycX!_^D", "HB7k?_N@ycX!_^D");
      document0.setParentNode(document0);
      Elements elements0 = document0.previousElementSiblings();
      Elements elements1 = document0.children();
      assertFalse(elements1.equals((Object)elements0));
      assertEquals("HB7k?_N@ycX!_^D", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("33Y M@a5", "s+");
      Elements elements0 = document0.getElementsByIndexGreaterThan(534);
      assertTrue(elements0.isEmpty());
      assertEquals("s+", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("4m'\"iTqRW<", "4m'\"iTqRW<");
      Element element0 = document0.selectFirst("html");
      assertEquals("4m'\"iTqRW<", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("cU}Pa~1g<oX[", "");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingText("cU}Pa~1g<oX[");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Pattern syntax error: cU}Pa~1g<oX[
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("cr", "cr");
      // Undeclared exception!
//      try { 
        document0.is("Sv~n862(L%e$");
//        fail("Expecting exception: MissingFormatArgumentException");
      
//      } catch(MissingFormatArgumentException e) {
//         //
//         // Format specifier '%e'
//         //
//         verifyException("java.util.Formatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("8(x?ka?O?I`fV0", "8(x?ka?O?I`fV0");
      // Undeclared exception!
//      try { 
        document0.before("8(x?ka?O?I`fV0");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Nza-v>3OP", "command");
      document0.getElementsByAttribute("EResQ^Wu6");
      assertEquals(1, document0.childNodeSize());
      assertEquals("command", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("TagOpen", "';egvYAw.y");
      document0.getElementsByAttributeValueNot("del", "';egvYAw.y");
      assertEquals("';egvYAw.y", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Document document0 = Document.createShell("mark");
      // Undeclared exception!
//      try { 
        document0.appendTo((Element) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Document document0 = Parser.parse("ow", "g@5Q3a<>oI");
      // Undeclared exception!
//      try { 
        document0.after((Node) document0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("AlgW&SBn{N1lTg~RA^A", "AlgW&SBn{N1lTg~RA^A");
      document0.getElementsByAttributeValueContaining("AlgW&SBn{N1lTg~RA^A", "jqC4g2uPI^vCZ+.OrDX");
      assertEquals("AlgW&SBn{N1lTg~RA^A", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Document document0 = Document.createShell("mark");
      Elements elements0 = document0.getElementsByClass("mark");
      assertEquals(1, document0.childNodeSize());
      assertEquals(0, elements0.size());
      assertEquals("mark", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("HBnb7kN,cX!_^D", "HBnb7kN,cX!_^D");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueEnding(" />", "'");
//        fail("Expecting exception: StringIndexOutOfBoundsException");
      
//      } catch(StringIndexOutOfBoundsException e) {
//      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Element element0 = new Element(",");
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      boolean boolean0 = element0.is((Evaluator) evaluator_IsEmpty0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Nza-v>3OP", "command");
      document0.getElementsByAttributeValueMatching("Nza-v>3OP", ".0");
      assertEquals(1, document0.childNodeSize());
      assertEquals("command", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Nza-v>3OP", "command");
      // Undeclared exception!
//      try { 
        document0.wrap("hLF/b=@PWI@BR>P");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A", "");
      Elements elements0 = document0.getElementsByIndexEquals(40);
      assertEquals(1, document0.childNodeSize());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("rcdataendtagopen", "rcdataendtagopen");
      document0.getElementsByAttributeStarting("L-b J_~2+");
      assertEquals(1, document0.childNodeSize());
      assertEquals("rcdataendtagopen", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("@10a<vb", "@10a<vb");
      Elements elements0 = document0.getElementsByIndexLessThan(32);
      assertEquals("@10a<vb", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("D;egvYAw.y", "D;egvYAw.y");
      // Undeclared exception!
//      try { 
        document0.after("9");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("cr", "cr");
      Elements elements0 = document0.getElementsMatchingOwnText("cr");
      assertEquals(1, document0.childNodeSize());
      assertEquals("cr", document0.baseUri());
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.StructuralEvaluator$Has", "@k");
      document0.prepend("}@_r<!8");
      document0.data();
      assertEquals(3, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("reversed");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "reversed", attributes0);
      Element element0 = pseudoTextElement0.appendElement("hoSqB<B-VRAh[%t\"Y%");
      // Undeclared exception!
//      try { 
        element0.cssSelector();
//        fail("Expecting exception: UnknownFormatConversionException");
      
//      } catch(UnknownFormatConversionException e) {
//         //
//         // Conversion = 't'
//         //
//         verifyException("java.util.Formatter$FormatSpecifier", e);
//      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("scripqdatadouble<schpeedasl", "scripqdatadouble<schpeedasl");
      document0.getElementsByAttributeValueStarting("scripqdatadouble<schpeedasl", "Children collection to be inserted must not be null.");
      assertEquals("scripqdatadouble<schpeedasl", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Tag tag0 = Tag.valueOf("!H,|UL!-7]k");
      CDataNode cDataNode0 = new CDataNode("");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "id", attributes0);
      pseudoTextElement0.getElementsByAttributeValue("id", "!H,|UL!-7]k");
      assertEquals("id", pseudoTextElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Element element0 = new Element("div");
      Element element1 = element0.attr("yE{~dtk", false);
      assertFalse(element1.hasParent());
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("33Y M@a5", "s+");
      document0.wholeText();
      assertEquals("s+", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("3&5c[`9!y", "3&5c[`9!y");
      Comment comment0 = new Comment("3&5c[`9!y");
      // Undeclared exception!
//      try { 
        document0.before((Node) comment0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Element element0 = new Element("progress");
      String string0 = element0.toString();
      assertEquals("<progress></progress>", string0);
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Document document0 = Parser.parse("DgvcYAw.y", "DgvcYAw.y");
      document0.addClass("DgvcYAw.y");
      document0.hasClass("^]^G#OZm2n");
      assertEquals("DgvcYAw.y", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("3&hcr[`9!y", "3&hcr[`9!y");
      Elements elements0 = document0.getElementsContainingOwnText("|y<6S~%n'lxsGo`2y");
      assertEquals("3&hcr[`9!y", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("ismap", " />");
      document0.dataset();
      assertEquals(" />", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Document document0 = Parser.parse("P", "              ");
      document0.html("              ");
      boolean boolean0 = document0.hasText();
      assertEquals(1, document0.childNodeSize());
      assertFalse(boolean0);
      assertEquals("              ", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "X;bwx|,[FP");
      // Undeclared exception!
//      try { 
        document0.tagName("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Tag name must not be empty.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Document document0 = Parser.parse("#root", "value");
      assertEquals(1, document0.childNodeSize());
      
      Element element0 = document0.child(0);
      assertNotNull(element0);
      assertEquals("value", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("):", "mark");
      document0.previousElementSiblings();
      assertEquals(1, document0.childNodeSize());
      assertEquals("mark", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("D;egvYAw.y", "D;egvYAw.y");
      DocumentType documentType0 = new DocumentType("<html>\n <head></head>\n <body>\n  D;egvYAw.y\n </body>\n</html>", "<html>\n <head></head>\n <body>\n  D;egvYAw.y\n </body>\n</html>", "D;egvYAw.y", "ZXHiM/2~r{r67\bCg");
      Element element0 = document0.prependChild(documentType0);
      boolean boolean0 = element0.hasText();
      assertEquals(2, document0.childNodeSize());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("4m'\"iTqRW<", "4m'\"iTqRW<");
      document0.nextElementSiblings();
      assertEquals("4m'\"iTqRW<", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Document document0 = Parser.parse("", "a=&0$V\"_L,GG");
      document0.id();
  }
}
