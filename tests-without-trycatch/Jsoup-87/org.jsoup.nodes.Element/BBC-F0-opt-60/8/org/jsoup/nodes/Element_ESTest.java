/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 23:26:13 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileDescriptor;
import java.io.Reader;
import java.io.StringReader;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parse("W;S)2\"[3", "W;S)2\"[3");
      Element element0 = document0.toggleClass("-->");
      element0.toggleClass("Yw_!<V'");
      document0.hasClass("W;S)2\"[3");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Pattern syntax error: ", "b~5RA&(kZr");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueMatching(":contains(%s)", "/<o7({dMnAlX");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Pattern syntax error: /<o7({dMnAlX
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$~Jt|7", "_*k1$~Jt|7");
      Element element0 = document0.prependElement("_*k1$~Jt|7");
      document0.html("=dys];w2~0^}&S\"&Q$");
      element0.nextElementSiblings();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = Document.createShell("0O6PX\\n*Rqeds~");
      Node[] nodeArray0 = new Node[0];
      document0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = new Document("tt");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = new Document("R96+j1g^i");
      document0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingText("_]H_f'5C4{ks}\"M");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Pattern syntax error: _]H_f'5C4{ks}\"M
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "H*qkae-7?+A?x[M\"j");
      Parser parser0 = Parser.xmlParser();
      Document document1 = document0.parser(parser0);
      document1.wrap("s@ChTS/B&jh6I^p|U-");
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = Document.createShell("0{");
      Element element0 = document0.body();
      element0.wrap("F4Pt");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      Element element0 = document0.head();
      element0.append("hgroup");
      element0.wrap("_*k1$'~Jt|7");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", "head");
      Element element0 = document0.body();
      element0.val("WSQ?Su&8");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = Document.createShell("_*k1$'~Jt|7");
      Element element0 = document0.prependElement("_*k1$'~Jt|7");
      Element element1 = element0.nextElementSibling();
      element1.text("");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = Document.createShell("_*k1$'~Jt|7");
      document0.text("");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = new Document("R96+j1g^i");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = new Document("bgsound");
      document0.tagName("html");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Parser.parse("W;S)2\"[3", "n_V]");
      Element element0 = document0.appendElement("d");
      element0.tagName("bgsound");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "H*qkae-7?+A?x[M\"j");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Element element0 = new Element("_*k1$'~Jt|7");
      Element element1 = element0.prependElement("bgsound");
      element1.tag();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = Parser.parse("W;S)2\"[3", "n_V]");
      Element element0 = document0.body();
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("3]4", "3]4");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Document.createShell("_*k'~J7");
      Element element0 = document0.prependElement("_*k'~J7");
      Element element1 = element0.nextElementSibling();
      element1.shallowClone();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", ";![Ao=8\"'?K]");
      document0.selectFirst("textarea");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = Document.createShell("0O6PX\\n*Rqeds~");
      document0.selectFirst("html");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("A", "_*k1$'~Jt|7");
      document0.select("ol");
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Parser.parse("W;S)2\"[3", "n_V]");
      Element element0 = document0.body();
      element0.removeClass("-->");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", ";![Ao=8\"'?K]");
      Element element0 = document0.head();
      element0.removeClass("");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Parser.parse("W;S)2\"[3", "n_V]");
      document0.removeClass("-->");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", "head");
      Element element0 = document0.body();
      element0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("$t.9QNc%tt6", "$t.9QNc%tt6");
      Element element0 = document0.prependElement("a");
      document0.prependElement("$t.9QNc%tt6");
      Element element1 = element0.nextElementSibling();
      element1.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("eZ%UPj", "eZ%UPj");
      Element element0 = document0.appendElement("^\"46*V");
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = Parser.parse("W;S)2\"[3", "n_V]");
      Element element0 = document0.body();
      element0.prependText("n_V]");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      document0.prependElement("body");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Document.createShell("0{");
      Element element0 = document0.body();
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = Document.createShell("_*k1$'~Jt|7");
      Element element0 = document0.prependElement("_*k1$'~Jt|7");
      Element element1 = element0.nextElementSibling();
      element1.prepend("_*k1$'~Jt|7");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = new Document("R96+j1g^i");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("A", "_*k1$'~Jt|7");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Document.createShell("_*k'~J7");
      document0.prependElement("_*k'~J7");
      Element element0 = document0.body();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Document.createShell("_*k'~J7");
      Element element0 = document0.body();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Document.createShell("_*k'~J7");
      Element element0 = document0.prependElement("_*k'~J7");
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("AttributeValue_doubleQuoted", "AttributeValue_doubleQuoted");
      Element element0 = document0.body();
      element0.ownText();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = new Document("R96+j1g^i");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Document document0 = Document.createShell("_*k'~J7");
      document0.prependElement("_*k'~J7");
      Element element0 = document0.prependElement("org.jsoup.select.Evaluator$IsNthChild");
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Element element0 = new Element("_*kJ$'~Jt37");
      element0.prependElement("bgsound");
      Element element1 = element0.val("_*k1$'~Jt|7");
      element1.prependChild(element0);
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Parser.parse("d3&DPjC*T-P", "d3&DPjC*T-P");
      Element element0 = document0.prependElement("d3&DPjC*T-P");
      Element element1 = element0.nextElementSibling();
      element1.isBlock();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.helper.Validate");
      Element element0 = new Element(tag0, "j3M [?a=N|{lM=bKD");
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      element0.is((Evaluator) evaluator_AllElements0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "");
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      document0.is((Evaluator) evaluator_IsEmpty0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      Element element0 = document0.prependElement("bg5Usound");
      element0.is("bg5Usound");
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      document0.is("bg5Usound");
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.appendText("");
      document0.insertChildren((-2), nodeArray0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parse("_*k1$'~Jt|gd57", "_*k1$'~Jt|gd57");
      document0.appendTo(document0);
      List<TextNode> list0 = document0.textNodes();
      document0.insertChildren(0, (Collection<? extends Node>) list0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "H*qkae-7?+A?x[M\"j");
      Elements elements0 = document0.getElementsByAttribute("C1 1}");
      Element element0 = document0.head();
      element0.insertChildren(0, (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Parser.parse("W;S)2\"[3", "n_V]");
      Element element0 = document0.body();
      element0.html("W;S)2\"[3");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = new Document("");
      document0.html("");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = Document.createShell("_*k'~J7");
      Element element0 = document0.prependElement("_*k'~J7");
      element0.html();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", ":nth-child(%d)");
      document0.attr("org.jsoup.nodes.Entities", true);
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Parser.parse("H*qkae-7?+A?x[M\"j", "H*qkae-7?+A?x[M\"j");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("String must not be empty", "[ AlbK!s%");
      Pattern pattern0 = Pattern.compile("[ AlbK!s%", 51);
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      document0.getElementsMatchingText("_*k1$'~Jt|7");
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$~Jt|7", "_*k1$~Jt|7");
      Pattern pattern0 = Pattern.compile("CharacterReferenceInData");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Tag tag0 = Tag.valueOf("!B.i");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "footer", attributes0);
      element0.getElementsMatchingOwnText("footer");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "");
      document0.getElementsMatchingOwnText("");
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Document.createShell("!B.i");
      document0.getElementsContainingText((String) null);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|gd57", ";![Ao=8\"'?K]");
      document0.getElementsContainingOwnText("_*k1$'~Jt|gd57");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element", "");
      document0.getElementsByTag("=^QK}>zq!b~V<:otF~?");
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Element element0 = new Element("_*k1$'~Jt|7");
      element0.getElementsByTag("_*k1$'~Jt|7");
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "");
      document0.getElementsByIndexLessThan(40);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Element element0 = new Element("{A@7R7>z42p");
      element0.getElementsByIndexGreaterThan((-641));
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = Document.createShell("trT");
      document0.getElementsByIndexEquals((-1619));
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.Element$1");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("org.jsoup.nodes.Element$1", "textarea");
      Element element0 = new Element(tag0, "org.jsoup.nodes.Element$1", attributes1);
      element0.getElementsByAttributeValueNot("org.jsoup.nodes.Element$1", "textarea");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = Parser.parse("H*qkae-7?+A?x[M\"j", "H*qkae-7?+A?x[M\"j");
      document0.getElementsByAttributeValueEnding("H*qkae-7?+A?x[M\"j", "H*qkae-7?+A?x[M\"j");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", ";![Ao=8\"'?K]");
      document0.appendChild(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Document.createShell("dR[u}LkYc(1Z2");
      Element element0 = document0.prependElement("dR[u}LkYc(1Z2");
      Element element1 = element0.nextElementSibling();
      element1.empty();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = Document.createShell("dR[u}LkYc(1Z2");
      Element element0 = document0.prependElement("dR[u}LkYc(1Z2");
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      Element element0 = document0.prependElement("_*k1$'~Jt|7");
      Element element1 = element0.nextElementSibling();
      element1.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = Parser.parse("W;S)2\"[3", "W;S)2\"[3");
      Element element0 = document0.body();
      Element element1 = element0.toggleClass("-->");
      element1.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("eZ%UPj", "eZ%UPj");
      Element element0 = document0.appendElement("eZ%UPj");
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = Document.createShell("0{");
      Element element0 = document0.body();
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("dR[u}LkYc(1Z2", "dR[u}LkYc(1Z2");
      document0.appendTo(document0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      document0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Tag tag0 = Tag.valueOf("body");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "head", attributes0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      formElement0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parse("y{", "n_V]");
      document0.toggleClass("-");
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Element element0 = new Element("d");
      Element element1 = element0.toggleClass("=*s");
      element1.className();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      Element element0 = document0.prependElement("bg5Usound");
      element0.children();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("|D&7:V#3", parseSettings0);
      Element element0 = new Element(tag0, "html");
      element0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = new Document("");
      document0.normalise();
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_*k1$'~Jt|7", "P(VgnLpsa++3Ev.)1");
      document0.child(0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(">1gPRPA", "GGmRplyDI^");
      Element element0 = document0.body();
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      Element element0 = document0.appendElement("!=");
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      document0.prependChild(document0);
      document0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Parser.parse("W;S)2\"[3", "n_V]");
      Element element0 = document0.body();
      element0.before("n_V]");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "html");
      Document document1 = document0.clone();
      document1.prependChild(document0);
      document0.before(":contains(%s)");
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gV|Vs)ifEQ0uaY", "gV|Vs)ifEQ0uaY");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Element element0 = new Element(";Cm=7_Wl<[iX8M");
      element0.baseUri();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = Document.createShell("_*k1$'~Jt|7");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Document document0 = Parser.parse("W;S)2\"[3", "n_V]");
      Element element0 = document0.toggleClass("-->");
      element0.attributes();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = Document.createShell("_*G1$>~Jt|7");
      Element element0 = document0.body();
      element0.attr(",cz urhv*444+@++l", true);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = new Document("_*kJ$'~Jt37");
      Element element0 = document0.prependElement("bgsound");
      element0.before("_*kJ$'~Jt37");
      element0.attr("s", "s");
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Document.createShell("y*$H-G6YQ@K.5#B");
      Element element0 = document0.head();
      element0.attr("y*$H-G6YQ@K.5#B", "ltNKnn2ukA1?=,");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Tag tag0 = Tag.valueOf("head");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "head", attributes0);
      formElement0.attr("_*k1$'~Jt|7", "head");
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = Parser.parse("UBEA3,*WWso/(>", "UBEA3,*WWso/(>");
      Element element0 = document0.body();
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Element element0 = new Element("_*k1$'~Jt|g7");
      Element element1 = new Element("/R0['M");
      element0.appendTo(element1);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = Parser.parse("W;S)2\"[3", "n_V]");
      Element element0 = document0.body();
      element0.appendText("W;S)2\"[3");
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("eZ%UPj", "eZ%UPj");
      Element element0 = document0.appendElement("eZ%UPj");
      element0.appendElement("s+");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "html");
      document0.appendElement("head");
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      Element element0 = document0.body();
      element0.append("_*k1$'~Jt|7");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Element element0 = new Element("_*k1$'~Jt|7");
      Element element1 = element0.prependElement("_*k1$'~Jt|7");
      DataNode dataNode0 = new DataNode("_*k1$'~Jt|7");
      element1.after((Node) dataNode0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.insertChildren((-2), nodeArray0);
      document0.after(nodeArray0[0]);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Element element0 = new Element("_*kJ$'~Jt37");
      Element element1 = element0.prependElement("AkIW");
      element1.after("X>/'rU+O");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("'", "_*k1$'~Jt|7");
      Element element0 = document0.body();
      element0.after("3$([&U52K");
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = Parser.parse("eZ%UPj", "eZ%UPj");
      Element element0 = document0.body();
      element0.addClass("IX");
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = new Document("H*qkae-7?+A?x[M\"j");
      document0.addClass("");
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#", "S1|`W[");
      Document document1 = (Document)document0.appendChild(document0);
      // Undeclared exception!
      document1.wrap(":nth-child(%d)");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "H*qkae-7?+A?x[M\"j");
      // Undeclared exception!
//      try { 
        document0.wrap("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = Document.createShell("_*k1$~Jt|7");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.val("TXsFgzIut");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "H*qkae-7?+A?x[M\"j");
      // Undeclared exception!
//      try { 
        document0.toggleClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Document.createShell("_*k1$~Jt|7");
      Element element0 = document0.html("=dys];w2~0^}&S\"&Q$");
      // Undeclared exception!
//      try { 
        element0.text("_*kj$'~jt37");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Document", e);
//      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("[ AlbK!s%", "[ AlbK!s%");
      // Undeclared exception!
//      try { 
        document0.text((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = Document.createShell("0{");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.tagName("3c%*: _");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "");
      // Undeclared exception!
//      try { 
        document0.tagName("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Tag name must not be empty.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Parser.parse("gV|Vs)ifEQ0uaY", "gV|Vs)ifEQ0uaY");
      Element element0 = document0.prependElement("gV|Vs)ifEQ0uaY");
      document0.html("gV|Vs)ifEQ0uaY");
      // Undeclared exception!
//      try { 
        element0.siblingElements();
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Illegal Capacity: -1
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Parser.parse("W;S)2\"[3", "n_V]");
      // Undeclared exception!
//      try { 
        document0.selectFirst("-->");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query '-->': unexpected token at '-->'
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.nodes.Element$2");
      // Undeclared exception!
//      try { 
        document0.select("org.jsoup.nodes.Element$2");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query 'org.jsoup.nodes.Element$2': unexpected token at '$2'
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
//      try { 
        document0.select("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Tag tag0 = Tag.valueOf("H*qkae-7?+A?x[M\"j");
      CDataNode cDataNode0 = new CDataNode("&");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "org.jsoup.nodes.Element$NodeList", attributes0);
      // Undeclared exception!
//      try { 
        element0.removeClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", ";![Ao=8\"'?K]");
      // Undeclared exception!
//      try { 
        document0.prependText((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.prependElement("_*k1$'~Jt|7");
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Document.createShell("_*k1$~Jt|7");
      Parser parser0 = Parser.xmlParser();
      Parser parser1 = parser0.settings((ParseSettings) null);
      Document document1 = document0.parser(parser1);
      // Undeclared exception!
//      try { 
        document1.prependElement("org.jsoup.select.NodeTraversor");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.Tag", e);
//      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Document document0 = Document.createShell("Pattern syntax error: ");
      // Undeclared exception!
//      try { 
        document0.prependElement("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      // Undeclared exception!
//      try { 
        document0.prependChild((Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Document document0 = Document.createShell("_*k1$~Jt|7");
      Element element0 = document0.appendChild(document0);
      // Undeclared exception!
      element0.prepend("_*k1$~Jt|7");
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Parser.parse("r%|kxM_#wk47P", "r%|kxM_#wk47P");
      // Undeclared exception!
//      try { 
        document0.prepend((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "ismap");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("", false);
      document0.parentNode = (Node) xmlDeclaration0;
      // Undeclared exception!
//      try { 
        document0.prepend("ismap");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = new Document("AIQqI%yB;|Q");
      Document document1 = (Document)document0.appendChild(document0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(2741);
      // Undeclared exception!
      document1.outerHtmlTail(mockPrintWriter0, 8222, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("dR[u}LkYc(1Z2", "dR[u}LkYc(1Z2");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "dR[u}LkYc(1Z2");
      // Undeclared exception!
//      try { 
        document0.outerHtmlTail(charBuffer0, 60, document_OutputSettings0);
//        fail("Expecting exception: ReadOnlyBufferException");
      
//      } catch(ReadOnlyBufferException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.StringCharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = Parser.parse("kJ'~Jt7", "kJ'~Jt7");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      CharBuffer charBuffer0 = CharBuffer.allocate(2);
      // Undeclared exception!
//      try { 
        document0.outerHtmlTail(charBuffer0, 2, document_OutputSettings0);
//        fail("Expecting exception: BufferOverflowException");
      
//      } catch(BufferOverflowException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.CharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("F(Gt n-X0{Vs]", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("KGZPN>");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "F(Gt n-X0{Vs]", attributes0);
      StringBuilder stringBuilder0 = new StringBuilder("(s@,nn7Pi-");
      // Undeclared exception!
//      try { 
        formElement0.outerHtmlTail(stringBuilder0, 0, (Document.OutputSettings) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(">J:5\"nV&hb#WT6?,", ">J:5\"nV&hb#WT6?,");
      MockPrintStream mockPrintStream0 = new MockPrintStream("a");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        document0.outerHtmlTail(mockPrintStream0, (-23), document_OutputSettings0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // width must be > 0
//         //
//         verifyException("org.jsoup.internal.StringUtil", e);
//      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(">J:5\"nV&hb#WT6?,", ">J:5\"nV&hb#WT6?,");
      MockPrintStream mockPrintStream0 = new MockPrintStream("A\" NPd22");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(41);
      // Undeclared exception!
      document0.outerHtmlHead(mockPrintStream0, 2389, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#root", "#root");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("#root");
      // Undeclared exception!
//      try { 
        document0.outerHtmlHead(mockPrintWriter0, 6, (Document.OutputSettings) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element", "");
      MockFile mockFile0 = new MockFile("BL");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        document0.outerHtmlHead(mockPrintStream0, (-1621), document_OutputSettings0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // width must be > 0
//         //
//         verifyException("org.jsoup.internal.StringUtil", e);
//      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("|a :", ":nth-child(%d)");
      // Undeclared exception!
//      try { 
        document0.lastElementSibling();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Tag tag0 = Tag.valueOf("mgbgsound");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "mgbgsound", attributes0);
      Evaluator.Class evaluator_Class0 = new Evaluator.Class((String) null);
      // Undeclared exception!
//      try { 
        element0.is((Evaluator) evaluator_Class0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "textarea");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.is("textarea");
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", ";![Ao=8\"'?K]");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      // Undeclared exception!
//      try { 
        document0.insertChildren((-1), nodeArray0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 1, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = Parser.parse("eZ%UPj", "eZ%UPj");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.html("-->");
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("ck:}OMh]Mr24pI-T");
      Document document0 = parser0.parseInput((Reader) stringReader0, "ck:}OMh]Mr24pI-T");
      ParseErrorList parseErrorList0 = ParseErrorList.tracking(46);
      List<Node> list0 = Parser.parseFragment("8h5G<Z", (Element) document0, "ck:}OMh]Mr24pI-T", parseErrorList0);
      document0.childNodes = list0;
      // Undeclared exception!
//      try { 
        document0.html("M");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Collections$UnmodifiableCollection", e);
//      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Element", "Ln F");
      // Undeclared exception!
//      try { 
        document0.html((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Document.createShell("0{");
      Element element0 = document0.appendChild(document0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("0{");
      // Undeclared exception!
      element0.html(mockPrintWriter0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Element element0 = new Element("_*k1$'~Jt|7");
      Element element1 = element0.prependElement("bgsound");
      element1.val("_*k1$'~Jt|7");
      CharBuffer charBuffer0 = CharBuffer.allocate(13);
      // Undeclared exception!
//      try { 
        element0.html(charBuffer0);
//        fail("Expecting exception: BufferOverflowException");
      
//      } catch(BufferOverflowException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.CharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Gx>Gd{%3&:UL?+t", "i^=\"*,]&OwS_ P[");
      // Undeclared exception!
//      try { 
        document0.html((BufferedWriter) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|gd57", ";![Ao=8\"'?K]");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.html();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "textarea");
      DocumentType documentType0 = new DocumentType("/X", "q5Xw", "/X");
      document0.parentNode = (Node) documentType0;
      // Undeclared exception!
//      try { 
        document0.html();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = Parser.parse("eZ%UPj", "eZ%UPj");
      // Undeclared exception!
//      try { 
        document0.hasClass((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_*k1$'~Jt|7", "~*TD^>ruF/fsA;dF:");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingText((Pattern) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.select.Evaluator$Matches", e);
//      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = new Document("R96+j1g^i");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingText((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("/t~K(AMqxD%n", "\"(HhR)61F");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingOwnText((Pattern) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
//      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingOwnText("H*qkae-7?+A?x[M\"j");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Pattern syntax error: H*qkae-7?+A?x[M\"j
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = Parser.parse("tIxtarea", "tIxtarea");
      TextNode textNode0 = TextNode.createFromEncoded("disabled");
      document0.parentNode = (Node) textNode0;
      // Undeclared exception!
//      try { 
        document0.getElementsContainingOwnText("#root");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("[37vA@Yr>Vdqe|5RV", "[37vA@Yr>Vdqe|5RV");
      // Undeclared exception!
//      try { 
        document0.getElementsByTag("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "");
      // Undeclared exception!
//      try { 
        document0.getElementsByClass("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = Parser.parse("Children collection to be inserted must not be null.", "Children collection to be inserted must not be null.");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueStarting("", "org.jsoup.nodes.Document$QuirksMode");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "html");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueNot("head", "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Document.createShell("y*$H-G6YQ@K.5#B");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueMatching("br", (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parse("Children collection to be inserted must not be null.", "Children collection to be inserted must not be null.");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueContaining("", "#root");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValue("", "kXq>[`)&0U45(");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeStarting("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttribute("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", "head");
      // Undeclared exception!
//      try { 
        document0.getElementById("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|gd57", ";![Ao=8\"'?K]");
      // Undeclared exception!
//      try { 
        document0.firstElementSibling();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Element element0 = new Element("KGZPN>");
      Element element1 = element0.prependElement("RHwJ$m&y");
      // Undeclared exception!
//      try { 
        element1.cssSelector();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query 'rhwj$m&y': unexpected token at '$m&y'
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("%Jg>4_'e.G.vmS,h6", "_*k1$'~Jt|7");
      // Undeclared exception!
//      try { 
        document0.classNames((Set<String>) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Parser.parse("pqTcV.C)$t3+gC{+z", "pqTcV.C)$t3+gC{+z");
      // Undeclared exception!
//      try { 
        document0.child((-1436010313));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Document.createShell("_*k1$~Jt|7");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.before("T_*,B.jw.y#");
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      // Undeclared exception!
//      try { 
        document0.attr((String) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Document.createShell("_*k'~J7");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.attr("_*k'~J7_*k'~J7", "_*k'~J7_*k'~J7");
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element", "");
      // Undeclared exception!
//      try { 
        document0.attr((String) null, "org.jsoup.nodes.Element");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.ParseSettings", e);
//      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = new Document("_*kJ'~Jt7");
      Element element0 = document0.prependElement("bgsound");
      Element element1 = element0.val("_*kJ'~Jt7");
      element1.siblingIndex = 1340;
      // Undeclared exception!
//      try { 
        element0.appendTo(document0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 1340, Size: 1
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Element element0 = new Element("_*k1$'~Jt|7");
      // Undeclared exception!
//      try { 
        element0.appendTo((Element) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "");
      // Undeclared exception!
//      try { 
        document0.appendText((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.insertChildren((-2), nodeArray0);
      // Undeclared exception!
      document0.appendElement("");
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Parser.parse("_*k1$'~Jt|gd57", "_*k1$'~Jt|gd57");
      // Undeclared exception!
//      try { 
        document0.appendElement("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$~Jt|7", "_*k1$~Jt|7");
      // Undeclared exception!
//      try { 
        document0.appendChild((Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Tag tag0 = Tag.valueOf("0O6PX\\n*Rqeds~");
      FormElement formElement0 = new FormElement(tag0, "0O6PX\\n*Rqeds~", (Attributes) null);
      // Undeclared exception!
//      try { 
        formElement0.append((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A*D@g$%4A'O8iV", ";141:l&#cSg");
      Element element0 = document0.appendChild(document0);
      // Undeclared exception!
//      try { 
        document0.after((Node) element0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 2, Size: 1
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("bgsound", "REMOVE");
      document0.appendTo(document0);
      // Undeclared exception!
      document0.after("bgsound");
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Parser.parse("W;S)2\"[3", "n_V]");
      // Undeclared exception!
//      try { 
        document0.addClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Element element0 = null;
//      try {
        element0 = new Element((Tag) null, "br", attributes0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Element element0 = null;
//      try {
        element0 = new Element((Tag) null, ")U\"`#$:");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Element element0 = null;
//      try {
        element0 = new Element((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Document.createShell("0{");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("0{");
      document0.html(mockPrintWriter0);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      Element element0 = document0.prependElement("_*k1$'~Jt|7");
      element0.html((MockPrintStream) null);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Document.createShell("_*k1$'~Jt|7");
      document0.hasClass("_*k1$'~Jt|7");
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "html");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add((String) null);
      // Undeclared exception!
//      try { 
        document0.classNames((Set<String>) linkedHashSet0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.evosuite.runtime.System", e);
//      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = Document.createShell("0O6PX\\n*Rqeds~");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Document document0 = Parser.parse("_*k1$'~Jt|gd57", "_*k1$'~Jt|gd57");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Element element0 = new Element("_*kJ$'~Jt37");
      Element element1 = element0.prependElement("bgsound");
      element1.parents();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = Document.createShell("trT");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = Parser.parse("W;S)2\"[3", "n_V]");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Parser.parse("Children collection to be inserted must not be null.", "Children collection to be inserted must not be null.");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = Document.createShell("_*k'~J7");
      document0.attr("_*k'~J7_*k'~J7", "_*k'~J7_*k'~J7");
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = Parser.parse("d3&DPjC*T-P", "d3&DPjC*T-P");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("AttributeValue_doubleQuoted", "body");
      Pattern pattern0 = Pattern.compile("AttributeValue_doubleQuoted", 0);
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Document document0 = new Document("tt");
      Pattern pattern0 = Pattern.compile("org.jsoup.select.CombiningEvaluator$And");
      document0.getElementsByAttributeValueMatching("textarea", pattern0);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|gd57", ";![Ao=8\"'?K]");
      document0.append("6XGeRV");
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "");
      document0.id();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Document document0 = Parser.parse("_*k1$'~Jt|gd57", "_*k1$'~Jt|gd57");
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(">J:5\"nV&hb#WT6?,", ">J:5\"nV&hb#WT6?,");
      Element element0 = document0.prependElement("a");
      Element element1 = element0.prependElement("a");
      element1.before("a");
      MockPrintStream mockPrintStream0 = new MockPrintStream("a");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(true);
      element0.outerHtmlTail(mockPrintStream0, 2, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(">J:5\"nV&hb#WT6?,", ">J:5\"nV&hb#WT6?,");
      Element element0 = document0.prependElement("a");
      element0.prependElement("a");
      MockPrintStream mockPrintStream0 = new MockPrintStream("a");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(true);
      element0.outerHtmlTail(mockPrintStream0, 2, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Element element0 = new Element("{A@7R7>z42p");
      Element element1 = element0.prependElement("textarea");
      element1.prependText("isIOlXHoek(0");
      element0.html();
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("aV|VsiEQ0uaY", "aV|VsiEQ0uaY");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(false);
      File file0 = MockFile.createTempFile("gO?V,Uo+2cc", "gO?V,Uo+2cc");
      MockFileWriter mockFileWriter0 = new MockFileWriter(file0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);
      document0.outerHtmlTail(mockPrintWriter0, 1, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(">J:5\"nV&hb#WT6?,", ">J:5\"nV&hb#WT6?,");
      Element element0 = document0.prependElement("bgsound");
      Element element1 = element0.prependElement("bgsound");
      MockPrintStream mockPrintStream0 = new MockPrintStream("A\" NPd22");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.outline(true);
      element1.outerHtmlHead(mockPrintStream0, 2389, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*kJ$'~Jt37", "_*kJ$'~Jt37");
      Element element0 = document0.prependElement("bgsound");
      element0.prependElement("bgsound");
      element0.html();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      StringBuilder stringBuilder0 = new StringBuilder(271);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      document0.outerHtmlHead(stringBuilder0, (-1647), document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = new Document("tt");
      Element element0 = document0.prependElement("textarea");
      element0.val("bgsound");
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Parser.parse("UBEA3,*WWso/(>", "UBEA3,*WWso/(>");
      document0.val();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("gV|Vs)ifEQ0uaY", "gV|Vs)ifEQ0uaY");
      Element element0 = document0.toggleClass("Yw_!<V'");
      Element element1 = element0.toggleClass("gV|Vs)ifEQ0uaY");
      element1.toggleClass("gV|Vs)ifEQ0uaY");
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("W;S)2\"[3", "W;S)2\"[3");
      document0.toggleClass("-->");
      document0.toggleClass("_*G1$>~Jt|7");
      document0.hasClass("_*G1$>~Jt|7");
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("eZ%UPj", "eZ%UPj");
      document0.toggleClass("=*s");
      Element element0 = document0.toggleClass("Pattern syntax error: ");
      element0.hasClass("Yw_!<V'");
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Element element0 = new Element("=*s");
      element0.toggleClass("br");
      element0.toggleClass(" ");
      element0.hasClass("=*s");
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("AttributeValue_doubleQuoted", "AttributeValue_doubleQuoted");
      document0.toggleClass("AttributeValue_doubleQuoted");
      document0.hasClass("AttributeValue_doubleQuoted");
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      Element element0 = document0.toggleClass("{\"q/B3>");
      element0.hasClass("org.jsoup.nodes.Element$NodeList");
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Element element0 = new Element("=*s");
      element0.toggleClass("br");
      element0.hasClass("=*s");
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(">J:5\"nV&hb#W6?,", ">J:5\"nV&hb#W6?,");
      document0.html("{x']e9Hr&}Z:<?YXS");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Element element0 = new Element("_*k1$'~Jt|7");
      DataNode dataNode0 = new DataNode("_*k1$'~Jt|7");
      element0.appendChild(dataNode0);
      element0.data();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = Document.createShell("_*k1$~Jt|7");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("Bl?8|ON{`HDC,)");
      Document document0 = parser0.parseInput((Reader) stringReader0, "_*k1$'~Jt|7");
      Charset charset0 = document0.charset();
      document0.charset(charset0);
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#root", "#root");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = Document.createShell("0{");
      Element element0 = document0.body();
      document0.html("}T[Q)(-");
      element0.appendChild(document0);
      document0.text();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      TextNode textNode0 = TextNode.createFromEncoded("&E!gj4jEESe", ".");
      Element.preserveWhitespace(textNode0);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      document0.title("_*k1$'~Jt|7");
      Pattern pattern0 = Pattern.compile("_*k1$'~Jt|7");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Element element0 = new Element("_*k1$'~Jt|7");
      DataNode dataNode0 = new DataNode("_*k1$'~Jt|7");
      element0.appendChild(dataNode0);
      element0.getElementsContainingOwnText("br");
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2;Zw~V8.nffJCbPV", "bdi");
      document0.wholeText();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", ":nth-child(%d)");
      Element element0 = document0.appendText("s|}^x'vrVx{");
      element0.getElementsMatchingText("VTT");
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("dFgmEPJ74?Y7Kss<J", "dFgmEPJ74?Y7Kss<J");
      CDataNode cDataNode0 = new CDataNode("dFgmEPJ74?Y7Kss<J");
      Element element0 = document0.appendChild(cDataNode0);
      element0.text();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Parser.parse("W;S)2\"[3", "n_V]");
      document0.appendElement("a");
      document0.getElementsMatchingText("a");
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "html");
      Document document1 = document0.clone();
      document1.prependChild(document0);
      document1.getElementsContainingText("body");
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", "bgsound");
      document0.appendElement("br");
      document0.getElementsMatchingText("^;");
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Element element0 = new Element("_*k1$'~Jt|7");
      DataNode dataNode0 = new DataNode("_*k1$'~Jt|7");
      element0.appendChild(dataNode0);
      element0.getElementsMatchingText("_*k1$'~Jt|7");
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, false);
      Tag tag0 = Tag.valueOf("F", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, ":matches", attributes0);
      formElement0.getElementById("d");
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Document document0 = Parser.parse("_*k1$'~Jt|gd57", "_*k1$'~Jt|gd57");
      Element element0 = document0.prependElement("_*k1$'~Jt|gd57");
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Element element0 = new Element("_*k1$'~Jt|7");
      Element element1 = element0.prependElement("bgsound");
      element1.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Document.createShell("_*k1$~Jt|7");
      Element element0 = document0.prependElement("_*k1$~Jt|7");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Document.createShell("_*k1$~Jt|7");
      Element element0 = document0.prependElement("_*k1$~Jt|7");
      element0.appendChild(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$~Jt|7", "_*k1$~Jt|7");
      Element element0 = document0.prependElement("_*k1$~Jt|7");
      Elements elements0 = element0.nextElementSiblings();
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = Parser.parse("=!X:Fj8_N{'", "q7k:|-b");
      CDataNode cDataNode0 = new CDataNode("q7k:|-b");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
//      try { 
        document0.previousElementSiblings();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = Document.createShell("_*)k1$~Jt|7");
      document0.previousElementSibling();
      assertEquals(1, document0.childNodeSize());
      assertEquals("_*)k1$~Jt|7", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Element element0 = new Element("_*k1$'~Jt|7");
      Element element1 = element0.prependElement("bgsound");
      Element element2 = element1.nextElementSibling();
      assertNull(element2);
      assertEquals("bgsound", element1.nodeName());
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element$NodeList", "org.jsoup.nodes.Element$NodeList");
      document0.nextElementSibling();
      assertEquals("org.jsoup.nodes.Element$NodeList", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", "bgsound");
      document0.siblingElements();
      assertEquals("bgsound", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Parser.parse("gV|Vs)ifEQ0uaY", "gV|Vs)ifEQ0uaY");
      Element element0 = document0.prependElement("gV|Vs)ifEQ0uaY");
      assertEquals(2, document0.childNodeSize());
      
      Elements elements0 = element0.siblingElements();
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Element element0 = new Element("_*k1$'~Jt|7");
      element0.prependElement("bgsound");
      Element element1 = element0.prependElement("bgsound");
      String string0 = element1.cssSelector();
      assertEquals(2, element0.childNodeSize());
      assertEquals("_*k1$'~Jt|7 > bgsound:nth-child(1)", string0);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Element element0 = new Element("_*k1$'~Jt|7");
      Element element1 = element0.prependElement("bgsound");
      String string0 = element1.cssSelector();
      assertEquals(1, element0.childNodeSize());
      assertEquals("_*k1$'~Jt|7 > bgsound", string0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = Document.createShell("_*k1$'~Jt|7");
      Element element0 = document0.prependElement("_*k1$'~Jt|7");
      String string0 = element0.cssSelector();
      assertEquals(2, document0.childNodeSize());
      assertEquals("_*k1$'~jt|7", string0);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Document document0 = Parser.parse("pqTcV.C)$t3+gC{+z", "pqTcV.C)$t3+gC{+z");
      Element element0 = document0.toggleClass("pqTcV.C)$t3+gC{+z");
      element0.cssSelector();
      assertEquals("pqTcV.C)$t3+gC{+z", element0.baseUri());
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "");
      Node[] nodeArray0 = new Node[1];
      Element element0 = document0.empty();
      // Undeclared exception!
//      try { 
        element0.insertChildren((-2), nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput(">1gPRPA", "GGmRplyDI^");
      Node[] nodeArray0 = new Node[4];
      // Undeclared exception!
//      try { 
        document0.insertChildren(50, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = Document.createShell("");
      List<DataNode> list0 = document0.dataNodes();
      // Undeclared exception!
//      try { 
        document0.insertChildren(344, (Collection<? extends Node>) list0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element", "");
      List<DataNode> list0 = document0.dataNodes();
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>(list0);
      // Undeclared exception!
//      try { 
        document0.insertChildren((-1621), (Collection<? extends Node>) linkedList0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Element element0 = new Element("_*k1$'~Jt|7");
      DataNode dataNode0 = new DataNode("_*k1$'~Jt|7");
      Element element1 = element0.appendChild(dataNode0);
      List<DataNode> list0 = element1.dataNodes();
      assertEquals(1, element0.childNodeSize());
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "html");
      document0.prependText("");
      document0.textNodes();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = Parser.parse("_*k1$'~Jt|gd57", "_*k1$'~Jt|gd57");
      List<TextNode> list0 = document0.textNodes();
      Element element0 = document0.insertChildren(0, (Collection<? extends Node>) list0);
      assertEquals("_*k1$'~Jt|gd57", element0.baseUri());
      assertEquals(1, element0.childNodeSize());
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Parser.parse("gV|Vs)ifEQ0uaY", "gV|Vs)ifEQ0uaY");
      Element element0 = document0.prependElement("gV|Vs)ifEQ0uaY");
      assertEquals(2, document0.childNodeSize());
      
      document0.html("gV|Vs)ifEQ0uaY");
      element0.previousElementSibling();
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("3]4", "3]4");
      Elements elements0 = document0.getElementsByIndexGreaterThan(0);
      assertEquals(1, document0.childNodeSize());
      assertEquals("3]4", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element", "");
      // Undeclared exception!
//      try { 
        document0.selectFirst("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      // Undeclared exception!
//      try { 
        document0.is("{CqDZk76vQGAmygu");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query '{CqDZk76vQGAmygu': unexpected token at '{CqDZk76vQGAmygu'
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Document document0 = Document.createShell("0{");
      document0.getAllElements();
      assertEquals(1, document0.childNodeSize());
      assertEquals("0{", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(">J:5\"nV&hb#WT6?,", ">J:5\"nV&hb#WT6?,");
      // Undeclared exception!
//      try { 
        document0.before("a");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.Element$1");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "org.jsoup.nodes.Element$1", attributes0);
      element0.getElementsByAttributeValueNot("org.jsoup.nodes.Element$1", "textarea");
      assertEquals("org.jsoup.nodes.Element$1", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = Document.createShell("_*k'~J7");
      Element element0 = document0.shallowClone();
      assertEquals("_*k'~J7", element0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Document.createShell("0{");
      Element element0 = document0.clone();
      assertEquals(1, document0.childNodeSize());
      assertNotSame(element0, document0);
      assertEquals("0{", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Document document0 = new Document("");
      document0.doSetBaseUri("");
      assertEquals(0, document0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("A*D@g$%4A'O8iV", ";141:l&#cSg");
      // Undeclared exception!
//      try { 
        document0.after((Node) document0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("H*qkae-7?+A?x[M\"j", "j3Sr4<hLxgkOcng;");
      document0.getElementsByAttributeValueContaining("j3Sr4<hLxgkOcng;", "H*qkae-7?+A?x[M\"j");
      assertEquals(1, document0.childNodeSize());
      assertEquals("j3Sr4<hLxgkOcng;", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      Elements elements0 = document0.getElementsByClass("_*k1$'~Jt|7");
      assertEquals("_*k1$'~Jt|7", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Document document0 = Parser.parse("_*k1$'~Jt|gd57", "_*k1$'~Jt|gd57");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueEnding("_*k1$'~Jt|gd57", "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = new Document("_*kJ'~Jt7");
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute((String) null);
      // Undeclared exception!
//      try { 
        document0.is((Evaluator) evaluator_Attribute0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("textarea", "html");
      document0.getElementsByAttributeValueMatching("textarea", ":contains(%s)");
      assertEquals(1, document0.childNodeSize());
      assertEquals("html", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "6QU");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingOwnText((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("_*k'~J7", "_*k'~J7");
      Elements elements0 = document0.getElementsByIndexEquals(1);
      assertEquals(1, elements0.size());
      assertEquals("_*k'~J7", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", ";![Ao=8\"'?K]");
      document0.getElementsByAttributeStarting(";![Ao=8\"'?K]");
      assertEquals(1, document0.childNodeSize());
      assertEquals(";![Ao=8\"'?K]", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = Document.createShell("trT");
      Elements elements0 = document0.getElementsByIndexLessThan((-1));
      assertEquals(1, document0.childNodeSize());
      assertEquals("trT", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Element element0 = new Element("_*kJ$'~Jt37");
      // Undeclared exception!
//      try { 
        element0.after("X>/'rU+O");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = Document.createShell("_*k1$'~Jt|7");
      document0.prepend("_*k1$'~Jt|7");
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Element element0 = new Element("=*s");
      Elements elements0 = element0.getElementsByAttributeValueStarting(":matches", "T(hp8&V?c8@");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = new Document("R96+j1g^i");
      document0.getElementsByAttributeValue("_*k1$'~Jt|7", "id");
      assertEquals("R96+j1g^i", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Document document0 = Document.createShell(";$5]$2daw@o");
      document0.wholeText();
      assertEquals(1, document0.childNodeSize());
      assertEquals(";$5]$2daw@o", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_*k1$'~Jt|7", "_*k1$'~Jt|7");
      // Undeclared exception!
//      try { 
        document0.before((Node) document0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Element element0 = new Element("tIxtarea");
      Elements elements0 = element0.select("tIxtarea");
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = new Document("R96+j1g^i");
      document0.dataset();
      assertEquals("R96+j1g^i", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Document document0 = Document.createShell("0{");
      Element element0 = document0.tagName("3c%*: _");
      assertEquals(1, element0.childNodeSize());
      assertEquals("0{", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(">J:5\"nV&hb#W6?,", ">J:5\"nV&hb#W6?,");
      // Undeclared exception!
//      try { 
        document0.child(2);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 2, Size: 1
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Parser.parse("=!X:Fj8_N{'", "q7k:|-b");
      document0.previousElementSiblings();
      assertEquals("q7k:|-b", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = Document.createShell("0{");
      // Undeclared exception!
//      try { 
        document0.wrap("F4Pt");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }
}
