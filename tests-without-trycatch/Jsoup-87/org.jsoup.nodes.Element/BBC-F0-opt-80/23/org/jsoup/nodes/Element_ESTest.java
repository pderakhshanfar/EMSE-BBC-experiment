/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 22 21:10:51 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.OutputStreamWriter;
import java.io.PipedOutputStream;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.UnknownFormatConversionException;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("body", "body");
      document0.toggleClass("}/_c]/h$:");
      document0.toggleClass("Tag name must not be empty.");
      document0.getElementsByClass("body");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Parser.parse("Y ^2JGw8If03qhZ32>m", "0__xg7s");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueMatching("#root", "_3D({M]S|kNk%t-YQv&");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Pattern syntax error: _3D({M]S|kNk%t-YQv&
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Document document1 = Parser.parseBodyFragment(",eDH4<rF\"$_KS}", "N>vxF9vY7FCG1{xf2h");
      document0.appendChild(document1);
      Element element0 = document0.toggleClass("N>vxF9vY7FCG1{xf2h");
      element0.appendChild(document0);
      document0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      Element element0 = document0.head();
      document0.setParentNode(element0);
      document0.nextElementSiblings();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("0{s", "0{s");
      List<DataNode> list0 = document0.dataNodes();
      document0.insertChildren(0, (Collection<? extends Node>) list0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Parser.parse(" > ", "0__xg7s");
      StringBuilder stringBuilder0 = new StringBuilder(62);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlHead(stringBuilder0, 129, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      document0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = Document.createShell("c!D");
      document0.doSetBaseUri("dGd)V+,XO'`tg9");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Element element0 = new Element("<H|kT3Gz_c");
      element0.getElementsMatchingOwnText("<H|kT3Gz_c");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("org.jsoup.parser.Token$Doctype", "org.jsoup.parser.Token$Doctype");
      document0.wrap("#");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Element element0 = document0.head();
      element0.wrap("N>vxF9vY7FCG1{xf2h");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("JJ.}veseXlVFs$x", "JJ.}veseXlVFs$x");
      Element element0 = document0.body();
      element0.val("java.lang.string@0000000038");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", " > ");
      Element element0 = document0.createElement("0__xg7s");
      element0.val(" > ");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = Parser.parse("9yD[", "limitedQuirks");
      Element element0 = document0.val("br");
      element0.val();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.appendChild(document0);
      document0.toggleClass("^plmFHL;@)bv$Z");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Element element0 = new Element("N>vxF9vY7FCG1{xf2h");
      element0.toggleClass("N>vxF9vY7FCG1{xf2h");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Parser.parse(" @> ", " @> ");
      Element element0 = document0.body();
      element0.text(" @> ");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = new Document("org.jsoup.nodes.Element");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Element element0 = document0.appendElement("N>vxF9vY7FCG1{xf2h");
      element0.tagName("N>vxF9vY7FCG1{xf2h");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", " ");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Parser.parse("", ")");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("02_xg7s", "02_xg7s");
      Element element0 = document0.body();
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Document document0 = new Document("");
      document0.selectFirst(",F4L,4|X");
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Element element0 = document0.appendElement("IL");
      element0.selectFirst("IL");
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Document.createShell("c!D");
      document0.select("[^%s]");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Element element0 = new Element("IL");
      element0.select("IL");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Element element0 = document0.head();
      element0.removeClass("N>vxF9vY7FCG1{xf2h");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Element element0 = document0.appendChild(document0);
      element0.removeClass("N>vxF9vY7FCG1{xf2h");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Element element0 = new Element("N>vxF9vY7FCG1{xf2h");
      element0.removeClass("N>vxF9vY7FCG1{xf2h");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", "[ ");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      document0.addChildren(nodeArray0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", " ");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      document0.addChildren(nodeArray0);
      document0.prependText("_3d({m]s|knk%t-yqv&");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Parser.parse("", ")");
      document0.prependElement(")");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("h6", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "r\"u/jH16L\"{2`", attributes0);
      formElement0.prependElement("h6");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FC~:G1{xf2h", "N>vxF9vY7FC~:G1{xf2h");
      Element element0 = document0.appendElement("IL");
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", ": ");
      Element element0 = document0.head();
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Parser.parse("R?>vxF9vY7FCG1{lf2h", "R?>vxF9vY7FCG1{lf2h");
      Element element0 = document0.appendElement("IL");
      element0.prepend("IL");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("comment", "&gt;");
      Element element0 = document0.head();
      element0.prepend("<_Or");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Parser.parse("publicId", "value");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", " ");
      Element element0 = document0.createElement("_3d({m]s|knk%t-yqv&");
      element0.prependChild(document0);
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("0__xg7s", " > ");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", " ");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      document0.addChildren(nodeArray0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Document document0 = Parser.parse("c!D", "c!D");
      Element element0 = document0.head();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Parser.parse("", ")");
      Document document1 = document0.clone();
      document1.prependChild(document0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Parser.parse("R?>vxF9vY7FCG1{lf2h", "R?>vxF9vY7FCG1{lf2h");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = Document.createShell("giA7g{d;]D_]C@I");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.nodes.Element$NodeList");
      Element element0 = document0.head();
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      Element element0 = document0.head();
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Parser.parse("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.appendChild(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", " ");
      Element element0 = document0.createElement("_3d({m]s|knk%t-yqv&");
      element0.prependChild(document0);
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      document0.is((Evaluator) evaluator_IsFirstOfType0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", " ");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      document0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = new Document("c!D");
      Node[] nodeArray0 = new Node[0];
      document0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = Document.createShell("'IglO6vi%");
      Element element0 = document0.appendChild(document0);
      LinkedList<Document> linkedList0 = new LinkedList<Document>();
      element0.insertChildren((-1), (Collection<? extends Node>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = new Document("_3d({m]s|knk%t-yqv&");
      List<DataNode> list0 = document0.dataNodes();
      document0.insertChildren(0, (Collection<? extends Node>) list0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" >b", " >b");
      Element element0 = document0.body();
      element0.html("`jC");
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("<NDjZ{\"wFB", "<NDjZ{\"wFB");
      document0.html("<NDjZ{\"wFB");
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":nth-child(%d)", ".");
      MockFile mockFile0 = new MockFile("i;68q*HK30\\;GG0@(");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0, false);
      document0.html((OutputStreamWriter) mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Element element0 = new Element("wc'=m/o?T");
      element0.html();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1exf2h", ":nth-child(%d)");
      document0.attr("N>vxF9vY7FCG1exf2h", false);
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1exf2h", ":nth-child(%d)");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String string0 = "vE2\\usbbNDaddX";
      Document document0 = Parser.parseBodyFragmentRelaxed("Smh8n3D{Kd3][<<R", string0);
      Pattern pattern0 = Pattern.compile("6s|[!>d>#C:gR", 59);
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("w'ziP", 0);
      Document document0 = Parser.parseBodyFragment("w'ziP", "w'ziP");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.parser.Tag");
      Element element0 = new Element(tag0, "wc'=m/o?T");
      element0.getElementsMatchingOwnText("");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = new Document(".WMyV:\";! Ek6");
      document0.getElementsContainingText(".WMyV:\";! Ek6");
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("publicId", parseSettings0);
      Element element0 = new Element(tag0, "value");
      element0.getElementsContainingOwnText("publicId");
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = Parser.parse("blockquote", "yOz_");
      document0.getElementsByTag("yOz_");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", " > ");
      Element element0 = document0.createElement("0__xg7s");
      element0.getElementsByTag("0__xg7s");
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("_3D({M]S|ksk%t-YQv&", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("--");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "--", attributes0);
      formElement0.getElementsByIndexGreaterThan((-1));
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      document0.getElementsByIndexEquals(22);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", " ");
      document0.attr("_3d({m]s|knk%t-yqv&", " ");
      document0.getElementsByAttributeValueMatching("_3d({m]s|knk%t-yqv&", " ");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("]gUgPm", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("0__xg7s", "n>vxf9vy7fcg1{xf2h");
      FormElement formElement0 = new FormElement(tag0, "]gUgPm", attributes1);
      formElement0.getElementsByAttributeStarting("0__xg7s");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "C!F!");
      document0.appendChild(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1exf2h", ":nth-child(%d)");
      Element element0 = document0.body();
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("0__xg7s", " > ");
      document0.prependChild(document0);
      document0.empty();
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "C!F!");
      Document document1 = (Document)document0.appendChild(document0);
      document1.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("org.jsoup.parser.Tag", "}5&\"8K\"!e");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Element element0 = document0.head();
      element0.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("publicId", parseSettings0);
      Element element0 = new Element(tag0, "value");
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = new Document("{ =LB");
      List<Node> list0 = Parser.parseFragment("{ =LB", (Element) document0, "{ =LB");
      document0.childNodes = list0;
      document0.clone();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "C!F!");
      document0.appendChild(document0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      document0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Element element0 = document0.head();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      element0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("org.jsoup.parser.Tag", "}5&\"8K\"!e");
      Element element0 = document0.toggleClass("}5&\"8K\"!e");
      element0.classNames();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("k+^i", "AcI2G~`-hd8g");
      document0.addClass("body");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Attributes", "i$p1");
      Element element0 = document0.createElement("w'ziP");
      element0.children();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Document document0 = new Document(".WMyV:\";! Ek6");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Parser.parse("selected", "selected");
      Element element0 = document0.head();
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", " > ");
      document0.setParentNode(document0);
      document0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Parser.parse("c!D", "c!D");
      Element element0 = document0.doClone(document0);
      element0.before("c!D");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      Element element0 = document0.head();
      element0.before(" %#Wt");
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("csFhke", " > ");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Element element0 = new Element("N>vxF9vY7FCG1{xf2h");
      element0.baseUri();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("_3D({M]S|ksk%t-YQv&", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("--");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "--", attributes0);
      formElement0.attributes();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Document document0 = Document.createShell("#GP.Tm^");
      Element element0 = document0.body();
      element0.attr("#GP.Tm^", false);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Element element0 = document0.appendElement("IL");
      element0.attr("p5Z Po-#Vxe*Zj", "{cesA@ 6Nz!U_ck^");
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Element element0 = document0.appendElement("IL");
      document0.appendTo(element0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("02_xg7s", "02_xg7s");
      Element element0 = document0.body();
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("0__xg7s", " > ");
      Element element0 = document0.createElement("0__xg7s");
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Element element0 = new Element("head");
      element0.appendText("data-");
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Tag name must not be empty.", "Tag name must not be empty.");
      Element element0 = document0.appendElement("IL");
      element0.appendText("IL");
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", ": ");
      Element element0 = document0.head();
      element0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = Document.createShell("'Igl;Cvi%");
      Element element0 = document0.head();
      element0.append("'Igl;Cvi%");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Tag name must not be empty.", "Tag name must not be empty.");
      Element element0 = document0.appendElement("IL");
      element0.append("                    ");
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Document document1 = new Document("N>vxF9vY7FCG1{xf2h");
      document1.setParentNode(document0);
      document1.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", " ");
      Element element0 = document0.prependChild(document0);
      document0.after((Node) element0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("csFhke", " > ");
      Document document1 = Document.createShell("csFhke");
      document0.setParentNode(document1);
      document0.after("0__xg7s");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" >b", " >b");
      Element element0 = document0.body();
      element0.after(" >b");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.appendChild(document0);
      document0.addClass("#root");
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<c>@wiU5tn-ozn}s{q", "<c>@wiU5tn-ozn}s{q");
      Element element0 = document0.head();
      element0.addClass(">");
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.wrap("H~Px|[+ (B_zs");
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("<NDjZ{\"wFB", "<NDjZ{\"wFB");
      Element element0 = document0.appendElement("IL");
      // Undeclared exception!
//      try { 
        element0.wrap("<NDjZ{\"wFB");
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      // Undeclared exception!
//      try { 
        document0.wrap("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = Parser.parse("_3d{m]s|knk%t-yq", " ");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      document0.addChildren(nodeArray0);
      // Undeclared exception!
      document0.val("_3d{m]s|knk%t-yq");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("%<B@AIb9n&ey\u00029", "h*uB4Rml+#vJD.2|Eb");
      // Undeclared exception!
//      try { 
        document0.toggleClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = new Document("?7O9X8?2zyeHo! (iH");
      // Undeclared exception!
//      try { 
        document0.text("?7O9X8?2zyeHo! (iH");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Document", e);
//      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("PHPTp/DYiwd", "PHPTp/DYiwd");
      // Undeclared exception!
//      try { 
        document0.text((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Element element0 = document0.appendChild(document0);
      // Undeclared exception!
      element0.tagName("BnI[;Om<4E;`?np");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = Parser.parse("^+", "^+");
      // Undeclared exception!
//      try { 
        document0.tagName((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Tag name must not be empty.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = "vE2\\usbbNDaddX ";
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf(string0, parseSettings0);
      CDataNode cDataNode0 = new CDataNode("{|},-&tS{=");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "{|},-&tS{=", attributes0);
      // Undeclared exception!
//      try { 
        element0.selectFirst("{|},-&tS{=");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query '{|},-&tS{=': unexpected token at '{|},-&tS{='
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("0__xg7s", " > ");
      // Undeclared exception!
//      try { 
        document0.selectFirst("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", " ");
      // Undeclared exception!
//      try { 
        document0.select((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("0__xg7s", "0__xg7s");
      CDataNode cDataNode0 = new CDataNode("0__xg7s");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
//      try { 
        document0.previousElementSiblings();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("$/Zul", "$/Zul");
      // Undeclared exception!
//      try { 
        document0.prependText((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", " ");
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document0;
      nodeArray0[6] = (Node) document0;
      nodeArray0[7] = (Node) document0;
      nodeArray0[8] = (Node) document0;
      document0.addChildren(nodeArray0);
      // Undeclared exception!
      document0.prependElement("html");
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FC~:G1{xf2h", "N>vxF9vY7FC~:G1{xf2h");
      Element element0 = new Element("N>vxF9vY7FC~:G1{xf2h");
      CDataNode cDataNode0 = new CDataNode("Kr[!wv&");
      Node node0 = cDataNode0.doClone(element0);
      // Undeclared exception!
//      try { 
        document0.prependChild(node0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Parser.parse("HATGlLJ9 7", "HATGlLJ9 7");
      // Undeclared exception!
//      try { 
        document0.prependChild((Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      document0.prependChild(document0);
      // Undeclared exception!
      document0.prepend("wc'=m/o?T");
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("0{s", "0{s");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(669);
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      document0.outerHtmlTail(stringWriter0, 669, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(">vxF9vY7FC~:Gl{xf2h", ">vxF9vY7FC~:Gl{xf2h");
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        document0.outerHtmlTail(charBuffer0, 0, document_OutputSettings0);
//        fail("Expecting exception: BufferOverflowException");
      
//      } catch(BufferOverflowException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.Buffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Parser.parse("?4k", "?4k");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        document0.outerHtmlTail((Appendable) null, 0, document_OutputSettings0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("=gaj>U\f7t.Usm", "=gaj>U\f7t.Usm");
      StringBuilder stringBuilder0 = new StringBuilder("d,/0Ps3;!aG<'$T!A]");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        document0.outerHtmlTail(stringBuilder0, (-2193), document_OutputSettings0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // width must be > 0
//         //
//         verifyException("org.jsoup.internal.StringUtil", e);
//      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("0__xg7s", " > ");
      MockPrintStream mockPrintStream0 = new MockPrintStream(" > ");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      document0.outerHtmlHead(mockPrintStream0, 65536, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("0{s", "0{s");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0, false);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        document0.outerHtmlHead(mockPrintStream0, (-1229), document_OutputSettings0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // width must be > 0
//         //
//         verifyException("org.jsoup.internal.StringUtil", e);
//      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = Document.createShell("index must be numeric");
      CDataNode cDataNode0 = new CDataNode((String) null);
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
//      try { 
        document0.nextElementSiblings();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("org.jsoup.parser.Tag", "}5&\"8K\"!e");
      // Undeclared exception!
//      try { 
        document0.lastElementSibling();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "C!F!");
      document0.appendChild(document0);
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      // Undeclared exception!
      document0.is((Evaluator) evaluator_IsFirstOfType0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Tag tag0 = Tag.valueOf("i");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "i", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.is((Evaluator) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1exf2h", ":nth-child(%d)");
      // Undeclared exception!
//      try { 
        document0.is(":nth-child(%d)");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse nth-index '%d': unexpected format
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Document.createShell("'IglO6vi%");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.is("default");
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":root", ":root");
      // Undeclared exception!
//      try { 
        document0.is("W2[j:%_@umE");
//        fail("Expecting exception: UnknownFormatConversionException");
      
//      } catch(UnknownFormatConversionException e) {
//         //
//         // Conversion = '_'
//         //
//         verifyException("java.util.Formatter", e);
//      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("0__xg7s", " > ");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      // Undeclared exception!
//      try { 
        document0.insertChildren(1, nodeArray0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Element element0 = document0.appendChild(document0);
      // Undeclared exception!
      element0.html("~mt@-!j,$s)*PP");
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      // Undeclared exception!
//      try { 
        document0.html((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1exf2h", ":nth-child(%d)");
      document0.appendChild(document0);
      MockFile mockFile0 = new MockFile("\u0007.^fi8NLDR]*?#%3z");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0, true);
      // Undeclared exception!
      document0.html((OutputStreamWriter) mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Document document0 = new Document("z>l=ZL1MC64Ca");
      document0.normalise();
      // Undeclared exception!
//      try { 
        document0.html((CharArrayWriter) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = Parser.parse("Y ^2JGw8If03qhZ32>m", "0__xg7s");
      CDataNode cDataNode0 = new CDataNode("");
      document0.setParentNode(cDataNode0);
      MockFile mockFile0 = new MockFile("%\u0007VYuli_Yl");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0, true);
      // Undeclared exception!
//      try { 
        document0.html((OutputStreamWriter) mockFileWriter0);
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", "[ ");
      document0.prependChild(document0);
      // Undeclared exception!
      document0.html();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      // Undeclared exception!
//      try { 
        document0.hasClass((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingText((Pattern) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.select.Evaluator$Matches", e);
//      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingText((String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("0__xg7s", " > ");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingText("nZYCDBw@2 (aHA");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Pattern syntax error: nZYCDBw@2 (aHA
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      TextNode textNode0 = TextNode.createFromEncoded("LtgOX=*D2]|S");
      document0.setParentNode(textNode0);
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingText("");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      // Undeclared exception!
//      try { 
        document0.getElementsMatchingOwnText((Pattern) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
//      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("0__xg7s", " > ");
      DataNode dataNode0 = DataNode.createFromEncoded("title", "title");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
//      try { 
        document0.getElementsContainingOwnText("textarea");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("comment", "&gt;");
      // Undeclared exception!
//      try { 
        document0.getElementsByTag("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.childNodes = null;
      // Undeclared exception!
//      try { 
        document0.getElementsByClass("cx&vio?6~g");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = new Document("P,.?vij\"C~1!");
      // Undeclared exception!
//      try { 
        document0.getElementsByClass("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = Document.createShell("c!D");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueStarting("6'8jV", "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Parser.parse("Y ^2JGw8If03qhZ32>m", "0__xg7s");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueNot("", ",");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("0__xg7s", "p> ");
      document0.setSiblingIndex((-1987));
      Element element0 = document0.toggleClass("class");
      element0.parentNode = (Node) document0;
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueNot("class", "p> ");
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Tag tag0 = Tag.valueOf("NbFkil2|=JUlr*{");
      CDataNode cDataNode0 = new CDataNode("NbFkil2|=JUlr*{");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "NbFkil2|=JUlr*{", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.getElementsByAttributeValueMatching("NbFkil2|=JUlr*{", (String) null);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Document.createShell("#");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueEnding("|Un\"@]}LRC0h-", "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parse("selected", "selected");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttributeValueContaining((String) null, (String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Element element0 = new Element("a^;]S8OmC;`otN_=w&");
      // Undeclared exception!
//      try { 
        element0.getElementsByAttributeValue("a^;]S8OmC;`otN_=w&", "");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Tag tag0 = Tag.valueOf("'N_32jFKUTS");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "'N_32jFKUTS", attributes0);
      // Undeclared exception!
//      try { 
        formElement0.getElementsByAttributeStarting((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      // Undeclared exception!
//      try { 
        document0.getElementsByAttribute("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Document.createShell("w'ziP");
      // Undeclared exception!
//      try { 
        document0.getElementById((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Parser.parse("Y ^2JGw8If03qhZ32>m", "0__xg7s");
      // Undeclared exception!
//      try { 
        document0.firstElementSibling();
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Element", e);
//      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("body", "P\" ");
      Element element0 = document0.createElement("body");
      Element element1 = element0.appendElement("N>vxF9vY7FCG1{xf2h");
      // Undeclared exception!
//      try { 
        element1.cssSelector();
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query 'vxf9vy7fcg1{xf2h': unexpected token at '{xf2h'
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "lo|BZ!|?");
      DataNode dataNode0 = DataNode.createFromEncoded("RPXy}xn.[h:'8r", (String) null);
      document0.setParentNode(dataNode0);
      // Undeclared exception!
//      try { 
        document0.cssSelector();
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Tag name must not be empty.", "Tag name must not be empty.");
      Element element0 = document0.body();
      element0.siblingIndex = (-2924);
      // Undeclared exception!
//      try { 
        element0.cssSelector();
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Parser.parse("__ODxg", "__ODxg");
      // Undeclared exception!
//      try { 
        document0.classNames((Set<String>) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Parser.parse("wc'=m/o?T", "wc'=m/o?T");
      // Undeclared exception!
//      try { 
        document0.child(80);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 80, Size: 1
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1exf2h", ":nth-child(%d)");
      // Undeclared exception!
//      try { 
        document0.child((-671));
//        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
//      } catch(ArrayIndexOutOfBoundsException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      Element element0 = document0.head();
      document0.setParentNode(element0);
      // Undeclared exception!
//      try { 
        element0.before((Node) document0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("=gaj>U\t.Usm", "=gaj>U\t.Usm");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.before("=3'[0Q'");
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(".WMyV:\";! Ek6", "");
      // Undeclared exception!
//      try { 
        document0.attr((String) null, true);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.attr("html > head > #root", (String) null);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("0{s", "0{s");
      // Undeclared exception!
//      try { 
        document0.attr((String) null, "&5rAHGQA");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.parser.ParseSettings", e);
//      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      Element element0 = document0.head();
      document0.setParentNode(element0);
      // Undeclared exception!
//      try { 
        document0.appendTo(element0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 0, Size: 0
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("org.jsoup.parser.Tag", "}J5\"K\"!e");
      // Undeclared exception!
//      try { 
        document0.appendTo((Element) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = Parser.parse("Xg#m:x#AIgON-&Q&f", "Xg#m:x#AIgON-&Q&f");
      // Undeclared exception!
//      try { 
        document0.appendText((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.appendChild(document0);
      // Undeclared exception!
      document0.appendElement("z_=nfB#+2(}V");
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("b2g7)Ls", "b2g7)Ls");
      ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
      List<Node> list0 = Parser.parseFragment("b2g7)Ls", (Element) document0, "b2g7)Ls", parseErrorList0);
      document0.childNodes = list0;
      // Undeclared exception!
//      try { 
        document0.appendElement("java.lang.string@0000000056 __odxg");
//        fail("Expecting exception: UnsupportedOperationException");
      
//      } catch(UnsupportedOperationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.Collections$UnmodifiableCollection", e);
//      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      // Undeclared exception!
//      try { 
        document0.appendElement("");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // String must not be empty
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = Document.createShell("'IglO6vi%");
      document0.childNodes = null;
      // Undeclared exception!
//      try { 
        document0.appendChild(document0);
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Y ^2JGw8If03qhZ32>m", "Y ^2JGw8If03qhZ32>m");
      // Undeclared exception!
//      try { 
        document0.appendChild((Node) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.append("K(gM6x");
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("xhtml", "QppipDHL+5!.UL-aYx'");
      // Undeclared exception!
//      try { 
        document0.append((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "lo|BZ!|?");
      DataNode dataNode0 = DataNode.createFromEncoded("RPXy}xn.[h:'8r", (String) null);
      document0.setParentNode(dataNode0);
      // Undeclared exception!
//      try { 
        document0.append("RPXy}xn.[h:'8r");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "C!F!");
      Element element0 = document0.appendChild(document0);
      // Undeclared exception!
//      try { 
        document0.after((Node) element0);
//        fail("Expecting exception: IndexOutOfBoundsException");
      
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: 2, Size: 1
//         //
//         verifyException("java.util.ArrayList", e);
//      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.after("");
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("-2UfEe^Q#L?", "-2UfEe^Q#L?");
      CDataNode cDataNode0 = new CDataNode("_3d({m]s|knk%t-yqv&");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
//      try { 
        document0.after("CV_nC(%i");
//        fail("Expecting exception: ClassCastException");
      
//      } catch(ClassCastException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("0s", "0s");
      // Undeclared exception!
//      try { 
        document0.addClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Tag tag0 = Tag.valueOf("%iIg#0=");
      Attributes attributes0 = new Attributes();
      Element element0 = null;
//      try {
        element0 = new Element(tag0, (String) null, attributes0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Element element0 = null;
//      try {
        element0 = new Element((Tag) null, "fw=");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("02_g7s", "02_g7s");
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
//      try { 
        document0.html(charBuffer0);
//        fail("Expecting exception: BufferOverflowException");
      
//      } catch(BufferOverflowException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.CharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = new Document(" > ");
      document0.html((MockPrintWriter) null);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Element element0 = document0.toggleClass("N>vxF9vY7FCG1{xf2h");
      element0.hasClass("&;fvr^bg}310(]gpA?dU");
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.toggleClass("N>vxF9vY7FCG1{xf2h");
      document0.addClass("N>vxF9vY7FCG1{xf2h");
      document0.hasClass("N>vxF9vY7FCG1{xf2h");
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parse("Children collection to be inserted must not be null.", "java.lang.string@0000000060 jt)|:;");
      document0.toggleClass("");
      document0.addClass("");
      document0.hasClass("java.lang.string@0000000056");
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Document document0 = Parser.parse(" >b", " >b");
      document0.toggleClass("O$m9-G$Y7=>EY:V=}L;");
      document0.hasClass("java.lang.string@0000000071");
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("0__xg7s", " > ");
      document0.hasClass("7?");
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "C!F!");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add(".cx#");
      document0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Document document0 = new Document(".WMyV:\";! Ek6");
      Set<String> set0 = document0.classNames();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(set0);
      document0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("org.jsoup.parser.Tag", "}5&\"8K\"!e");
      String string0 = "vE2\\usbbNDaddX";
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData(string0);
      evaluator_ContainsData0.matches(document0, document0);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("0{s", "0{s");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Element element0 = document0.appendChild(document0);
      element0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      document0.setParentNode(document0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("JJ.}veseXlVFs$x", "JJ.}veseXlVFs$x");
      Element element0 = document0.body();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_3d({m]s|knk%t-yqv&", " ");
      Element element0 = document0.createElement("_3d({m]s|knk%t-yqv&");
      element0.prependChild(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      Element element0 = document0.head();
      Element element1 = element0.nextElementSibling();
      element1.wrap("B$=\"n[7D?{M");
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Document.createShell("$friQw|'E");
      document0.prependChild(document0);
      document0.cssSelector();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("0__xg7s", " > ");
      document0.getElementsByAttributeValueEnding(":contains(", " > ");
      document0.absUrl("0__xg7s");
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.nodes.Attributes", "i$p1");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = Document.createShell("c!D");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", " ");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = Document.createShell("giA7g{d;]D_]C@I");
      document0.empty();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.getElementsByIndexGreaterThan(62);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = Document.createShell("'IglO6vi%");
      document0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Pattern pattern0 = Pattern.compile("");
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("0{s", "0{s");
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData(" ");
      document0.is((Evaluator) evaluator_ContainsData0);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", " ");
      Pattern pattern0 = Pattern.compile("action");
      document0.getElementsByAttributeValueMatching("r<C};73B&", pattern0);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Tag name must not be empty.", "Tag name must not be empty.");
      document0.append("                    ");
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", " > ");
      // Undeclared exception!
//      try { 
        document0.select(" > ");
//        fail("Expecting exception: IllegalStateException");
      
//      } catch(IllegalStateException e) {
//         //
//         // Could not parse query '': unexpected token at ''
//         //
//         verifyException("org.jsoup.select.QueryParser", e);
//      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      MockFileWriter mockFileWriter0 = new MockFileWriter("c!D", true);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(false);
      document0.outerHtmlTail(mockFileWriter0, 0, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = new Document(" ");
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
//      try { 
        document0.outerHtmlHead(charBuffer0, 0, document_OutputSettings0);
//        fail("Expecting exception: BufferOverflowException");
      
//      } catch(BufferOverflowException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.nio.CharBuffer", e);
//      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Element element0 = new Element("progress");
      element0.outerHtml();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = Parser.parse(" > ", " > ");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.val();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = Parser.parse(" >b", " >b");
      Element element0 = document0.toggleClass("#root");
      Element element1 = element0.toggleClass("#root");
      element1.toggleClass("#root");
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Document.createShell("%)ut`4}z0zX=");
      document0.id();
      document0.attr("C%|rW{k?l", false);
      document0.toggleClass("C%|rW{k?l");
      document0.addClass("z<7HE?Ug_LqfRYN +");
      document0.getElementsByClass("java.lang.string@0000000057");
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Document document0 = Parser.parse(" > ", " > ");
      document0.toggleClass("Children collection to be inserted must not be null.");
      document0.addClass(" > ");
      document0.hasClass("&;fvr^bg}310(]gpA?dU");
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Tag name must not be empty.", "Tag name must not be empty.");
      document0.toggleClass("Tag name must not be empty.");
      Element element0 = document0.toggleClass("Tag name must not be empty.");
      element0.getElementsByClass("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Document document0 = Parser.parse(" > ", " > ");
      Element element0 = document0.toggleClass("<html>\n <head></head>\n <body>\n   &gt; \n </body>\n</html>");
      element0.hasClass("<html>\n <head></head>\n <body>\n   &gt; \n </body>\n</html>");
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" ", " ");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Document document0 = Parser.parse("Children collection to be inserted must not be null.", "java.lang.string@0000000060 jt)|:;");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" ", " ");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      DataNode dataNode0 = DataNode.createFromEncoded("textarea", "MarkupDeclarationOpen");
      Element.preserveWhitespace(dataNode0);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Parser.parse("c!D", "c!D");
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      CDataNode cDataNode0 = new CDataNode("textarea");
      nodeArray0[5] = (Node) cDataNode0;
      nodeArray0[6] = (Node) document0;
      nodeArray0[7] = (Node) document0;
      nodeArray0[8] = (Node) document0;
      document0.addChildren(nodeArray0);
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      document0.title("c!D");
      document0.getElementsContainingOwnText("c!D");
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(":nth-child(%d)", true);
      document0.appendChild(xmlDeclaration0);
      document0.getElementsContainingOwnText("N>vxF9vY7FCG1{xf2h");
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.wholeText();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = Parser.parse("__ODxg", "__ODxg");
      document0.appendText("__ODxg");
      document0.getElementsMatchingText("");
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", " ");
      Element element0 = document0.createElement("_3d({m]s|knk%t-yqv&");
      element0.prependChild(document0);
      document0.prepend("sgO)GI:4yP(");
      element0.text();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.appendElement("IL");
      document0.getElementsMatchingText("IL");
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.appendElement("address");
      document0.getElementsMatchingText("R06_C_ia");
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration(":nth-child(%d)", true);
      document0.appendChild(xmlDeclaration0);
      document0.getElementsMatchingText("/V_h*Ci~+r");
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("0{s", "0{s");
      document0.getElementById("w'ziP");
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = Parser.parse("_3d({m]s|knk%t-yqv&", " ");
      Element element0 = document0.createElement("_3d({m]s|knk%t-yqv&");
      element0.prependChild(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" >b", " >b");
      Element element0 = document0.body();
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.setParentNode(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("0__xg7s", " > ");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.appendElement("N>vxF9vY7FCG1{xf2h");
      document0.setParentNode(document0);
      Elements elements0 = document0.nextElementSiblings();
      assertEquals("N>vxF9vY7FCG1{xf2h", document0.baseUri());
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Document.createShell("%)ut`4}z0zX=");
      document0.nextElementSibling();
      assertEquals("%)ut`4}z0zX=", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = Document.createShell("#GP.Tm^");
      document0.siblingElements();
      assertEquals("#GP.Tm^", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document document0 = Document.createShell("$friQw|'E");
      Element element0 = document0.prependChild(document0);
      Elements elements0 = element0.siblingElements();
      assertFalse(elements0.isEmpty());
      assertEquals("$friQw|'E", element0.baseUri());
      assertEquals(0, element0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("JD92@R$Bhrr", "JD92@R$Bhrr");
      Element element0 = document0.body();
      element0.before("c1p6^90Q8.a-");
      String string0 = element0.cssSelector();
      assertEquals("html > body:nth-child(4)", string0);
      assertEquals("JD92@R$Bhrr", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("org.jsoup.parser.Tag", "}5&\"8K\"!e");
      Element element0 = document0.toggleClass("}5&\"8K\"!e");
      element0.cssSelector();
      assertEquals("}5&\"8K\"!e", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "C!F!");
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
//      try { 
        document0.insertChildren(1137, nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = Document.createShell("#");
      Node[] nodeArray0 = new Node[0];
      // Undeclared exception!
//      try { 
        document0.insertChildren((-671), nodeArray0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parse("Y ^2JGw8If03qhZ32>m", "0__xg7s");
      Elements elements0 = document0.getElementsByIndexLessThan(1004);
      // Undeclared exception!
//      try { 
        document0.insertChildren(1004, (Collection<? extends Node>) elements0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Elements elements0 = document0.getElementsMatchingText("T|3xFPKoj");
      // Undeclared exception!
//      try { 
        document0.insertChildren((-5091), (Collection<? extends Node>) elements0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Insert position out of bounds.
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      DataNode dataNode0 = new DataNode("N>vxF9vY7FCG1{xf2h");
      Element element0 = document0.prependChild(dataNode0);
      List<DataNode> list0 = element0.dataNodes();
      assertEquals(0, dataNode0.siblingIndex());
      assertTrue(list0.contains(dataNode0));
      assertEquals(1, list0.size());
      assertEquals("N>vxF9vY7FCG1{xf2h", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("org.jsoup.parser.Token$Doctype", "org.jsoup.parser.Token$Doctype");
      List<TextNode> list0 = document0.textNodes();
      assertEquals("org.jsoup.parser.Token$Doctype", document0.baseUri());
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("xhtml", "QppipDHL+5!.UL-aYx'");
      List<TextNode> list0 = document0.textNodes();
      assertEquals(0, list0.size());
      assertEquals("QppipDHL+5!.UL-aYx'", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      Element element0 = document0.appendElement("IL");
      element0.after("IL");
      element0.lastElementSibling();
      assertEquals(3, document0.childNodeSize());
      assertEquals("N>vxF9vY7FCG1{xf2h", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.selectFirst("IL");
      assertEquals("N>vxF9vY7FCG1{xf2h", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("comment", "&g6t;");
      document0.getAllElements();
      assertEquals("&g6t;", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9n(vY7FCG1{xf2h", "N>vxF9n(vY7FCG1{xf2h");
      // Undeclared exception!
//      try { 
        document0.removeClass((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("JD92@R$Bhrr", "JD92@R$Bhrr");
      // Undeclared exception!
//      try { 
        document0.before("c1p6^90Q8.a-");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FC~:G1{xf2h", "N>vxF9vY7FC~:G1{xf2h");
      document0.getElementsByAttribute("IL");
      assertEquals("N>vxF9vY7FC~:G1{xf2h", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("0__xg7s", "p> ");
      document0.getElementsByAttributeValueNot("class", "p> ");
      assertEquals("p> ", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("02_xg7s", "02_xg7s");
      Element element0 = document0.shallowClone();
      assertEquals("02_xg7s", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      // Undeclared exception!
//      try { 
        document0.after((Node) document0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("0{s", "0{s");
      document0.getElementsByAttributeValueContaining("_3D({M]S|ksk%t-YQv&", ".r7].O ,(rb");
      assertEquals("0{s", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = new Document("{ =LB");
      document0.getElementsContainingText((String) null);
      assertEquals("{ =LB", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = Document.createShell("'IglO6vi%");
      document0.is("default");
      assertEquals("'IglO6vi%", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      Elements elements0 = document0.getElementsByAttributeValueMatching("        ", "");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("c!D", "c!D");
      Elements elements0 = document0.getElementsByIndexEquals(0);
      assertEquals("c!D", document0.baseUri());
      assertEquals(3, elements0.size());
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Document document0 = Document.createShell("giA7g{d;]D_]C@I");
      document0.getElementsByAttributeStarting("|?&850%cIHBNow");
      assertEquals("giA7g{d;]D_]C@I", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("JT)|:;", "N>vxF9vY7FCG1{xf2h");
      // Undeclared exception!
//      try { 
        document0.prependElement((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("publicId", parseSettings0);
      Element element0 = new Element(tag0, "value");
      element0.getElementsByIndexLessThan(782);
      assertEquals("value", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" >b", " >b");
      // Undeclared exception!
//      try { 
        document0.after(" >b");
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" ", " ");
      Pattern pattern0 = Pattern.compile(" ");
      document0.getElementsMatchingOwnText(pattern0);
      assertEquals(" ", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Parser.parse("R?>vxF9vY7FCG1{lf2h", "R?>vxF9vY7FCG1{lf2h");
      document0.prepend("IL");
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("JD92@R$Bhrr", "JD92@R$Bhrr");
      Element element0 = document0.body();
      String string0 = element0.cssSelector();
      assertEquals(1, element0.siblingIndex());
      assertEquals("html > body", string0);
      assertEquals("JD92@R$Bhrr", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      document0.getElementsByAttributeValueStarting(">", ">");
      assertEquals(1, document0.childNodeSize());
      assertEquals("N>vxF9vY7FCG1{xf2h", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Document.createShell("giA7g{d;]D_]C@I");
      document0.getElementsByAttributeValue("=o\"Fv{4AHf*X./@'0v'", "head");
      assertEquals(1, document0.childNodeSize());
      assertEquals("giA7g{d;]D_]C@I", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = new Document("?7O9X8?2zyeHo! (iH");
      document0.wholeText();
      assertEquals("?7O9X8?2zyeHo! (iH", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" > ", " > ");
      // Undeclared exception!
//      try { 
        document0.before((Node) document0);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Element element0 = null;
//      try {
        element0 = new Element((String) null);
//        fail("Expecting exception: IllegalArgumentException");
      
//      } catch(IllegalArgumentException e) {
//         //
//         // Object must not be null
//         //
//         verifyException("org.jsoup.helper.Validate", e);
//      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Parser.parse(" > ", "0__xg7s");
      document0.dataset();
      assertEquals("0__xg7s", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Document document0 = Parser.parse(" @> ", " @> ");
      Element element0 = document0.text(" @> ");
      assertEquals(" @> ", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Document.createShell("Tag name must not be empty.");
      document0.tagName("h2");
      Element element0 = document0.toggleClass("Tag name must not be empty.");
      assertEquals("Tag name must not be empty.", element0.baseUri());
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("0{s", "0{s");
      Element element0 = document0.prependText("Z:07u{a");
      assertEquals("0{s", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Document document0 = Document.createShell("c!D");
      Element element0 = document0.child(0);
      assertNotNull(element0);
      
      Element element1 = element0.clone();
      assertEquals("c!D", element1.baseUri());
      assertFalse(element1.hasParent());
      assertEquals(0, element0.siblingIndex());
      assertEquals(2, element0.childNodeSize());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("N>vxF9vY7FCG1{xf2h", "N>vxF9vY7FCG1{xf2h");
      // Undeclared exception!
//      try { 
        document0.wrap("N>vxF9vY7FCG1{xf2h");
//        fail("Expecting exception: NullPointerException");
      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("org.jsoup.nodes.Node", e);
//      }
  }
}
