Nr.   Classes Functions      NCSS  Javadocs Package
  1        26       416      3393       137 org.apache.commons.csv
  2         1         8        72         1 org.apache.commons.csv.perf
    --------- --------- --------- ---------
           27       424      3465       138 Total

 Packages   Classes Functions      NCSS  Javadocs | per
-------------------------------------------------------------
     2.00     27.00    424.00   3465.00    138.00 | Project
              13.50    212.00   1732.50     69.00 | Package
                        15.70    128.33      5.11 | Class
                                   8.17      0.33 | Function

Nr. NCSS Functions Classes Javadocs Class
  1   58         5       1        1 org.apache.commons.csv.CSVFileParserTest
  2  140         6       0        1 org.apache.commons.csv.ExtendedBufferedReaderTest
  3    5         2       1        1 org.apache.commons.csv.FercGovTest
  4  183        11       1        1 org.apache.commons.csv.PerformanceTest
  5   27         1       0        0 org.apache.commons.csv.JiraCsv167Test
  6   92        19       1        0 org.apache.commons.csv.CSVRecordTest
  7   90        10       1        1 org.apache.commons.csv.CSVBenchmark
  8  196        28       0        1 org.apache.commons.csv.LexerTest
  9    6         2       0        2 org.apache.commons.csv.Utils
 10   14         6       0        1 org.apache.commons.csv.CSVFormatPredefinedTest
 11    5         2       0        1 org.apache.commons.csv.AssertionsTest
 12  191        46       0        1 org.apache.commons.csv.CSVFormatTest
 13   55         8       0        1 org.apache.commons.csv.perf.PerformanceTest
 14  541        68       0        3 org.apache.commons.csv.CSVParserTest
 15   24         5       0        0 org.apache.commons.csv.TokenMatchersTest
 16  546        63       0        2 org.apache.commons.csv.CSVPrinterTest
 17   28         4       3        1 org.apache.commons.csv.TokenMatchers
 18    5         2       0        1 org.apache.commons.csv.Assertions
 19  136        15       1       15 org.apache.commons.csv.CSVParser
 20  184        15       0       12 org.apache.commons.csv.CSVPrinter
 21  287        56       1       53 org.apache.commons.csv.CSVFormat
 22   60        10       0        8 org.apache.commons.csv.ExtendedBufferedReader
 23    1         0       0        0 org.apache.commons.csv.QuoteMode
 24  189        20       0       12 org.apache.commons.csv.Lexer
 25   12         2       1        2 org.apache.commons.csv.Token
 26   20         0       0        1 org.apache.commons.csv.Constants
 27   61        18       0       16 org.apache.commons.csv.CSVRecord
Average Object NCSS:                116.89
Average Object Functions:            15.70
Average Object Inner Classes:         0.41
Average Object Javadoc Comments:      5.11
Program NCSS:                     3,465.00

Nr. NCSS CCN JVDC Function
  1    3   1    0 org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest(File)
  2    5   3    0 org.apache.commons.csv.CSVFileParserTest.readTestData()
  3    2   2    0 org.apache.commons.csv.CSVFileParserTest.FilenameFilter$1.accept(File,String)
  4   10   3    0 org.apache.commons.csv.CSVFileParserTest.generateData()
  5   35   9    0 org.apache.commons.csv.CSVFileParserTest.testCSVFile()
  6    1   1    0 org.apache.commons.csv.CSVFileParserTest.testCSVUrl()
  7    8   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput()
  8   49   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1()
  9   16   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2()
 10   40   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine()
 11   24   4    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar()
 12    2   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader(String)
 13    1   1    0 org.apache.commons.csv.FercGovTest.testContractFile()
 14    1   1    0 org.apache.commons.csv.FercGovTest.testTransactionFile()
 15   50  15    0 org.apache.commons.csv.PerformanceTest.main(String[])
 16    2   1    0 org.apache.commons.csv.PerformanceTest.getReader()
 17    3   1    0 org.apache.commons.csv.PerformanceTest.Stats.Stats(int,int)
 18    4   1    0 org.apache.commons.csv.PerformanceTest.show(String,Stats,long)
 19    7   3    0 org.apache.commons.csv.PerformanceTest.show()
 20    8   3    0 org.apache.commons.csv.PerformanceTest.testReadBigFile(boolean)
 21    8   3    0 org.apache.commons.csv.PerformanceTest.readAll(BufferedReader,boolean)
 22   31  10    0 org.apache.commons.csv.PerformanceTest.testExtendedBuffer(boolean)
 23   10   2    0 org.apache.commons.csv.PerformanceTest.testParseCommonsCSV()
 24    3   1    0 org.apache.commons.csv.PerformanceTest.getLexerCtor(String)
 25   40  13    0 org.apache.commons.csv.PerformanceTest.testCSVLexer(boolean,String)
 26    7   2    0 org.apache.commons.csv.PerformanceTest.iterate(CSVRecord)
 27   26   3    0 org.apache.commons.csv.JiraCsv167Test.parse()
 28    8   1    0 org.apache.commons.csv.CSVRecordTest.setUp()
 29    4   1    0 org.apache.commons.csv.CSVRecordTest.testGetInt()
 30    4   1    0 org.apache.commons.csv.CSVRecordTest.testGetString()
 31    3   1    0 org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord()
 32    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader()
 33    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum()
 34    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedName()
 35    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedNegativeInt()
 36    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedPositiveInt()
 37    5   1    0 org.apache.commons.csv.CSVRecordTest.testIsConsistent()
 38    4   1    0 org.apache.commons.csv.CSVRecordTest.testIsMapped()
 39    4   1    0 org.apache.commons.csv.CSVRecordTest.testIsSet()
 40    5   2    0 org.apache.commons.csv.CSVRecordTest.testIterator()
 41    6   1    0 org.apache.commons.csv.CSVRecordTest.testPutInMap()
 42   10   1    0 org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns()
 43    3   1    0 org.apache.commons.csv.CSVRecordTest.testToMap()
 44    4   1    0 org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord()
 45    6   1    0 org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader()
 46   11   2    0 org.apache.commons.csv.CSVRecordTest.validateMap(String,boolean)
 47    5   1    1 org.apache.commons.csv.CSVBenchmark.init()
 48    2   1    0 org.apache.commons.csv.CSVBenchmark.getReader()
 49    9   2    0 org.apache.commons.csv.CSVBenchmark.read(Blackhole)
 50   10   2    0 org.apache.commons.csv.CSVBenchmark.split(Blackhole)
 51    9   2    0 org.apache.commons.csv.CSVBenchmark.parseCommonsCSV(Blackhole)
 52   11   2    0 org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV(Blackhole)
 53   10   2    0 org.apache.commons.csv.CSVBenchmark.parseJavaCSV(Blackhole)
 54    9   2    0 org.apache.commons.csv.CSVBenchmark.parseOpenCSV(Blackhole)
 55    9   1    0 org.apache.commons.csv.CSVBenchmark.parseSkifeCSV(Blackhole)
 56    2   1    0 org.apache.commons.csv.CSVBenchmark.CountingReaderCallback.onRow(String[])
 57   10   2    0 org.apache.commons.csv.CSVBenchmark.parseSuperCSV(Blackhole)
 58    2   1    0 org.apache.commons.csv.LexerTest.setUp()
 59    2   1    0 org.apache.commons.csv.LexerTest.getLexer(String,CSVFormat)
 60   10   1    0 org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted()
 61   10   1    0 org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted()
 62   14   1    0 org.apache.commons.csv.LexerTest.testIgnoreEmptyLines()
 63   18   1    0 org.apache.commons.csv.LexerTest.testComments()
 64   28   1    0 org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines()
 65   12   1    0 org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping()
 66   12   1    0 org.apache.commons.csv.LexerTest.testBackslashWithEscaping()
 67   15   1    0 org.apache.commons.csv.LexerTest.testNextToken4()
 68    8   1    0 org.apache.commons.csv.LexerTest.testNextToken5()
 69    6   1    0 org.apache.commons.csv.LexerTest.testNextToken6()
 70    9   1    0 org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace()
 71    3   1    0 org.apache.commons.csv.LexerTest.testEscapedCR()
 72    4   1    0 org.apache.commons.csv.LexerTest.testCR()
 73    3   1    0 org.apache.commons.csv.LexerTest.testEscapedLF()
 74    4   1    0 org.apache.commons.csv.LexerTest.testLF()
 75    3   1    0 org.apache.commons.csv.LexerTest.testEscapedTab()
 76    3   1    0 org.apache.commons.csv.LexerTest.testTab()
 77    3   1    0 org.apache.commons.csv.LexerTest.testEscapedBackspace()
 78    3   1    0 org.apache.commons.csv.LexerTest.testBackspace()
 79    3   1    0 org.apache.commons.csv.LexerTest.testEscapedFF()
 80    3   1    0 org.apache.commons.csv.LexerTest.testFF()
 81    3   1    0 org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue()
 82    3   1    0 org.apache.commons.csv.LexerTest.testEscapedCharacter()
 83    3   1    0 org.apache.commons.csv.LexerTest.testEscapedControlCharacter()
 84    3   1    0 org.apache.commons.csv.LexerTest.testEscapedControlCharacter2()
 85    4   1    0 org.apache.commons.csv.LexerTest.testEscapingAtEOF()
 86    1   1    0 org.apache.commons.csv.Utils.Utils()
 87    4   2    1 org.apache.commons.csv.Utils.compare(String,String[][],CSVRecord)
 88    3   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.test(CSVFormat,String)
 89    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testDefault()
 90    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testExcel()
 91    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testMySQL()
 92    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testRFC4180()
 93    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testTDF()
 94    2   1    0 org.apache.commons.csv.AssertionsTest.testNotNull()
 95    2   1    0 org.apache.commons.csv.AssertionsTest.testNotNullNull()
 96    3   1    0 org.apache.commons.csv.CSVFormatTest.assertNotEquals(Object,Object)
 97    2   1    0 org.apache.commons.csv.CSVFormatTest.copy(CSVFormat)
 98    2   1    0 org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException()
 99    2   1    0 org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException()
100    2   1    0 org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements()
101   10   1    0 org.apache.commons.csv.CSVFormatTest.testEquals()
102    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart()
103    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter()
104    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsEscape()
105    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsHeader()
106    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines()
107    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces()
108    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar()
109    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy()
110    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator()
111    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsNullString()
112    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord()
113    2   1    0 org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException()
114    2   1    0 org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType()
115    5   1    0 org.apache.commons.csv.CSVFormatTest.testFormat()
116    9   1    0 org.apache.commons.csv.CSVFormatTest.testGetHeader()
117    5   1    0 org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106()
118    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException()
119    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType()
120    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException()
121    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException()
122    8   1    0 org.apache.commons.csv.CSVFormatTest.testRFC4180()
123   16   1    0 org.apache.commons.csv.CSVFormatTest.testSerialization()
124    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithCommentStart()
125    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException()
126    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithDelimiter()
127    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException()
128    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithEscape()
129    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions()
130    9   1    0 org.apache.commons.csv.CSVFormatTest.testWithHeader()
131   10   1    0 org.apache.commons.csv.CSVFormatTest.testJiraCsv154_withCommentMarker()
132   10   1    0 org.apache.commons.csv.CSVFormatTest.testJiraCsv154_withHeaderComments()
133    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines()
134    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround()
135    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithNullString()
136    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuoteChar()
137    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException()
138    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy()
139    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR()
140    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF()
141    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF()
142   11   3    0 org.apache.commons.csv.perf.PerformanceTest.setUpClass()
143    2   1    0 org.apache.commons.csv.perf.PerformanceTest.getBufferedReader()
144    8   4    0 org.apache.commons.csv.perf.PerformanceTest.parse(Reader,boolean)
145    2   1    0 org.apache.commons.csv.perf.PerformanceTest.println(String)
146    5   2    0 org.apache.commons.csv.perf.PerformanceTest.readAll(BufferedReader)
147    6   1    0 org.apache.commons.csv.perf.PerformanceTest.testParseBigFile(boolean)
148    5   2    0 org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat()
149   13   2    0 org.apache.commons.csv.perf.PerformanceTest.testReadBigFile()
150    9   1    0 org.apache.commons.csv.CSVParserTest.testBackslashEscaping()
151    9   1    0 org.apache.commons.csv.CSVParserTest.testBackslashEscaping2()
152   10   2    0 org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld()
153    8   2    0 org.apache.commons.csv.CSVParserTest.testBOM()
154    1   1    0 org.apache.commons.csv.CSVParserTest.testBOMInputStream()
155    6   1    0 org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings()
156    6   1    0 org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings()
157    8   1    0 org.apache.commons.csv.CSVParserTest.testClose()
158    6   1    0 org.apache.commons.csv.CSVParserTest.testCSV57()
159   16   1    0 org.apache.commons.csv.CSVParserTest.testDefaultFormat()
160    4   1    0 org.apache.commons.csv.CSVParserTest.testEmptyFile()
161   11   3    0 org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV()
162   11   3    0 org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel()
163   11   3    0 org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders()
164   11   3    0 org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV()
165   11   3    0 org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel()
166   10   2    0 org.apache.commons.csv.CSVParserTest.testExcelFormat1()
167   10   2    0 org.apache.commons.csv.CSVParserTest.testExcelFormat2()
168    9   2    1 org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData()
169    9   2    0 org.apache.commons.csv.CSVParserTest.testForEach()
170   16   2    0 org.apache.commons.csv.CSVParserTest.testGetHeaderMap()
171    2   1    0 org.apache.commons.csv.CSVParserTest.testDuplicateHeaders()
172    6   2    0 org.apache.commons.csv.CSVParserTest.testGetLine()
173    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR()
174    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF()
175    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF()
176    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF()
177    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF()
178    5   1    0 org.apache.commons.csv.CSVParserTest.testGetOneLine()
179   15   1    1 org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser()
180    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR()
181    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF()
182    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF()
183    8   2    0 org.apache.commons.csv.CSVParserTest.testGetRecords()
184   21   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues()
185   10   2    0 org.apache.commons.csv.CSVParserTest.testHeader()
186    9   2    0 org.apache.commons.csv.CSVParserTest.testHeaderMissing()
187    3   1    0 org.apache.commons.csv.CSVParserTest.testHeadersMissingException()
188    3   1    0 org.apache.commons.csv.CSVParserTest.testHeadersMissing()
189    3   1    0 org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull()
190   10   2    0 org.apache.commons.csv.CSVParserTest.testHeaderComment()
191    6   1    0 org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines()
192    3   1    0 org.apache.commons.csv.CSVParserTest.testInvalidFormat()
193   17   3    0 org.apache.commons.csv.CSVParserTest.testIterator()
194    6   1    0 org.apache.commons.csv.CSVParserTest.testLineFeedEndings()
195   26   1    0 org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport()
196   13   1    0 org.apache.commons.csv.CSVParserTest.testMultipleIterators()
197    2   1    0 org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat()
198    2   1    0 org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat()
199    4   1    0 org.apache.commons.csv.CSVParserTest.testNoHeaderMap()
200    2   1    0 org.apache.commons.csv.CSVParserTest.testParseFileNullFormat()
201    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullFileFormat()
202    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullStringFormat()
203    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat()
204    3   1    0 org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat()
205    2   1    0 org.apache.commons.csv.CSVParserTest.testParseStringNullFormat()
206    3   1    0 org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat()
207   14   2    0 org.apache.commons.csv.CSVParserTest.testProvidedHeader()
208   14   2    0 org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto()
209    8   2    0 org.apache.commons.csv.CSVParserTest.testRoundtrip()
210    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipAutoHeader()
211    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipSetHeader()
212    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders()
213    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders()
214   12   1    0 org.apache.commons.csv.CSVParserTest.validateLineNumbers(String)
215   16   1    0 org.apache.commons.csv.CSVParserTest.validateRecordNumbers(String)
216   39   1    0 org.apache.commons.csv.CSVParserTest.validateRecordPosition(String)
217    7   1    0 org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping()
218    5   1    0 org.apache.commons.csv.TokenMatchersTest.setUp()
219    5   1    0 org.apache.commons.csv.TokenMatchersTest.testHasType()
220    3   1    0 org.apache.commons.csv.TokenMatchersTest.testHasContent()
221    4   1    0 org.apache.commons.csv.TokenMatchersTest.testIsReady()
222    5   1    0 org.apache.commons.csv.TokenMatchersTest.testMatches()
223    9   4    0 org.apache.commons.csv.CSVPrinterTest.printable(String)
224   19   3    0 org.apache.commons.csv.CSVPrinterTest.doOneRandom(CSVFormat)
225    8   3    0 org.apache.commons.csv.CSVPrinterTest.generateLines(int,int)
226    3   2    0 org.apache.commons.csv.CSVPrinterTest.doRandom(CSVFormat,int)
227   40  11    0 org.apache.commons.csv.CSVPrinterTest.randStr()
228    6   1    0 org.apache.commons.csv.CSVPrinterTest.testDisabledComment()
229    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays()
230    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists()
231    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays()
232    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists()
233    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1()
234    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2()
235    3   1    0 org.apache.commons.csv.CSVPrinterTest.geH2Connection()
236   11   1    0 org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter()
237   13   1    0 org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet()
238   13   1    0 org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData()
239    7   1    0 org.apache.commons.csv.CSVPrinterTest.setUpTable(Connection)
240    6   1    0 org.apache.commons.csv.CSVPrinterTest.testMultiLineComment()
241    2   1    0 org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault()
242   91   1    0 org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput()
243    6   3    1 org.apache.commons.csv.CSVPrinterTest.expectNulls(T[],CSVFormat)
244    2   1    0 org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues(String,CSVFormat)
245    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter1()
246    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter2()
247    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter3()
248    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter4()
249    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter5()
250    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter6()
251    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter7()
252    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrint()
253    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrintNullValues()
254    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues()
255   16   1    0 org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues()
256    6   1    0 org.apache.commons.csv.CSVPrinterTest.testQuoteAll()
257    6   1    0 org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric()
258    2   1    0 org.apache.commons.csv.CSVPrinterTest.testRandomDefault()
259    2   1    0 org.apache.commons.csv.CSVPrinterTest.testRandomExcel()
260    2   1    0 org.apache.commons.csv.CSVPrinterTest.testRandomMySql()
261    2   1    0 org.apache.commons.csv.CSVPrinterTest.testRandomTdf()
262    2   1    0 org.apache.commons.csv.CSVPrinterTest.testRandomRfc4180()
263    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPlainQuoted()
264    6   1    0 org.apache.commons.csv.CSVPrinterTest.testSingleLineComment()
265    7   1    0 org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted()
266    7   1    0 org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted()
267    8   1    0 org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE()
268    7   1    0 org.apache.commons.csv.CSVPrinterTest.testEOLQuoted()
269   28   1    0 org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash()
270    7   1    0 org.apache.commons.csv.CSVPrinterTest.testPlainEscaped()
271    7   1    0 org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped()
272    7   1    0 org.apache.commons.csv.CSVPrinterTest.testEOLEscaped()
273    7   1    0 org.apache.commons.csv.CSVPrinterTest.testPlainPlain()
274    7   1    0 org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain()
275    7   1    0 org.apache.commons.csv.CSVPrinterTest.testHeader()
276    7   1    0 org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet()
277    7   1    0 org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue()
278    7   1    0 org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse()
279    7   1    0 org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel()
280    7   1    0 org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf()
281   10   1    0 org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments(StringWriter,Date,CSVFormat)
282    7   1    0 org.apache.commons.csv.CSVPrinterTest.testEOLPlain()
283    3   1    0 org.apache.commons.csv.CSVPrinterTest.testInvalidFormat()
284    2   1    0 org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat()
285    2   1    0 org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat()
286    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
287    4   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
288    9   1    0 org.apache.commons.csv.TokenMatchers.hasType(Token.Type)
289    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
290    4   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
291    9   1    0 org.apache.commons.csv.TokenMatchers.hasContent(String)
292    2   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
293    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
294    7   1    0 org.apache.commons.csv.TokenMatchers.isReady()
295    2   1    0 org.apache.commons.csv.TokenMatchers.matches(Token.Type,String)
296    1   1    0 org.apache.commons.csv.Assertions.Assertions()
297    3   3    0 org.apache.commons.csv.Assertions.notNull(Object,String)
298    4   1    1 org.apache.commons.csv.CSVParser.parse(File,Charset,CSVFormat)
299    4   1    1 org.apache.commons.csv.CSVParser.parse(String,CSVFormat)
300    5   1    1 org.apache.commons.csv.CSVParser.parse(URL,Charset,CSVFormat)
301    2   1    1 org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat)
302    8   1    1 org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)
303    4   2    0 org.apache.commons.csv.CSVParser.addRecordValue()
304    3   2    1 org.apache.commons.csv.CSVParser.close()
305    2   1    1 org.apache.commons.csv.CSVParser.getCurrentLineNumber()
306    2   2    1 org.apache.commons.csv.CSVParser.getHeaderMap()
307    2   1    1 org.apache.commons.csv.CSVParser.getRecordNumber()
308    6   2    1 org.apache.commons.csv.CSVParser.getRecords()
309   23  14    1 org.apache.commons.csv.CSVParser.initializeHeader()
310    2   1    1 org.apache.commons.csv.CSVParser.isClosed()
311    4   4    0 org.apache.commons.csv.CSVParser.Iterator$1.getNextRecord()
312    6   4    0 org.apache.commons.csv.CSVParser.Iterator$1.hasNext()
313   10   6    0 org.apache.commons.csv.CSVParser.Iterator$1.next()
314    2   2    0 org.apache.commons.csv.CSVParser.Iterator$1.remove()
315   25   1    1 org.apache.commons.csv.CSVParser.iterator()
316   36  13    1 org.apache.commons.csv.CSVParser.nextRecord()
317   11   6    1 org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)
318    3   2    0 org.apache.commons.csv.CSVPrinter.close()
319    3   2    1 org.apache.commons.csv.CSVPrinter.flush()
320    2   1    1 org.apache.commons.csv.CSVPrinter.getOut()
321    8   3    1 org.apache.commons.csv.CSVPrinter.print(Object)
322   11   4    0 org.apache.commons.csv.CSVPrinter.print(Object,CharSequence,int,int)
323   22  10    0 org.apache.commons.csv.CSVPrinter.printAndEscape(CharSequence,int,int)
324   61  31    0 org.apache.commons.csv.CSVPrinter.printAndQuote(Object,CharSequence,int,int)
325   22   9    1 org.apache.commons.csv.CSVPrinter.printComment(String)
326    5   2    1 org.apache.commons.csv.CSVPrinter.println()
327    4   2    1 org.apache.commons.csv.CSVPrinter.printRecord(Iterable)
328    4   2    1 org.apache.commons.csv.CSVPrinter.printRecord(Object)
329    9   4    1 org.apache.commons.csv.CSVPrinter.printRecords(Iterable)
330    9   4    1 org.apache.commons.csv.CSVPrinter.printRecords(Object)
331    6   3    1 org.apache.commons.csv.CSVPrinter.printRecords(ResultSet)
332    2   1    0 org.apache.commons.csv.CSVFormat.Predefined.Predefined(CSVFormat)
333    2   1    0 org.apache.commons.csv.CSVFormat.Predefined.getFormat()
334    2   2    1 org.apache.commons.csv.CSVFormat.isLineBreak(char)
335    2   2    1 org.apache.commons.csv.CSVFormat.isLineBreak(Character)
336    2   1    1 org.apache.commons.csv.CSVFormat.newFormat(char)
337    2   1    1 org.apache.commons.csv.CSVFormat.valueOf(String)
338   16   2    1 org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean)
339    8   5    0 org.apache.commons.csv.CSVFormat.toStringArray(Object[])
340   51  44    0 org.apache.commons.csv.CSVFormat.equals(Object)
341    6   4    1 org.apache.commons.csv.CSVFormat.format(Object)
342    2   1    1 org.apache.commons.csv.CSVFormat.getCommentMarker()
343    2   1    1 org.apache.commons.csv.CSVFormat.getDelimiter()
344    2   1    1 org.apache.commons.csv.CSVFormat.getEscapeCharacter()
345    2   2    1 org.apache.commons.csv.CSVFormat.getHeader()
346    2   2    1 org.apache.commons.csv.CSVFormat.getHeaderComments()
347    2   1    1 org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames()
348    2   1    1 org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines()
349    2   1    1 org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces()
350    2   1    1 org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase()
351    2   1    1 org.apache.commons.csv.CSVFormat.getNullString()
352    2   1    1 org.apache.commons.csv.CSVFormat.getQuoteCharacter()
353    2   1    1 org.apache.commons.csv.CSVFormat.getQuoteMode()
354    2   1    1 org.apache.commons.csv.CSVFormat.getRecordSeparator()
355    2   1    1 org.apache.commons.csv.CSVFormat.getSkipHeaderRecord()
356   16  11    0 org.apache.commons.csv.CSVFormat.hashCode()
357    2   1    1 org.apache.commons.csv.CSVFormat.isCommentMarkerSet()
358    2   1    1 org.apache.commons.csv.CSVFormat.isEscapeCharacterSet()
359    2   1    1 org.apache.commons.csv.CSVFormat.isNullStringSet()
360    2   1    1 org.apache.commons.csv.CSVFormat.isQuoteCharacterSet()
361    2   1    1 org.apache.commons.csv.CSVFormat.parse(Reader)
362    2   1    1 org.apache.commons.csv.CSVFormat.print(Appendable)
363   32  11    0 org.apache.commons.csv.CSVFormat.toString()
364   20  25    1 org.apache.commons.csv.CSVFormat.validate()
365    2   1    1 org.apache.commons.csv.CSVFormat.withCommentMarker(char)
366    4   3    1 org.apache.commons.csv.CSVFormat.withCommentMarker(Character)
367    4   3    1 org.apache.commons.csv.CSVFormat.withDelimiter(char)
368    2   1    1 org.apache.commons.csv.CSVFormat.withEscape(char)
369    4   3    1 org.apache.commons.csv.CSVFormat.withEscape(Character)
370    2   1    1 org.apache.commons.csv.CSVFormat.withHeader(String)
371    2   2    1 org.apache.commons.csv.CSVFormat.withHeader(ResultSet)
372    8   3    1 org.apache.commons.csv.CSVFormat.withHeader(ResultSetMetaData)
373    2   1    1 org.apache.commons.csv.CSVFormat.withHeaderComments(Object)
374    2   1    1 org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames()
375    2   1    1 org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)
376    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines()
377    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)
378    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces()
379    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)
380    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase()
381    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)
382    2   1    1 org.apache.commons.csv.CSVFormat.withNullString(String)
383    2   1    1 org.apache.commons.csv.CSVFormat.withQuote(char)
384    4   3    1 org.apache.commons.csv.CSVFormat.withQuote(Character)
385    2   1    1 org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)
386    2   1    1 org.apache.commons.csv.CSVFormat.withRecordSeparator(char)
387    2   1    1 org.apache.commons.csv.CSVFormat.withRecordSeparator(String)
388    2   1    1 org.apache.commons.csv.CSVFormat.withSkipHeaderRecord()
389    2   1    1 org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)
390    2   1    1 org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(Reader)
391    7   4    0 org.apache.commons.csv.ExtendedBufferedReader.read()
392    2   1    1 org.apache.commons.csv.ExtendedBufferedReader.getLastChar()
393   19  10    0 org.apache.commons.csv.ExtendedBufferedReader.read(int[],int,int)
394    8   2    1 org.apache.commons.csv.ExtendedBufferedReader.readLine()
395    5   1    1 org.apache.commons.csv.ExtendedBufferedReader.lookAhead()
396    4   6    1 org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber()
397    2   1    1 org.apache.commons.csv.ExtendedBufferedReader.getPosition()
398    2   1    0 org.apache.commons.csv.ExtendedBufferedReader.isClosed()
399    4   1    1 org.apache.commons.csv.ExtendedBufferedReader.close()
400    8   1    0 org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)
401   44  23    1 org.apache.commons.csv.Lexer.nextToken(Token)
402   28   8    1 org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)
403   39  17    1 org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)
404    2   2    0 org.apache.commons.csv.Lexer.mapNullToDisabled(Character)
405    2   1    1 org.apache.commons.csv.Lexer.getCurrentLineNumber()
406    2   1    1 org.apache.commons.csv.Lexer.getCharacterPosition()
407   25  21    1 org.apache.commons.csv.Lexer.readEscape()
408    6   4    0 org.apache.commons.csv.Lexer.trimTrailingSpaces(StringBuilder)
409    4   4    1 org.apache.commons.csv.Lexer.readEndOfLine(int)
410    2   1    0 org.apache.commons.csv.Lexer.isClosed()
411    2   2    1 org.apache.commons.csv.Lexer.isWhitespace(int)
412    2   3    1 org.apache.commons.csv.Lexer.isStartOfLine(int)
413    2   1    1 org.apache.commons.csv.Lexer.isEndOfFile(int)
414    2   1    0 org.apache.commons.csv.Lexer.isDelimiter(int)
415    2   1    0 org.apache.commons.csv.Lexer.isEscape(int)
416    2   1    0 org.apache.commons.csv.Lexer.isQuoteChar(int)
417    2   1    0 org.apache.commons.csv.Lexer.isCommentStart(int)
418    2   4    0 org.apache.commons.csv.Lexer.isMetaChar(int)
419    2   1    1 org.apache.commons.csv.Lexer.close()
420    4   1    0 org.apache.commons.csv.Token.reset()
421    2   1    1 org.apache.commons.csv.Token.toString()
422    6   2    0 org.apache.commons.csv.CSVRecord.CSVRecord(String[],Integer,String,long,long)
423    2   1    1 org.apache.commons.csv.CSVRecord.get(Enum)
424    2   1    1 org.apache.commons.csv.CSVRecord.get(int)
425    9   8    1 org.apache.commons.csv.CSVRecord.get(String)
426    2   1    1 org.apache.commons.csv.CSVRecord.getCharacterPosition()
427    2   1    1 org.apache.commons.csv.CSVRecord.getComment()
428    2   1    1 org.apache.commons.csv.CSVRecord.getRecordNumber()
429    2   2    1 org.apache.commons.csv.CSVRecord.isConsistent()
430    2   1    1 org.apache.commons.csv.CSVRecord.isComment()
431    2   2    1 org.apache.commons.csv.CSVRecord.isMapped(String)
432    2   2    1 org.apache.commons.csv.CSVRecord.isSet(String)
433    2   1    1 org.apache.commons.csv.CSVRecord.iterator()
434    8   5    0 org.apache.commons.csv.CSVRecord.putIn(M)
435    2   1    1 org.apache.commons.csv.CSVRecord.size()
436    2   1    1 org.apache.commons.csv.CSVRecord.toList()
437    2   1    1 org.apache.commons.csv.CSVRecord.toMap()
438    2   1    1 org.apache.commons.csv.CSVRecord.toString()
439    2   1    0 org.apache.commons.csv.CSVRecord.values()
Average Function NCSS:       6.99
Average Function CCN:        2.05
Average Function JVDC:       0.26
Program NCSS:            3,465.00
