Nr.   Classes Functions      NCSS  Javadocs Package
  1        23       399      3233       156 org.apache.commons.csv
  2         5        14       132         2 org.apache.commons.csv.issues
  3         1         8        67         1 org.apache.commons.csv.perf
    --------- --------- --------- ---------
           29       421      3432       159 Total

 Packages   Classes Functions      NCSS  Javadocs | per
-------------------------------------------------------------
     3.00     29.00    421.00   3432.00    159.00 | Project
               9.67    140.33   1144.00     53.00 | Package
                        14.52    118.34      5.48 | Class
                                   8.15      0.38 | Function

Nr. NCSS Functions Classes Javadocs Class
  1   56         5       1        1 org.apache.commons.csv.CSVFileParserTest
  2  117         6       0        1 org.apache.commons.csv.ExtendedBufferedReaderTest
  3  176        12       1        1 org.apache.commons.csv.PerformanceTest
  4   88        19       1        0 org.apache.commons.csv.CSVRecordTest
  5   90        10       1        1 org.apache.commons.csv.CSVBenchmark
  6  170        28       0        1 org.apache.commons.csv.LexerTest
  7    6         2       0        2 org.apache.commons.csv.Utils
  8   20         9       0        1 org.apache.commons.csv.CSVFormatPredefinedTest
  9    5         2       0        1 org.apache.commons.csv.AssertionsTest
 10  573        58       2        1 org.apache.commons.csv.CSVFormatTest
 11   50         8       0        1 org.apache.commons.csv.perf.PerformanceTest
 12   43         7       0        1 org.apache.commons.csv.issues.JiraCsv203Test
 13    5         2       0        0 org.apache.commons.csv.issues.JiraCsv167Test
 14    8         1       0        0 org.apache.commons.csv.issues.JiraCsv198Test
 15   13         2       0        1 org.apache.commons.csv.issues.JiraCsv213Test
 16   17         2       0        0 org.apache.commons.csv.issues.JiraCsv164Test
 17  546        77       0        3 org.apache.commons.csv.CSVParserTest
 18   24         5       0        0 org.apache.commons.csv.TokenMatchersTest
 19   28         4       3        1 org.apache.commons.csv.TokenMatchers
 20    5         2       0        1 org.apache.commons.csv.Assertions
 21  151        19       1       19 org.apache.commons.csv.CSVParser
 22   87        13       0       13 org.apache.commons.csv.CSVPrinter
 23  460        77       1       70 org.apache.commons.csv.CSVFormat
 24   60        10       0        8 org.apache.commons.csv.ExtendedBufferedReader
 25    1         0       0        0 org.apache.commons.csv.QuoteMode
 26  202        21       0       12 org.apache.commons.csv.Lexer
 27   12         2       1        2 org.apache.commons.csv.Token
 28   21         0       0        1 org.apache.commons.csv.Constants
 29   61        18       0       16 org.apache.commons.csv.CSVRecord
Average Object NCSS:                106.72
Average Object Functions:            14.52
Average Object Inner Classes:         0.41
Average Object Javadoc Comments:      5.48
Program NCSS:                     3,432.00

Nr. NCSS CCN JVDC Function
  1    3   1    0 org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest(File)
  2    5   3    0 org.apache.commons.csv.CSVFileParserTest.readTestData()
  3    2   2    0 org.apache.commons.csv.CSVFileParserTest.FilenameFilter$1.accept(File,String)
  4   10   3    0 org.apache.commons.csv.CSVFileParserTest.generateData()
  5   33   9    0 org.apache.commons.csv.CSVFileParserTest.testCSVFile()
  6    1   1    0 org.apache.commons.csv.CSVFileParserTest.testCSVUrl()
  7    6   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput()
  8   47   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1()
  9   14   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2()
 10   30   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine()
 11   17   4    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar()
 12    2   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.createBufferedReader(String)
 13   46  15    0 org.apache.commons.csv.PerformanceTest.main(String[])
 14    2   1    0 org.apache.commons.csv.PerformanceTest.createReader()
 15    3   1    0 org.apache.commons.csv.PerformanceTest.Stats.Stats(int,int)
 16    4   1    0 org.apache.commons.csv.PerformanceTest.show(String,Stats,long)
 17    7   3    0 org.apache.commons.csv.PerformanceTest.show()
 18    8   3    0 org.apache.commons.csv.PerformanceTest.testReadBigFile(boolean)
 19    8   3    0 org.apache.commons.csv.PerformanceTest.readAll(BufferedReader,boolean)
 20   30  10    0 org.apache.commons.csv.PerformanceTest.testExtendedBuffer(boolean)
 21    8   2    0 org.apache.commons.csv.PerformanceTest.testParseCommonsCSV()
 22    3   1    0 org.apache.commons.csv.PerformanceTest.getLexerCtor(String)
 23   38  13    0 org.apache.commons.csv.PerformanceTest.testCSVLexer(boolean,String)
 24    2   2    0 org.apache.commons.csv.PerformanceTest.createTestCSVLexer(String,ExtendedBufferedReader)
 25    7   2    0 org.apache.commons.csv.PerformanceTest.iterate(CSVRecord)
 26    8   1    0 org.apache.commons.csv.CSVRecordTest.setUp()
 27    4   1    0 org.apache.commons.csv.CSVRecordTest.testGetInt()
 28    4   1    0 org.apache.commons.csv.CSVRecordTest.testGetString()
 29    3   1    0 org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord()
 30    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader()
 31    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum()
 32    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedName()
 33    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedNegativeInt()
 34    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedPositiveInt()
 35    5   1    0 org.apache.commons.csv.CSVRecordTest.testIsConsistent()
 36    4   1    0 org.apache.commons.csv.CSVRecordTest.testIsMapped()
 37    4   1    0 org.apache.commons.csv.CSVRecordTest.testIsSet()
 38    5   2    0 org.apache.commons.csv.CSVRecordTest.testIterator()
 39    6   1    0 org.apache.commons.csv.CSVRecordTest.testPutInMap()
 40    8   1    0 org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns()
 41    3   1    0 org.apache.commons.csv.CSVRecordTest.testToMap()
 42    3   1    0 org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord()
 43    5   1    0 org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader()
 44   11   2    0 org.apache.commons.csv.CSVRecordTest.validateMap(String,boolean)
 45    5   1    1 org.apache.commons.csv.CSVBenchmark.init()
 46    2   1    0 org.apache.commons.csv.CSVBenchmark.getReader()
 47    9   2    0 org.apache.commons.csv.CSVBenchmark.read(Blackhole)
 48   10   2    0 org.apache.commons.csv.CSVBenchmark.split(Blackhole)
 49    9   2    0 org.apache.commons.csv.CSVBenchmark.parseCommonsCSV(Blackhole)
 50   11   2    0 org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV(Blackhole)
 51   10   2    0 org.apache.commons.csv.CSVBenchmark.parseJavaCSV(Blackhole)
 52    9   2    0 org.apache.commons.csv.CSVBenchmark.parseOpenCSV(Blackhole)
 53    9   1    0 org.apache.commons.csv.CSVBenchmark.parseSkifeCSV(Blackhole)
 54    2   1    0 org.apache.commons.csv.CSVBenchmark.CountingReaderCallback.onRow(String[])
 55   10   2    0 org.apache.commons.csv.CSVBenchmark.parseSuperCSV(Blackhole)
 56    2   1    0 org.apache.commons.csv.LexerTest.setUp()
 57    2   1    0 org.apache.commons.csv.LexerTest.createLexer(String,CSVFormat)
 58    9   1    0 org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted()
 59    9   1    0 org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted()
 60   13   1    0 org.apache.commons.csv.LexerTest.testIgnoreEmptyLines()
 61   17   1    0 org.apache.commons.csv.LexerTest.testComments()
 62   27   1    0 org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines()
 63   11   1    0 org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping()
 64   11   1    0 org.apache.commons.csv.LexerTest.testBackslashWithEscaping()
 65   14   1    0 org.apache.commons.csv.LexerTest.testNextToken4()
 66    7   1    0 org.apache.commons.csv.LexerTest.testNextToken5()
 67    5   1    0 org.apache.commons.csv.LexerTest.testNextToken6()
 68    8   1    0 org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace()
 69    2   1    0 org.apache.commons.csv.LexerTest.testEscapedCR()
 70    3   1    0 org.apache.commons.csv.LexerTest.testCR()
 71    2   1    0 org.apache.commons.csv.LexerTest.testEscapedLF()
 72    3   1    0 org.apache.commons.csv.LexerTest.testLF()
 73    2   1    0 org.apache.commons.csv.LexerTest.testEscapedTab()
 74    2   1    0 org.apache.commons.csv.LexerTest.testTab()
 75    2   1    0 org.apache.commons.csv.LexerTest.testEscapedBackspace()
 76    2   1    0 org.apache.commons.csv.LexerTest.testBackspace()
 77    2   1    0 org.apache.commons.csv.LexerTest.testEscapedFF()
 78    2   1    0 org.apache.commons.csv.LexerTest.testFF()
 79    2   1    0 org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue()
 80    2   1    0 org.apache.commons.csv.LexerTest.testEscapedCharacter()
 81    2   1    0 org.apache.commons.csv.LexerTest.testEscapedControlCharacter()
 82    2   1    0 org.apache.commons.csv.LexerTest.testEscapedControlCharacter2()
 83    3   1    0 org.apache.commons.csv.LexerTest.testEscapingAtEOF()
 84    1   1    0 org.apache.commons.csv.Utils.Utils()
 85    4   2    1 org.apache.commons.csv.Utils.compare(String,String[][],CSVRecord)
 86    3   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.test(CSVFormat,String)
 87    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testDefault()
 88    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testExcel()
 89    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testMySQL()
 90    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testOracle()
 91    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testPostgreSqlCsv()
 92    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testPostgreSqlText()
 93    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testRFC4180()
 94    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testTDF()
 95    2   1    0 org.apache.commons.csv.AssertionsTest.testNotNull()
 96    2   1    0 org.apache.commons.csv.AssertionsTest.testNotNullNull()
 97    3   1    0 org.apache.commons.csv.CSVFormatTest.assertNotEquals(Object,Object)
 98    2   1    0 org.apache.commons.csv.CSVFormatTest.copy(CSVFormat)
 99    2   1    0 org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException()
100    2   1    0 org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException()
101    2   1    0 org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements()
102   10   1    0 org.apache.commons.csv.CSVFormatTest.testEquals()
103    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart()
104    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter()
105    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsEscape()
106    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsHeader()
107    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines()
108    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces()
109    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote()
110    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes()
111    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsNullString()
112   82   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsOne()
113    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar()
114    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy()
115    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator()
116    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord()
117   39   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsWithNull()
118    2   1    0 org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException()
119    2   1    0 org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType()
120    5   1    0 org.apache.commons.csv.CSVFormatTest.testFormat()
121    6   2    0 org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException()
122    9   1    0 org.apache.commons.csv.CSVFormatTest.testGetHeader()
123    9   1    0 org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase()
124   38   1    0 org.apache.commons.csv.CSVFormatTest.testNewFormat()
125    5   1    0 org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106()
126    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException()
127    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType()
128    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException()
129    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException()
130    8   1    0 org.apache.commons.csv.CSVFormatTest.testRFC4180()
131   14   1    0 org.apache.commons.csv.CSVFormatTest.testSerialization()
132    4   1    0 org.apache.commons.csv.CSVFormatTest.testToString()
133  103   1    0 org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter()
134    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithCommentStart()
135    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException()
136    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithDelimiter()
137    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException()
138    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum()
139    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithEscape()
140    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions()
141    4   1    0 org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader()
142    5   1    0 org.apache.commons.csv.CSVFormatTest.testWithHeader()
143  104   1    0 org.apache.commons.csv.CSVFormatTest.testWithHeaderComments()
144    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum()
145    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines()
146    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround()
147    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithNullString()
148    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuoteChar()
149    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException()
150    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy()
151    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR()
152    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF()
153    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF()
154    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithSystemRecordSeparator()
155    7   3    0 org.apache.commons.csv.perf.PerformanceTest.setUpClass()
156    2   1    0 org.apache.commons.csv.perf.PerformanceTest.createBufferedReader()
157    8   4    0 org.apache.commons.csv.perf.PerformanceTest.parse(Reader,boolean)
158    2   1    0 org.apache.commons.csv.perf.PerformanceTest.println(String)
159    5   2    0 org.apache.commons.csv.perf.PerformanceTest.readAll(BufferedReader)
160    6   1    0 org.apache.commons.csv.perf.PerformanceTest.testParseBigFile(boolean)
161    5   2    0 org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat()
162   12   2    0 org.apache.commons.csv.perf.PerformanceTest.testReadBigFile()
163    6   1    0 org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll()
164    6   1    0 org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull()
165    6   1    0 org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode()
166    6   1    0 org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal()
167    6   1    0 org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric()
168    6   1    0 org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString()
169    6   1    0 org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues()
170    1   1    0 org.apache.commons.csv.issues.JiraCsv167Test.parse()
171    3   1    0 org.apache.commons.csv.issues.JiraCsv167Test.getTestInput()
172    6   2    0 org.apache.commons.csv.issues.JiraCsv198Test.test()
173   10   5    0 org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel(File)
174    2   1    0 org.apache.commons.csv.issues.JiraCsv213Test.test()
175    8   1    0 org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withCommentMarker()
176    8   1    0 org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments()
177    3   1    0 org.apache.commons.csv.CSVParserTest.createBOMInputStream(String)
178    7   1    0 org.apache.commons.csv.CSVParserTest.testBackslashEscaping()
179    7   1    0 org.apache.commons.csv.CSVParserTest.testBackslashEscaping2()
180    8   2    0 org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld()
181    5   2    0 org.apache.commons.csv.CSVParserTest.testBOM()
182    1   1    0 org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader()
183    1   1    0 org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader()
184    1   1    0 org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream()
185    4   1    0 org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings()
186    4   1    0 org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings()
187    5   1    0 org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCrLf()
188    5   1    0 org.apache.commons.csv.CSVParserTest.testFirstEndOfLineLf()
189    5   1    0 org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCr()
190    7   1    0 org.apache.commons.csv.CSVParserTest.testClose()
191    4   1    0 org.apache.commons.csv.CSVParserTest.testCSV57()
192   12   1    0 org.apache.commons.csv.CSVParserTest.testDefaultFormat()
193    2   1    0 org.apache.commons.csv.CSVParserTest.testDuplicateHeaders()
194    2   1    0 org.apache.commons.csv.CSVParserTest.testEmptyFile()
195    9   3    0 org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV()
196    9   3    0 org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel()
197    9   3    0 org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV()
198    9   3    0 org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel()
199    8   2    0 org.apache.commons.csv.CSVParserTest.testExcelFormat1()
200    8   2    0 org.apache.commons.csv.CSVParserTest.testExcelFormat2()
201    6   2    1 org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData()
202    8   2    0 org.apache.commons.csv.CSVParserTest.testForEach()
203   14   2    0 org.apache.commons.csv.CSVParserTest.testGetHeaderMap()
204    4   2    0 org.apache.commons.csv.CSVParserTest.testGetLine()
205    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR()
206    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF()
207    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF()
208    3   1    0 org.apache.commons.csv.CSVParserTest.testGetOneLine()
209   10   1    1 org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser()
210    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR()
211    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF()
212    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF()
213    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF()
214    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF()
215    6   2    0 org.apache.commons.csv.CSVParserTest.testGetRecords()
216   19   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues()
217   10   2    0 org.apache.commons.csv.CSVParserTest.testHeader()
218   10   2    0 org.apache.commons.csv.CSVParserTest.testHeaderComment()
219    9   2    0 org.apache.commons.csv.CSVParserTest.testHeaderMissing()
220    3   1    0 org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull()
221    3   1    0 org.apache.commons.csv.CSVParserTest.testHeadersMissing()
222    3   1    0 org.apache.commons.csv.CSVParserTest.testHeadersMissingException()
223    7   1    0 org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping()
224    4   1    0 org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines()
225    3   1    0 org.apache.commons.csv.CSVParserTest.testInvalidFormat()
226   17   3    0 org.apache.commons.csv.CSVParserTest.testIterator()
227    4   1    0 org.apache.commons.csv.CSVParserTest.testLineFeedEndings()
228   26   1    0 org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport()
229   11   1    0 org.apache.commons.csv.CSVParserTest.testMultipleIterators()
230    2   1    0 org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat()
231    2   1    0 org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat()
232    2   1    0 org.apache.commons.csv.CSVParserTest.testNoHeaderMap()
233    2   1    0 org.apache.commons.csv.CSVParserTest.testParseFileNullFormat()
234    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullFileFormat()
235    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullStringFormat()
236    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat()
237    2   1    0 org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat()
238    2   1    0 org.apache.commons.csv.CSVParserTest.testParseStringNullFormat()
239    2   1    0 org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat()
240   14   2    0 org.apache.commons.csv.CSVParserTest.testProvidedHeader()
241   14   2    0 org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto()
242    6   2    0 org.apache.commons.csv.CSVParserTest.testRoundtrip()
243    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipAutoHeader()
244    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders()
245    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders()
246    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipSetHeader()
247    9   3    0 org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders()
248    8   1    0 org.apache.commons.csv.CSVParserTest.testTrailingDelimiter()
249    8   1    0 org.apache.commons.csv.CSVParserTest.testTrim()
250   38  10    0 org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking()
251   10   1    0 org.apache.commons.csv.CSVParserTest.validateLineNumbers(String)
252   14   1    0 org.apache.commons.csv.CSVParserTest.validateRecordNumbers(String)
253   39   1    0 org.apache.commons.csv.CSVParserTest.validateRecordPosition(String)
254    5   1    0 org.apache.commons.csv.TokenMatchersTest.setUp()
255    5   1    0 org.apache.commons.csv.TokenMatchersTest.testHasType()
256    3   1    0 org.apache.commons.csv.TokenMatchersTest.testHasContent()
257    4   1    0 org.apache.commons.csv.TokenMatchersTest.testIsReady()
258    5   1    0 org.apache.commons.csv.TokenMatchersTest.testMatches()
259    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
260    4   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
261    9   1    0 org.apache.commons.csv.TokenMatchers.hasType(Token.Type)
262    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
263    4   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
264    9   1    0 org.apache.commons.csv.TokenMatchers.hasContent(String)
265    2   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
266    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
267    7   1    0 org.apache.commons.csv.TokenMatchers.isReady()
268    2   1    0 org.apache.commons.csv.TokenMatchers.matches(Token.Type,String)
269    1   1    0 org.apache.commons.csv.Assertions.Assertions()
270    3   3    0 org.apache.commons.csv.Assertions.notNull(Object,String)
271    4   1    1 org.apache.commons.csv.CSVParser.parse(File,Charset,CSVFormat)
272    4   1    1 org.apache.commons.csv.CSVParser.parse(InputStream,Charset,CSVFormat)
273    4   1    1 org.apache.commons.csv.CSVParser.parse(Path,Charset,CSVFormat)
274    2   1    1 org.apache.commons.csv.CSVParser.parse(Reader,CSVFormat)
275    4   1    1 org.apache.commons.csv.CSVParser.parse(String,CSVFormat)
276    5   1    1 org.apache.commons.csv.CSVParser.parse(URL,Charset,CSVFormat)
277    2   1    1 org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat)
278    8   1    1 org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)
279    7   7    0 org.apache.commons.csv.CSVParser.addRecordValue(boolean)
280    3   2    1 org.apache.commons.csv.CSVParser.close()
281    2   1    1 org.apache.commons.csv.CSVParser.getCurrentLineNumber()
282    2   1    1 org.apache.commons.csv.CSVParser.getFirstEndOfLine()
283    2   2    1 org.apache.commons.csv.CSVParser.getHeaderMap()
284    2   1    1 org.apache.commons.csv.CSVParser.getRecordNumber()
285    6   2    1 org.apache.commons.csv.CSVParser.getRecords()
286   23  13    1 org.apache.commons.csv.CSVParser.initializeHeader()
287    2   1    1 org.apache.commons.csv.CSVParser.isClosed()
288    4   4    0 org.apache.commons.csv.CSVParser.Iterator$1.getNextRecord()
289    6   4    0 org.apache.commons.csv.CSVParser.Iterator$1.hasNext()
290   10   6    0 org.apache.commons.csv.CSVParser.Iterator$1.next()
291    2   2    0 org.apache.commons.csv.CSVParser.Iterator$1.remove()
292   25   1    1 org.apache.commons.csv.CSVParser.iterator()
293   36  13    1 org.apache.commons.csv.CSVParser.nextRecord()
294   11   6    1 org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)
295    2   1    0 org.apache.commons.csv.CSVPrinter.close()
296    6   5    1 org.apache.commons.csv.CSVPrinter.close(boolean)
297    3   2    1 org.apache.commons.csv.CSVPrinter.flush()
298    2   1    1 org.apache.commons.csv.CSVPrinter.getOut()
299    3   1    1 org.apache.commons.csv.CSVPrinter.print(Object)
300   22   9    1 org.apache.commons.csv.CSVPrinter.printComment(String)
301    3   1    1 org.apache.commons.csv.CSVPrinter.println()
302    4   2    1 org.apache.commons.csv.CSVPrinter.printRecord(Iterable)
303    3   1    1 org.apache.commons.csv.CSVPrinter.printRecord(Object)
304    9   4    1 org.apache.commons.csv.CSVPrinter.printRecords(Iterable)
305    9   4    1 org.apache.commons.csv.CSVPrinter.printRecords(Object)
306    6   3    1 org.apache.commons.csv.CSVPrinter.printRecords(ResultSet)
307    2   1    0 org.apache.commons.csv.CSVFormat.Predefined.Predefined(CSVFormat)
308    2   1    0 org.apache.commons.csv.CSVFormat.Predefined.getFormat()
309    2   2    1 org.apache.commons.csv.CSVFormat.isLineBreak(char)
310    2   2    1 org.apache.commons.csv.CSVFormat.isLineBreak(Character)
311    2   1    1 org.apache.commons.csv.CSVFormat.newFormat(char)
312    2   1    1 org.apache.commons.csv.CSVFormat.valueOf(String)
313   19   2    1 org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)
314   51  44    0 org.apache.commons.csv.CSVFormat.equals(Object)
315    6   4    1 org.apache.commons.csv.CSVFormat.format(Object)
316    2   1    1 org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames()
317    2   1    1 org.apache.commons.csv.CSVFormat.getAutoFlush()
318    2   1    1 org.apache.commons.csv.CSVFormat.getCommentMarker()
319    2   1    1 org.apache.commons.csv.CSVFormat.getDelimiter()
320    2   1    1 org.apache.commons.csv.CSVFormat.getEscapeCharacter()
321    2   2    1 org.apache.commons.csv.CSVFormat.getHeader()
322    2   2    1 org.apache.commons.csv.CSVFormat.getHeaderComments()
323    2   1    1 org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines()
324    2   1    1 org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase()
325    2   1    1 org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces()
326    2   1    1 org.apache.commons.csv.CSVFormat.getNullString()
327    2   1    1 org.apache.commons.csv.CSVFormat.getQuoteCharacter()
328    2   1    1 org.apache.commons.csv.CSVFormat.getQuoteMode()
329    2   1    1 org.apache.commons.csv.CSVFormat.getRecordSeparator()
330    2   1    1 org.apache.commons.csv.CSVFormat.getSkipHeaderRecord()
331    2   1    1 org.apache.commons.csv.CSVFormat.getTrailingDelimiter()
332    2   1    1 org.apache.commons.csv.CSVFormat.getTrim()
333   16  11    0 org.apache.commons.csv.CSVFormat.hashCode()
334    2   1    1 org.apache.commons.csv.CSVFormat.isCommentMarkerSet()
335    2   1    1 org.apache.commons.csv.CSVFormat.isEscapeCharacterSet()
336    2   1    1 org.apache.commons.csv.CSVFormat.isNullStringSet()
337    2   1    1 org.apache.commons.csv.CSVFormat.isQuoteCharacterSet()
338    2   1    1 org.apache.commons.csv.CSVFormat.parse(Reader)
339    2   1    1 org.apache.commons.csv.CSVFormat.print(Appendable)
340    2   1    1 org.apache.commons.csv.CSVFormat.print(File,Charset)
341   14   6    1 org.apache.commons.csv.CSVFormat.print(Object,Appendable,boolean)
342   13   5    0 org.apache.commons.csv.CSVFormat.print(Object,CharSequence,int,int,Appendable,boolean)
343    2   1    1 org.apache.commons.csv.CSVFormat.print(Path,Charset)
344   22  10    0 org.apache.commons.csv.CSVFormat.printAndEscape(CharSequence,int,int,Appendable)
345   59  25    0 org.apache.commons.csv.CSVFormat.printAndQuote(Object,CharSequence,int,int,Appendable,boolean)
346    2   1    1 org.apache.commons.csv.CSVFormat.printer()
347    5   3    1 org.apache.commons.csv.CSVFormat.println(Appendable)
348    4   2    1 org.apache.commons.csv.CSVFormat.printRecord(Appendable,Object)
349   32  11    0 org.apache.commons.csv.CSVFormat.toString()
350    8   5    0 org.apache.commons.csv.CSVFormat.toStringArray(Object[])
351   11   9    0 org.apache.commons.csv.CSVFormat.trim(CharSequence)
352   20  25    1 org.apache.commons.csv.CSVFormat.validate()
353    2   1    1 org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames()
354    2   1    1 org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)
355    2   1    1 org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)
356    2   1    1 org.apache.commons.csv.CSVFormat.withCommentMarker(char)
357    4   3    1 org.apache.commons.csv.CSVFormat.withCommentMarker(Character)
358    4   3    1 org.apache.commons.csv.CSVFormat.withDelimiter(char)
359    2   1    1 org.apache.commons.csv.CSVFormat.withEscape(char)
360    4   3    1 org.apache.commons.csv.CSVFormat.withEscape(Character)
361    2   1    1 org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader()
362    8   3    1 org.apache.commons.csv.CSVFormat.withHeader(Enum)
363    2   2    1 org.apache.commons.csv.CSVFormat.withHeader(ResultSet)
364    8   3    1 org.apache.commons.csv.CSVFormat.withHeader(ResultSetMetaData)
365    2   1    1 org.apache.commons.csv.CSVFormat.withHeader(String)
366    2   1    1 org.apache.commons.csv.CSVFormat.withHeaderComments(Object)
367    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines()
368    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)
369    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase()
370    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)
371    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces()
372    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)
373    2   1    1 org.apache.commons.csv.CSVFormat.withNullString(String)
374    2   1    1 org.apache.commons.csv.CSVFormat.withQuote(char)
375    4   3    1 org.apache.commons.csv.CSVFormat.withQuote(Character)
376    2   1    1 org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)
377    2   1    1 org.apache.commons.csv.CSVFormat.withRecordSeparator(char)
378    2   1    1 org.apache.commons.csv.CSVFormat.withRecordSeparator(String)
379    2   1    1 org.apache.commons.csv.CSVFormat.withSkipHeaderRecord()
380    2   1    1 org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)
381    2   1    1 org.apache.commons.csv.CSVFormat.withSystemRecordSeparator()
382    2   1    1 org.apache.commons.csv.CSVFormat.withTrailingDelimiter()
383    2   1    1 org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)
384    2   1    1 org.apache.commons.csv.CSVFormat.withTrim()
385    2   1    1 org.apache.commons.csv.CSVFormat.withTrim(boolean)
386    2   1    1 org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(Reader)
387    7   4    0 org.apache.commons.csv.ExtendedBufferedReader.read()
388    2   1    1 org.apache.commons.csv.ExtendedBufferedReader.getLastChar()
389   19  10    0 org.apache.commons.csv.ExtendedBufferedReader.read(int[],int,int)
390    8   2    1 org.apache.commons.csv.ExtendedBufferedReader.readLine()
391    5   1    1 org.apache.commons.csv.ExtendedBufferedReader.lookAhead()
392    4   6    1 org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber()
393    2   1    1 org.apache.commons.csv.ExtendedBufferedReader.getPosition()
394    2   1    0 org.apache.commons.csv.ExtendedBufferedReader.isClosed()
395    4   1    1 org.apache.commons.csv.ExtendedBufferedReader.close()
396    2   1    0 org.apache.commons.csv.Lexer.getFirstEol()
397    8   1    0 org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)
398   44  23    1 org.apache.commons.csv.Lexer.nextToken(Token)
399   28   8    1 org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)
400   39  17    1 org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)
401    2   2    0 org.apache.commons.csv.Lexer.mapNullToDisabled(Character)
402    2   1    1 org.apache.commons.csv.Lexer.getCurrentLineNumber()
403    2   1    1 org.apache.commons.csv.Lexer.getCharacterPosition()
404   25  21    1 org.apache.commons.csv.Lexer.readEscape()
405    6   4    0 org.apache.commons.csv.Lexer.trimTrailingSpaces(StringBuilder)
406   12   8    1 org.apache.commons.csv.Lexer.readEndOfLine(int)
407    2   1    0 org.apache.commons.csv.Lexer.isClosed()
408    2   2    1 org.apache.commons.csv.Lexer.isWhitespace(int)
409    2   3    1 org.apache.commons.csv.Lexer.isStartOfLine(int)
410    2   1    1 org.apache.commons.csv.Lexer.isEndOfFile(int)
411    2   1    0 org.apache.commons.csv.Lexer.isDelimiter(int)
412    2   1    0 org.apache.commons.csv.Lexer.isEscape(int)
413    2   1    0 org.apache.commons.csv.Lexer.isQuoteChar(int)
414    2   1    0 org.apache.commons.csv.Lexer.isCommentStart(int)
415    2   4    0 org.apache.commons.csv.Lexer.isMetaChar(int)
416    2   1    1 org.apache.commons.csv.Lexer.close()
417    4   1    0 org.apache.commons.csv.Token.reset()
418    2   1    1 org.apache.commons.csv.Token.toString()
419    6   2    0 org.apache.commons.csv.CSVRecord.CSVRecord(String[],Integer,String,long,long)
420    2   1    1 org.apache.commons.csv.CSVRecord.get(Enum)
421    2   1    1 org.apache.commons.csv.CSVRecord.get(int)
422    9   8    1 org.apache.commons.csv.CSVRecord.get(String)
423    2   1    1 org.apache.commons.csv.CSVRecord.getCharacterPosition()
424    2   1    1 org.apache.commons.csv.CSVRecord.getComment()
425    2   1    1 org.apache.commons.csv.CSVRecord.getRecordNumber()
426    2   2    1 org.apache.commons.csv.CSVRecord.isConsistent()
427    2   1    1 org.apache.commons.csv.CSVRecord.hasComment()
428    2   2    1 org.apache.commons.csv.CSVRecord.isMapped(String)
429    2   2    1 org.apache.commons.csv.CSVRecord.isSet(String)
430    2   1    1 org.apache.commons.csv.CSVRecord.iterator()
431    8   5    0 org.apache.commons.csv.CSVRecord.putIn(M)
432    2   1    1 org.apache.commons.csv.CSVRecord.size()
433    2   1    1 org.apache.commons.csv.CSVRecord.toList()
434    2   1    1 org.apache.commons.csv.CSVRecord.toMap()
435    2   1    1 org.apache.commons.csv.CSVRecord.toString()
436    2   1    0 org.apache.commons.csv.CSVRecord.values()
Average Function NCSS:       6.86
Average Function CCN:        2.09
Average Function JVDC:       0.31
Program NCSS:            3,432.00
