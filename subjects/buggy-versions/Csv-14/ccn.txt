Nr.   Classes Functions      NCSS  Javadocs Package
  1        23       376      2744       150 org.apache.commons.csv
  2         2         4        40         0 org.apache.commons.csv.bugs
  3         1         8        67         1 org.apache.commons.csv.perf
    --------- --------- --------- ---------
           26       388      2851       151 Total

 Packages   Classes Functions      NCSS  Javadocs | per
-------------------------------------------------------------
     3.00     26.00    388.00   2851.00    151.00 | Project
               8.67    129.33    950.33     50.33 | Package
                        14.92    109.65      5.81 | Class
                                   7.35      0.39 | Function

Nr. NCSS Functions Classes Javadocs Class
  1   56         5       1        1 org.apache.commons.csv.CSVFileParserTest
  2  117         6       0        1 org.apache.commons.csv.ExtendedBufferedReaderTest
  3  176        12       1        1 org.apache.commons.csv.PerformanceTest
  4   88        19       1        0 org.apache.commons.csv.CSVRecordTest
  5   90        10       1        1 org.apache.commons.csv.CSVBenchmark
  6  170        28       0        1 org.apache.commons.csv.LexerTest
  7    5         2       0        0 org.apache.commons.csv.bugs.JiraCsv167Test
  8   17         2       0        0 org.apache.commons.csv.bugs.JiraCsv164Test
  9    6         2       0        2 org.apache.commons.csv.Utils
 10   14         6       0        1 org.apache.commons.csv.CSVFormatPredefinedTest
 11    5         2       0        1 org.apache.commons.csv.AssertionsTest
 12  185        49       2        1 org.apache.commons.csv.CSVFormatTest
 13   50         8       0        1 org.apache.commons.csv.perf.PerformanceTest
 14  493        73       0        3 org.apache.commons.csv.CSVParserTest
 15   24         5       0        0 org.apache.commons.csv.TokenMatchersTest
 16   28         4       3        1 org.apache.commons.csv.TokenMatchers
 17    5         2       0        1 org.apache.commons.csv.Assertions
 18  149        18       1       18 org.apache.commons.csv.CSVParser
 19   82        12       0       12 org.apache.commons.csv.CSVPrinter
 20  443        73       1       66 org.apache.commons.csv.CSVFormat
 21   60        10       0        8 org.apache.commons.csv.ExtendedBufferedReader
 22    1         0       0        0 org.apache.commons.csv.QuoteMode
 23  189        20       0       12 org.apache.commons.csv.Lexer
 24   12         2       1        2 org.apache.commons.csv.Token
 25   21         0       0        1 org.apache.commons.csv.Constants
 26   61        18       0       16 org.apache.commons.csv.CSVRecord
Average Object NCSS:                 97.96
Average Object Functions:            14.92
Average Object Inner Classes:         0.46
Average Object Javadoc Comments:      5.81
Program NCSS:                     2,851.00

Nr. NCSS CCN JVDC Function
  1    3   1    0 org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest(File)
  2    5   3    0 org.apache.commons.csv.CSVFileParserTest.readTestData()
  3    2   2    0 org.apache.commons.csv.CSVFileParserTest.FilenameFilter$1.accept(File,String)
  4   10   3    0 org.apache.commons.csv.CSVFileParserTest.generateData()
  5   33   9    0 org.apache.commons.csv.CSVFileParserTest.testCSVFile()
  6    1   1    0 org.apache.commons.csv.CSVFileParserTest.testCSVUrl()
  7    6   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput()
  8   47   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1()
  9   14   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2()
 10   30   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine()
 11   17   4    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar()
 12    2   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.createBufferedReader(String)
 13   46  15    0 org.apache.commons.csv.PerformanceTest.main(String[])
 14    2   1    0 org.apache.commons.csv.PerformanceTest.createReader()
 15    3   1    0 org.apache.commons.csv.PerformanceTest.Stats.Stats(int,int)
 16    4   1    0 org.apache.commons.csv.PerformanceTest.show(String,Stats,long)
 17    7   3    0 org.apache.commons.csv.PerformanceTest.show()
 18    8   3    0 org.apache.commons.csv.PerformanceTest.testReadBigFile(boolean)
 19    8   3    0 org.apache.commons.csv.PerformanceTest.readAll(BufferedReader,boolean)
 20   30  10    0 org.apache.commons.csv.PerformanceTest.testExtendedBuffer(boolean)
 21    8   2    0 org.apache.commons.csv.PerformanceTest.testParseCommonsCSV()
 22    3   1    0 org.apache.commons.csv.PerformanceTest.getLexerCtor(String)
 23   38  13    0 org.apache.commons.csv.PerformanceTest.testCSVLexer(boolean,String)
 24    2   2    0 org.apache.commons.csv.PerformanceTest.createTestCSVLexer(String,ExtendedBufferedReader)
 25    7   2    0 org.apache.commons.csv.PerformanceTest.iterate(CSVRecord)
 26    8   1    0 org.apache.commons.csv.CSVRecordTest.setUp()
 27    4   1    0 org.apache.commons.csv.CSVRecordTest.testGetInt()
 28    4   1    0 org.apache.commons.csv.CSVRecordTest.testGetString()
 29    3   1    0 org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord()
 30    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader()
 31    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum()
 32    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedName()
 33    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedNegativeInt()
 34    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedPositiveInt()
 35    5   1    0 org.apache.commons.csv.CSVRecordTest.testIsConsistent()
 36    4   1    0 org.apache.commons.csv.CSVRecordTest.testIsMapped()
 37    4   1    0 org.apache.commons.csv.CSVRecordTest.testIsSet()
 38    5   2    0 org.apache.commons.csv.CSVRecordTest.testIterator()
 39    6   1    0 org.apache.commons.csv.CSVRecordTest.testPutInMap()
 40    8   1    0 org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns()
 41    3   1    0 org.apache.commons.csv.CSVRecordTest.testToMap()
 42    3   1    0 org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord()
 43    5   1    0 org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader()
 44   11   2    0 org.apache.commons.csv.CSVRecordTest.validateMap(String,boolean)
 45    5   1    1 org.apache.commons.csv.CSVBenchmark.init()
 46    2   1    0 org.apache.commons.csv.CSVBenchmark.getReader()
 47    9   2    0 org.apache.commons.csv.CSVBenchmark.read(Blackhole)
 48   10   2    0 org.apache.commons.csv.CSVBenchmark.split(Blackhole)
 49    9   2    0 org.apache.commons.csv.CSVBenchmark.parseCommonsCSV(Blackhole)
 50   11   2    0 org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV(Blackhole)
 51   10   2    0 org.apache.commons.csv.CSVBenchmark.parseJavaCSV(Blackhole)
 52    9   2    0 org.apache.commons.csv.CSVBenchmark.parseOpenCSV(Blackhole)
 53    9   1    0 org.apache.commons.csv.CSVBenchmark.parseSkifeCSV(Blackhole)
 54    2   1    0 org.apache.commons.csv.CSVBenchmark.CountingReaderCallback.onRow(String[])
 55   10   2    0 org.apache.commons.csv.CSVBenchmark.parseSuperCSV(Blackhole)
 56    2   1    0 org.apache.commons.csv.LexerTest.setUp()
 57    2   1    0 org.apache.commons.csv.LexerTest.createLexer(String,CSVFormat)
 58    9   1    0 org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted()
 59    9   1    0 org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted()
 60   13   1    0 org.apache.commons.csv.LexerTest.testIgnoreEmptyLines()
 61   17   1    0 org.apache.commons.csv.LexerTest.testComments()
 62   27   1    0 org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines()
 63   11   1    0 org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping()
 64   11   1    0 org.apache.commons.csv.LexerTest.testBackslashWithEscaping()
 65   14   1    0 org.apache.commons.csv.LexerTest.testNextToken4()
 66    7   1    0 org.apache.commons.csv.LexerTest.testNextToken5()
 67    5   1    0 org.apache.commons.csv.LexerTest.testNextToken6()
 68    8   1    0 org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace()
 69    2   1    0 org.apache.commons.csv.LexerTest.testEscapedCR()
 70    3   1    0 org.apache.commons.csv.LexerTest.testCR()
 71    2   1    0 org.apache.commons.csv.LexerTest.testEscapedLF()
 72    3   1    0 org.apache.commons.csv.LexerTest.testLF()
 73    2   1    0 org.apache.commons.csv.LexerTest.testEscapedTab()
 74    2   1    0 org.apache.commons.csv.LexerTest.testTab()
 75    2   1    0 org.apache.commons.csv.LexerTest.testEscapedBackspace()
 76    2   1    0 org.apache.commons.csv.LexerTest.testBackspace()
 77    2   1    0 org.apache.commons.csv.LexerTest.testEscapedFF()
 78    2   1    0 org.apache.commons.csv.LexerTest.testFF()
 79    2   1    0 org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue()
 80    2   1    0 org.apache.commons.csv.LexerTest.testEscapedCharacter()
 81    2   1    0 org.apache.commons.csv.LexerTest.testEscapedControlCharacter()
 82    2   1    0 org.apache.commons.csv.LexerTest.testEscapedControlCharacter2()
 83    3   1    0 org.apache.commons.csv.LexerTest.testEscapingAtEOF()
 84    1   1    0 org.apache.commons.csv.bugs.JiraCsv167Test.parse()
 85    3   1    0 org.apache.commons.csv.bugs.JiraCsv167Test.getTestInput()
 86    8   1    0 org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withCommentMarker()
 87    8   1    0 org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withHeaderComments()
 88    1   1    0 org.apache.commons.csv.Utils.Utils()
 89    4   2    1 org.apache.commons.csv.Utils.compare(String,String[][],CSVRecord)
 90    3   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.test(CSVFormat,String)
 91    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testDefault()
 92    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testExcel()
 93    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testMySQL()
 94    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testRFC4180()
 95    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testTDF()
 96    2   1    0 org.apache.commons.csv.AssertionsTest.testNotNull()
 97    2   1    0 org.apache.commons.csv.AssertionsTest.testNotNullNull()
 98    3   1    0 org.apache.commons.csv.CSVFormatTest.assertNotEquals(Object,Object)
 99    2   1    0 org.apache.commons.csv.CSVFormatTest.copy(CSVFormat)
100    2   1    0 org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException()
101    2   1    0 org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException()
102    2   1    0 org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements()
103   10   1    0 org.apache.commons.csv.CSVFormatTest.testEquals()
104    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart()
105    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter()
106    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsEscape()
107    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsHeader()
108    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines()
109    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces()
110    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar()
111    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote()
112    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes()
113    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy()
114    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator()
115    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsNullString()
116    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord()
117    2   1    0 org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException()
118    2   1    0 org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType()
119    5   1    0 org.apache.commons.csv.CSVFormatTest.testFormat()
120    9   1    0 org.apache.commons.csv.CSVFormatTest.testGetHeader()
121    5   1    0 org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106()
122    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException()
123    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType()
124    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException()
125    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException()
126    8   1    0 org.apache.commons.csv.CSVFormatTest.testRFC4180()
127   14   1    0 org.apache.commons.csv.CSVFormatTest.testSerialization()
128    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithCommentStart()
129    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException()
130    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithDelimiter()
131    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException()
132    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithEscape()
133    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions()
134    5   1    0 org.apache.commons.csv.CSVFormatTest.testWithHeader()
135    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum()
136    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum()
137    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines()
138    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround()
139    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithNullString()
140    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuoteChar()
141    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException()
142    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy()
143    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR()
144    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF()
145    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF()
146    4   1    0 org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader()
147    7   3    0 org.apache.commons.csv.perf.PerformanceTest.setUpClass()
148    2   1    0 org.apache.commons.csv.perf.PerformanceTest.createBufferedReader()
149    8   4    0 org.apache.commons.csv.perf.PerformanceTest.parse(Reader,boolean)
150    2   1    0 org.apache.commons.csv.perf.PerformanceTest.println(String)
151    5   2    0 org.apache.commons.csv.perf.PerformanceTest.readAll(BufferedReader)
152    6   1    0 org.apache.commons.csv.perf.PerformanceTest.testParseBigFile(boolean)
153    5   2    0 org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat()
154   12   2    0 org.apache.commons.csv.perf.PerformanceTest.testReadBigFile()
155    3   1    0 org.apache.commons.csv.CSVParserTest.createBOMInputStream(String)
156    7   1    0 org.apache.commons.csv.CSVParserTest.testBackslashEscaping()
157    7   1    0 org.apache.commons.csv.CSVParserTest.testBackslashEscaping2()
158    8   2    0 org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld()
159    5   2    0 org.apache.commons.csv.CSVParserTest.testBOM()
160    1   1    0 org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader()
161    1   1    0 org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader()
162    1   1    0 org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream()
163    4   1    0 org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings()
164    4   1    0 org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings()
165    7   1    0 org.apache.commons.csv.CSVParserTest.testClose()
166    4   1    0 org.apache.commons.csv.CSVParserTest.testCSV57()
167   12   1    0 org.apache.commons.csv.CSVParserTest.testDefaultFormat()
168    2   1    0 org.apache.commons.csv.CSVParserTest.testDuplicateHeaders()
169    2   1    0 org.apache.commons.csv.CSVParserTest.testEmptyFile()
170    9   3    0 org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV()
171    9   3    0 org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel()
172    9   3    0 org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV()
173    9   3    0 org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel()
174    8   2    0 org.apache.commons.csv.CSVParserTest.testExcelFormat1()
175    8   2    0 org.apache.commons.csv.CSVParserTest.testExcelFormat2()
176    6   2    1 org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData()
177    8   2    0 org.apache.commons.csv.CSVParserTest.testForEach()
178   14   2    0 org.apache.commons.csv.CSVParserTest.testGetHeaderMap()
179    4   2    0 org.apache.commons.csv.CSVParserTest.testGetLine()
180    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR()
181    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF()
182    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF()
183    3   1    0 org.apache.commons.csv.CSVParserTest.testGetOneLine()
184   10   1    1 org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser()
185    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR()
186    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF()
187    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF()
188    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF()
189    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF()
190    6   2    0 org.apache.commons.csv.CSVParserTest.testGetRecords()
191   19   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues()
192   10   2    0 org.apache.commons.csv.CSVParserTest.testHeader()
193   10   2    0 org.apache.commons.csv.CSVParserTest.testHeaderComment()
194    9   2    0 org.apache.commons.csv.CSVParserTest.testHeaderMissing()
195    3   1    0 org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull()
196    3   1    0 org.apache.commons.csv.CSVParserTest.testHeadersMissing()
197    3   1    0 org.apache.commons.csv.CSVParserTest.testHeadersMissingException()
198    7   1    0 org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping()
199    4   1    0 org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines()
200    3   1    0 org.apache.commons.csv.CSVParserTest.testInvalidFormat()
201   17   3    0 org.apache.commons.csv.CSVParserTest.testIterator()
202    4   1    0 org.apache.commons.csv.CSVParserTest.testLineFeedEndings()
203   26   1    0 org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport()
204   11   1    0 org.apache.commons.csv.CSVParserTest.testMultipleIterators()
205    2   1    0 org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat()
206    2   1    0 org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat()
207    2   1    0 org.apache.commons.csv.CSVParserTest.testNoHeaderMap()
208    2   1    0 org.apache.commons.csv.CSVParserTest.testParseFileNullFormat()
209    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullFileFormat()
210    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullStringFormat()
211    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat()
212    2   1    0 org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat()
213    2   1    0 org.apache.commons.csv.CSVParserTest.testParseStringNullFormat()
214    2   1    0 org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat()
215   14   2    0 org.apache.commons.csv.CSVParserTest.testProvidedHeader()
216   14   2    0 org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto()
217    6   2    0 org.apache.commons.csv.CSVParserTest.testRoundtrip()
218    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipAutoHeader()
219    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders()
220    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders()
221    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipSetHeader()
222    9   3    0 org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders()
223    8   1    0 org.apache.commons.csv.CSVParserTest.testTrailingDelimiter()
224    8   1    0 org.apache.commons.csv.CSVParserTest.testTrim()
225   10   1    0 org.apache.commons.csv.CSVParserTest.validateLineNumbers(String)
226   14   1    0 org.apache.commons.csv.CSVParserTest.validateRecordNumbers(String)
227   39   1    0 org.apache.commons.csv.CSVParserTest.validateRecordPosition(String)
228    5   1    0 org.apache.commons.csv.TokenMatchersTest.setUp()
229    5   1    0 org.apache.commons.csv.TokenMatchersTest.testHasType()
230    3   1    0 org.apache.commons.csv.TokenMatchersTest.testHasContent()
231    4   1    0 org.apache.commons.csv.TokenMatchersTest.testIsReady()
232    5   1    0 org.apache.commons.csv.TokenMatchersTest.testMatches()
233    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
234    4   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
235    9   1    0 org.apache.commons.csv.TokenMatchers.hasType(Token.Type)
236    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
237    4   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
238    9   1    0 org.apache.commons.csv.TokenMatchers.hasContent(String)
239    2   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
240    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
241    7   1    0 org.apache.commons.csv.TokenMatchers.isReady()
242    2   1    0 org.apache.commons.csv.TokenMatchers.matches(Token.Type,String)
243    1   1    0 org.apache.commons.csv.Assertions.Assertions()
244    3   3    0 org.apache.commons.csv.Assertions.notNull(Object,String)
245    4   1    1 org.apache.commons.csv.CSVParser.parse(File,Charset,CSVFormat)
246    4   1    1 org.apache.commons.csv.CSVParser.parse(InputStream,Charset,CSVFormat)
247    4   1    1 org.apache.commons.csv.CSVParser.parse(Path,Charset,CSVFormat)
248    2   1    1 org.apache.commons.csv.CSVParser.parse(Reader,CSVFormat)
249    4   1    1 org.apache.commons.csv.CSVParser.parse(String,CSVFormat)
250    5   1    1 org.apache.commons.csv.CSVParser.parse(URL,Charset,CSVFormat)
251    2   1    1 org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat)
252    8   1    1 org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)
253    7   7    0 org.apache.commons.csv.CSVParser.addRecordValue(boolean)
254    3   2    1 org.apache.commons.csv.CSVParser.close()
255    2   1    1 org.apache.commons.csv.CSVParser.getCurrentLineNumber()
256    2   2    1 org.apache.commons.csv.CSVParser.getHeaderMap()
257    2   1    1 org.apache.commons.csv.CSVParser.getRecordNumber()
258    6   2    1 org.apache.commons.csv.CSVParser.getRecords()
259   23  13    1 org.apache.commons.csv.CSVParser.initializeHeader()
260    2   1    1 org.apache.commons.csv.CSVParser.isClosed()
261    4   4    0 org.apache.commons.csv.CSVParser.Iterator$1.getNextRecord()
262    6   4    0 org.apache.commons.csv.CSVParser.Iterator$1.hasNext()
263   10   6    0 org.apache.commons.csv.CSVParser.Iterator$1.next()
264    2   2    0 org.apache.commons.csv.CSVParser.Iterator$1.remove()
265   25   1    1 org.apache.commons.csv.CSVParser.iterator()
266   36  13    1 org.apache.commons.csv.CSVParser.nextRecord()
267   11   6    1 org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)
268    3   2    0 org.apache.commons.csv.CSVPrinter.close()
269    3   2    1 org.apache.commons.csv.CSVPrinter.flush()
270    2   1    1 org.apache.commons.csv.CSVPrinter.getOut()
271    3   1    1 org.apache.commons.csv.CSVPrinter.print(Object)
272   22   9    1 org.apache.commons.csv.CSVPrinter.printComment(String)
273    3   1    1 org.apache.commons.csv.CSVPrinter.println()
274    4   2    1 org.apache.commons.csv.CSVPrinter.printRecord(Iterable)
275    3   1    1 org.apache.commons.csv.CSVPrinter.printRecord(Object)
276    9   4    1 org.apache.commons.csv.CSVPrinter.printRecords(Iterable)
277    9   4    1 org.apache.commons.csv.CSVPrinter.printRecords(Object)
278    6   3    1 org.apache.commons.csv.CSVPrinter.printRecords(ResultSet)
279    2   1    0 org.apache.commons.csv.CSVFormat.Predefined.Predefined(CSVFormat)
280    2   1    0 org.apache.commons.csv.CSVFormat.Predefined.getFormat()
281    2   2    1 org.apache.commons.csv.CSVFormat.isLineBreak(char)
282    2   2    1 org.apache.commons.csv.CSVFormat.isLineBreak(Character)
283    2   1    1 org.apache.commons.csv.CSVFormat.newFormat(char)
284    2   1    1 org.apache.commons.csv.CSVFormat.valueOf(String)
285   18   2    1 org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean)
286   51  44    0 org.apache.commons.csv.CSVFormat.equals(Object)
287    6   4    1 org.apache.commons.csv.CSVFormat.format(Object)
288    2   1    1 org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames()
289    2   1    1 org.apache.commons.csv.CSVFormat.getCommentMarker()
290    2   1    1 org.apache.commons.csv.CSVFormat.getDelimiter()
291    2   1    1 org.apache.commons.csv.CSVFormat.getEscapeCharacter()
292    2   2    1 org.apache.commons.csv.CSVFormat.getHeader()
293    2   2    1 org.apache.commons.csv.CSVFormat.getHeaderComments()
294    2   1    1 org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines()
295    2   1    1 org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase()
296    2   1    1 org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces()
297    2   1    1 org.apache.commons.csv.CSVFormat.getNullString()
298    2   1    1 org.apache.commons.csv.CSVFormat.getQuoteCharacter()
299    2   1    1 org.apache.commons.csv.CSVFormat.getQuoteMode()
300    2   1    1 org.apache.commons.csv.CSVFormat.getRecordSeparator()
301    2   1    1 org.apache.commons.csv.CSVFormat.getSkipHeaderRecord()
302    2   1    1 org.apache.commons.csv.CSVFormat.getTrailingDelimiter()
303    2   1    1 org.apache.commons.csv.CSVFormat.getTrim()
304   16  11    0 org.apache.commons.csv.CSVFormat.hashCode()
305    2   1    1 org.apache.commons.csv.CSVFormat.isCommentMarkerSet()
306    2   1    1 org.apache.commons.csv.CSVFormat.isEscapeCharacterSet()
307    2   1    1 org.apache.commons.csv.CSVFormat.isNullStringSet()
308    2   1    1 org.apache.commons.csv.CSVFormat.isQuoteCharacterSet()
309    2   1    1 org.apache.commons.csv.CSVFormat.parse(Reader)
310    2   1    1 org.apache.commons.csv.CSVFormat.print(Appendable)
311    2   1    1 org.apache.commons.csv.CSVFormat.print(File,Charset)
312    2   1    1 org.apache.commons.csv.CSVFormat.print(Path,Charset)
313    8   5    1 org.apache.commons.csv.CSVFormat.print(Object,Appendable,boolean)
314   13   5    0 org.apache.commons.csv.CSVFormat.print(Object,CharSequence,int,int,Appendable,boolean)
315   22  10    0 org.apache.commons.csv.CSVFormat.printAndEscape(CharSequence,int,int,Appendable)
316   61  31    0 org.apache.commons.csv.CSVFormat.printAndQuote(Object,CharSequence,int,int,Appendable,boolean)
317    5   3    1 org.apache.commons.csv.CSVFormat.println(Appendable)
318    4   2    1 org.apache.commons.csv.CSVFormat.printRecord(Appendable,Object)
319   32  11    0 org.apache.commons.csv.CSVFormat.toString()
320    8   5    0 org.apache.commons.csv.CSVFormat.toStringArray(Object[])
321   11   9    0 org.apache.commons.csv.CSVFormat.trim(CharSequence)
322   20  25    1 org.apache.commons.csv.CSVFormat.validate()
323    2   1    1 org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames()
324    2   1    1 org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)
325    2   1    1 org.apache.commons.csv.CSVFormat.withCommentMarker(char)
326    4   3    1 org.apache.commons.csv.CSVFormat.withCommentMarker(Character)
327    4   3    1 org.apache.commons.csv.CSVFormat.withDelimiter(char)
328    2   1    1 org.apache.commons.csv.CSVFormat.withEscape(char)
329    4   3    1 org.apache.commons.csv.CSVFormat.withEscape(Character)
330    2   1    1 org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader()
331    8   3    1 org.apache.commons.csv.CSVFormat.withHeader(Enum)
332    2   2    1 org.apache.commons.csv.CSVFormat.withHeader(ResultSet)
333    8   3    1 org.apache.commons.csv.CSVFormat.withHeader(ResultSetMetaData)
334    2   1    1 org.apache.commons.csv.CSVFormat.withHeader(String)
335    2   1    1 org.apache.commons.csv.CSVFormat.withHeaderComments(Object)
336    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines()
337    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)
338    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase()
339    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)
340    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces()
341    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)
342    2   1    1 org.apache.commons.csv.CSVFormat.withNullString(String)
343    2   1    1 org.apache.commons.csv.CSVFormat.withQuote(char)
344    4   3    1 org.apache.commons.csv.CSVFormat.withQuote(Character)
345    2   1    1 org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)
346    2   1    1 org.apache.commons.csv.CSVFormat.withRecordSeparator(char)
347    2   1    1 org.apache.commons.csv.CSVFormat.withRecordSeparator(String)
348    2   1    1 org.apache.commons.csv.CSVFormat.withSkipHeaderRecord()
349    2   1    1 org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)
350    2   1    1 org.apache.commons.csv.CSVFormat.withTrailingDelimiter()
351    2   1    1 org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)
352    2   1    1 org.apache.commons.csv.CSVFormat.withTrim()
353    2   1    1 org.apache.commons.csv.CSVFormat.withTrim(boolean)
354    2   1    1 org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(Reader)
355    7   4    0 org.apache.commons.csv.ExtendedBufferedReader.read()
356    2   1    1 org.apache.commons.csv.ExtendedBufferedReader.getLastChar()
357   19  10    0 org.apache.commons.csv.ExtendedBufferedReader.read(int[],int,int)
358    8   2    1 org.apache.commons.csv.ExtendedBufferedReader.readLine()
359    5   1    1 org.apache.commons.csv.ExtendedBufferedReader.lookAhead()
360    4   6    1 org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber()
361    2   1    1 org.apache.commons.csv.ExtendedBufferedReader.getPosition()
362    2   1    0 org.apache.commons.csv.ExtendedBufferedReader.isClosed()
363    4   1    1 org.apache.commons.csv.ExtendedBufferedReader.close()
364    8   1    0 org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)
365   44  23    1 org.apache.commons.csv.Lexer.nextToken(Token)
366   28   8    1 org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)
367   39  17    1 org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)
368    2   2    0 org.apache.commons.csv.Lexer.mapNullToDisabled(Character)
369    2   1    1 org.apache.commons.csv.Lexer.getCurrentLineNumber()
370    2   1    1 org.apache.commons.csv.Lexer.getCharacterPosition()
371   25  21    1 org.apache.commons.csv.Lexer.readEscape()
372    6   4    0 org.apache.commons.csv.Lexer.trimTrailingSpaces(StringBuilder)
373    4   4    1 org.apache.commons.csv.Lexer.readEndOfLine(int)
374    2   1    0 org.apache.commons.csv.Lexer.isClosed()
375    2   2    1 org.apache.commons.csv.Lexer.isWhitespace(int)
376    2   3    1 org.apache.commons.csv.Lexer.isStartOfLine(int)
377    2   1    1 org.apache.commons.csv.Lexer.isEndOfFile(int)
378    2   1    0 org.apache.commons.csv.Lexer.isDelimiter(int)
379    2   1    0 org.apache.commons.csv.Lexer.isEscape(int)
380    2   1    0 org.apache.commons.csv.Lexer.isQuoteChar(int)
381    2   1    0 org.apache.commons.csv.Lexer.isCommentStart(int)
382    2   4    0 org.apache.commons.csv.Lexer.isMetaChar(int)
383    2   1    1 org.apache.commons.csv.Lexer.close()
384    4   1    0 org.apache.commons.csv.Token.reset()
385    2   1    1 org.apache.commons.csv.Token.toString()
386    6   2    0 org.apache.commons.csv.CSVRecord.CSVRecord(String[],Integer,String,long,long)
387    2   1    1 org.apache.commons.csv.CSVRecord.get(Enum)
388    2   1    1 org.apache.commons.csv.CSVRecord.get(int)
389    9   8    1 org.apache.commons.csv.CSVRecord.get(String)
390    2   1    1 org.apache.commons.csv.CSVRecord.getCharacterPosition()
391    2   1    1 org.apache.commons.csv.CSVRecord.getComment()
392    2   1    1 org.apache.commons.csv.CSVRecord.getRecordNumber()
393    2   2    1 org.apache.commons.csv.CSVRecord.isConsistent()
394    2   1    1 org.apache.commons.csv.CSVRecord.hasComment()
395    2   2    1 org.apache.commons.csv.CSVRecord.isMapped(String)
396    2   2    1 org.apache.commons.csv.CSVRecord.isSet(String)
397    2   1    1 org.apache.commons.csv.CSVRecord.iterator()
398    8   5    0 org.apache.commons.csv.CSVRecord.putIn(M)
399    2   1    1 org.apache.commons.csv.CSVRecord.size()
400    2   1    1 org.apache.commons.csv.CSVRecord.toList()
401    2   1    1 org.apache.commons.csv.CSVRecord.toMap()
402    2   1    1 org.apache.commons.csv.CSVRecord.toString()
403    2   1    0 org.apache.commons.csv.CSVRecord.values()
Average Function NCSS:       6.09
Average Function CCN:        2.13
Average Function JVDC:       0.33
Program NCSS:            2,851.00
