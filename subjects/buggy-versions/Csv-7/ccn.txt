Nr.   Classes Functions      NCSS  Javadocs Package
  1        23       339      2744       113 org.apache.commons.csv
  2         1         8        72         1 org.apache.commons.csv.perf
    --------- --------- --------- ---------
           24       347      2816       114 Total

 Packages   Classes Functions      NCSS  Javadocs | per
-------------------------------------------------------------
     2.00     24.00    347.00   2816.00    114.00 | Project
              12.00    173.50   1408.00     57.00 | Package
                        14.46    117.33      4.75 | Class
                                   8.12      0.33 | Function

Nr. NCSS Functions Classes Javadocs Class
  1   57         5       1        1 org.apache.commons.csv.CSVFileParserTest
  2  140         6       0        1 org.apache.commons.csv.ExtendedBufferedReaderTest
  3    5         2       1        1 org.apache.commons.csv.FercGovTest
  4  183        11       1        1 org.apache.commons.csv.PerformanceTest
  5   86        18       1        0 org.apache.commons.csv.CSVRecordTest
  6  196        28       0        1 org.apache.commons.csv.LexerTest
  7    6         2       0        2 org.apache.commons.csv.Utils
  8    5         2       0        1 org.apache.commons.csv.AssertionsTest
  9  157        40       0        1 org.apache.commons.csv.CSVFormatTest
 10   55         8       0        1 org.apache.commons.csv.perf.PerformanceTest
 11  444        57       0        2 org.apache.commons.csv.CSVParserTest
 12   24         5       0        0 org.apache.commons.csv.TokenMatchersTest
 13  314        41       0        1 org.apache.commons.csv.CSVPrinterTest
 14   28         4       3        1 org.apache.commons.csv.TokenMatchers
 15    5         2       0        1 org.apache.commons.csv.Assertions
 16  130        15       1       14 org.apache.commons.csv.CSVParser
 17  179        15       0       12 org.apache.commons.csv.CSVPrinter
 18  215        40       0       38 org.apache.commons.csv.CSVFormat
 19   55         9       0        7 org.apache.commons.csv.ExtendedBufferedReader
 20    1         0       0        0 org.apache.commons.csv.Quote
 21  187        19       0       12 org.apache.commons.csv.Lexer
 22   12         2       1        2 org.apache.commons.csv.Token
 23   20         0       0        1 org.apache.commons.csv.Constants
 24   53        16       0       13 org.apache.commons.csv.CSVRecord
Average Object NCSS:                106.54
Average Object Functions:            14.46
Average Object Inner Classes:         0.38
Average Object Javadoc Comments:      4.75
Program NCSS:                     2,816.00

Nr. NCSS CCN JVDC Function
  1    3   1    0 org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest(File)
  2    5   3    0 org.apache.commons.csv.CSVFileParserTest.readTestData()
  3    2   2    0 org.apache.commons.csv.CSVFileParserTest.FilenameFilter$1.accept(File,String)
  4    9   2    0 org.apache.commons.csv.CSVFileParserTest.generateData()
  5   35   9    0 org.apache.commons.csv.CSVFileParserTest.testCSVFile()
  6    1   1    0 org.apache.commons.csv.CSVFileParserTest.testCSVUrl()
  7    8   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput()
  8   49   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1()
  9   16   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2()
 10   40   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine()
 11   24   4    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar()
 12    2   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader(String)
 13    1   1    0 org.apache.commons.csv.FercGovTest.testContractFile()
 14    1   1    0 org.apache.commons.csv.FercGovTest.testTransactionFile()
 15   50  15    0 org.apache.commons.csv.PerformanceTest.main(String[])
 16    2   1    0 org.apache.commons.csv.PerformanceTest.getReader()
 17    3   1    0 org.apache.commons.csv.PerformanceTest.Stats.Stats(int,int)
 18    4   1    0 org.apache.commons.csv.PerformanceTest.show(String,Stats,long)
 19    7   3    0 org.apache.commons.csv.PerformanceTest.show()
 20    8   3    0 org.apache.commons.csv.PerformanceTest.testReadBigFile(boolean)
 21    8   3    0 org.apache.commons.csv.PerformanceTest.readAll(BufferedReader,boolean)
 22   31  10    0 org.apache.commons.csv.PerformanceTest.testExtendedBuffer(boolean)
 23   10   2    0 org.apache.commons.csv.PerformanceTest.testParseCommonsCSV()
 24    3   1    0 org.apache.commons.csv.PerformanceTest.getLexerCtor(String)
 25   40  13    0 org.apache.commons.csv.PerformanceTest.testCSVLexer(boolean,String)
 26    7   2    0 org.apache.commons.csv.PerformanceTest.iterate(CSVRecord)
 27    8   1    0 org.apache.commons.csv.CSVRecordTest.setUp()
 28    4   1    0 org.apache.commons.csv.CSVRecordTest.testGetInt()
 29    4   1    0 org.apache.commons.csv.CSVRecordTest.testGetString()
 30    3   1    0 org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord()
 31    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader()
 32    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum()
 33    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedName()
 34    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedNegativeInt()
 35    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedPositiveInt()
 36    5   1    0 org.apache.commons.csv.CSVRecordTest.testIsConsistent()
 37    4   1    0 org.apache.commons.csv.CSVRecordTest.testIsMapped()
 38    4   1    0 org.apache.commons.csv.CSVRecordTest.testIsSet()
 39    5   2    0 org.apache.commons.csv.CSVRecordTest.testIterator()
 40    6   1    0 org.apache.commons.csv.CSVRecordTest.testPutInMap()
 41   10   1    0 org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns()
 42    3   1    0 org.apache.commons.csv.CSVRecordTest.testToMap()
 43    4   1    0 org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord()
 44   11   2    0 org.apache.commons.csv.CSVRecordTest.validateMap(String,boolean)
 45    2   1    0 org.apache.commons.csv.LexerTest.setUp()
 46    2   1    0 org.apache.commons.csv.LexerTest.getLexer(String,CSVFormat)
 47   10   1    0 org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted()
 48   10   1    0 org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted()
 49   14   1    0 org.apache.commons.csv.LexerTest.testIgnoreEmptyLines()
 50   18   1    0 org.apache.commons.csv.LexerTest.testComments()
 51   28   1    0 org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines()
 52   12   1    0 org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping()
 53   12   1    0 org.apache.commons.csv.LexerTest.testBackslashWithEscaping()
 54   15   1    0 org.apache.commons.csv.LexerTest.testNextToken4()
 55    8   1    0 org.apache.commons.csv.LexerTest.testNextToken5()
 56    6   1    0 org.apache.commons.csv.LexerTest.testNextToken6()
 57    9   1    0 org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace()
 58    3   1    0 org.apache.commons.csv.LexerTest.testEscapedCR()
 59    4   1    0 org.apache.commons.csv.LexerTest.testCR()
 60    3   1    0 org.apache.commons.csv.LexerTest.testEscapedLF()
 61    4   1    0 org.apache.commons.csv.LexerTest.testLF()
 62    3   1    0 org.apache.commons.csv.LexerTest.testEscapedTab()
 63    3   1    0 org.apache.commons.csv.LexerTest.testTab()
 64    3   1    0 org.apache.commons.csv.LexerTest.testEscapedBackspace()
 65    3   1    0 org.apache.commons.csv.LexerTest.testBackspace()
 66    3   1    0 org.apache.commons.csv.LexerTest.testEscapedFF()
 67    3   1    0 org.apache.commons.csv.LexerTest.testFF()
 68    3   1    0 org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue()
 69    3   1    0 org.apache.commons.csv.LexerTest.testEscapedCharacter()
 70    3   1    0 org.apache.commons.csv.LexerTest.testEscapedControlCharacter()
 71    3   1    0 org.apache.commons.csv.LexerTest.testEscapedControlCharacter2()
 72    4   1    0 org.apache.commons.csv.LexerTest.testEscapingAtEOF()
 73    1   1    0 org.apache.commons.csv.Utils.Utils()
 74    4   2    1 org.apache.commons.csv.Utils.compare(String,String[][],CSVRecord)
 75    2   1    0 org.apache.commons.csv.AssertionsTest.testNotNull()
 76    2   1    0 org.apache.commons.csv.AssertionsTest.testNotNullNull()
 77    3   1    0 org.apache.commons.csv.CSVFormatTest.assertNotEquals(Object,Object)
 78    2   1    0 org.apache.commons.csv.CSVFormatTest.copy(CSVFormat)
 79    2   1    0 org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException()
 80    2   1    0 org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException()
 81    2   1    0 org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements()
 82   10   1    0 org.apache.commons.csv.CSVFormatTest.testEquals()
 83    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart()
 84    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter()
 85    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsEscape()
 86    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsHeader()
 87    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines()
 88    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces()
 89    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar()
 90    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy()
 91    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator()
 92    2   1    0 org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException()
 93    2   1    0 org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType()
 94    5   1    0 org.apache.commons.csv.CSVFormatTest.testFormat()
 95    9   1    0 org.apache.commons.csv.CSVFormatTest.testGetHeader()
 96    5   1    0 org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106()
 97    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException()
 98    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType()
 99    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException()
100    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException()
101    8   1    0 org.apache.commons.csv.CSVFormatTest.testRFC4180()
102   16   1    0 org.apache.commons.csv.CSVFormatTest.testSerialization()
103    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithCommentStart()
104    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException()
105    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithDelimiter()
106    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException()
107    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithEscape()
108    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions()
109    9   1    0 org.apache.commons.csv.CSVFormatTest.testWithHeader()
110    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines()
111    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround()
112    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithNullString()
113    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuoteChar()
114    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException()
115    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy()
116    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithRecordSeparator()
117   11   3    0 org.apache.commons.csv.perf.PerformanceTest.setUpClass()
118    2   1    0 org.apache.commons.csv.perf.PerformanceTest.getBufferedReader()
119    8   4    0 org.apache.commons.csv.perf.PerformanceTest.parse(Reader,boolean)
120    2   1    0 org.apache.commons.csv.perf.PerformanceTest.println(String)
121    5   2    0 org.apache.commons.csv.perf.PerformanceTest.readAll(BufferedReader)
122    6   1    0 org.apache.commons.csv.perf.PerformanceTest.testParseBigFile(boolean)
123    5   2    0 org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat()
124   13   2    0 org.apache.commons.csv.perf.PerformanceTest.testReadBigFile()
125    9   1    0 org.apache.commons.csv.CSVParserTest.testBackslashEscaping()
126    9   1    0 org.apache.commons.csv.CSVParserTest.testBackslashEscaping2()
127   10   2    0 org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld()
128    8   2    0 org.apache.commons.csv.CSVParserTest.testBOM()
129    1   1    0 org.apache.commons.csv.CSVParserTest.testBOMInputStream()
130    6   1    0 org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings()
131    6   1    0 org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings()
132    8   1    0 org.apache.commons.csv.CSVParserTest.testClose()
133    6   1    0 org.apache.commons.csv.CSVParserTest.testCSV57()
134   16   1    0 org.apache.commons.csv.CSVParserTest.testDefaultFormat()
135    4   1    0 org.apache.commons.csv.CSVParserTest.testEmptyFile()
136   11   3    0 org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV()
137   11   3    0 org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel()
138   11   3    0 org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV()
139   11   3    0 org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel()
140   10   2    0 org.apache.commons.csv.CSVParserTest.testExcelFormat1()
141   10   2    0 org.apache.commons.csv.CSVParserTest.testExcelFormat2()
142    9   2    0 org.apache.commons.csv.CSVParserTest.testForEach()
143   16   2    0 org.apache.commons.csv.CSVParserTest.testGetHeaderMap()
144    2   1    0 org.apache.commons.csv.CSVParserTest.testDuplicateHeaderEntries()
145    6   2    0 org.apache.commons.csv.CSVParserTest.testGetLine()
146    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR()
147    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF()
148    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF()
149    5   1    0 org.apache.commons.csv.CSVParserTest.testGetOneLine()
150    5   1    0 org.apache.commons.csv.CSVParserTest.testGetOneLineCustomCollection()
151   15   1    1 org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser()
152    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR()
153    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF()
154    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF()
155    8   2    0 org.apache.commons.csv.CSVParserTest.testGetRecords()
156   21   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues()
157   10   2    0 org.apache.commons.csv.CSVParserTest.testHeader()
158   10   2    0 org.apache.commons.csv.CSVParserTest.testHeaderComment()
159    6   1    0 org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines()
160    3   1    0 org.apache.commons.csv.CSVParserTest.testInvalidFormat()
161   17   3    0 org.apache.commons.csv.CSVParserTest.testIterator()
162    6   1    0 org.apache.commons.csv.CSVParserTest.testLineFeedEndings()
163   26   1    0 org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport()
164   13   1    0 org.apache.commons.csv.CSVParserTest.testMultipleIterators()
165    2   1    0 org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat()
166    2   1    0 org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat()
167    4   1    0 org.apache.commons.csv.CSVParserTest.testNoHeaderMap()
168    2   1    0 org.apache.commons.csv.CSVParserTest.testParseFileNullFormat()
169    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullFileFormat()
170    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullStringFormat()
171    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat()
172    3   1    0 org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat()
173    2   1    0 org.apache.commons.csv.CSVParserTest.testParseStringNullFormat()
174    3   1    0 org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat()
175   14   2    0 org.apache.commons.csv.CSVParserTest.testProvidedHeader()
176   14   2    0 org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto()
177    8   2    0 org.apache.commons.csv.CSVParserTest.testRoundtrip()
178    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipAutoHeader()
179    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipSetHeader()
180   12   1    0 org.apache.commons.csv.CSVParserTest.validateLineNumbers(String)
181   16   1    0 org.apache.commons.csv.CSVParserTest.validateRecordNumbers(String)
182    5   1    0 org.apache.commons.csv.TokenMatchersTest.setUp()
183    5   1    0 org.apache.commons.csv.TokenMatchersTest.testHasType()
184    3   1    0 org.apache.commons.csv.TokenMatchersTest.testHasContent()
185    4   1    0 org.apache.commons.csv.TokenMatchersTest.testIsReady()
186    5   1    0 org.apache.commons.csv.TokenMatchersTest.testMatches()
187    9   4    0 org.apache.commons.csv.CSVPrinterTest.printable(String)
188   21   4    0 org.apache.commons.csv.CSVPrinterTest.doOneRandom(CSVFormat)
189    3   2    0 org.apache.commons.csv.CSVPrinterTest.doRandom(CSVFormat,int)
190   40  11    0 org.apache.commons.csv.CSVPrinterTest.randStr()
191    6   1    0 org.apache.commons.csv.CSVPrinterTest.testDisabledComment()
192    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays()
193    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists()
194    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays()
195    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists()
196    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1()
197    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2()
198   14   1    0 org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter()
199    6   1    0 org.apache.commons.csv.CSVPrinterTest.testMultiLineComment()
200    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter1()
201    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter2()
202    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter3()
203    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter4()
204    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter5()
205    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter6()
206    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter7()
207    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrintNullValues()
208    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues()
209   16   1    0 org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues()
210    6   1    0 org.apache.commons.csv.CSVPrinterTest.testQuoteAll()
211    6   1    0 org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric()
212    5   1    0 org.apache.commons.csv.CSVPrinterTest.testRandom()
213    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPlainQuoted()
214    6   1    0 org.apache.commons.csv.CSVPrinterTest.testSingleLineComment()
215    7   1    0 org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted()
216    7   1    0 org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted()
217    8   1    0 org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE()
218    7   1    0 org.apache.commons.csv.CSVPrinterTest.testEOLQuoted()
219    7   1    0 org.apache.commons.csv.CSVPrinterTest.testPlainEscaped()
220    7   1    0 org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped()
221    7   1    0 org.apache.commons.csv.CSVPrinterTest.testEOLEscaped()
222    7   1    0 org.apache.commons.csv.CSVPrinterTest.testPlainPlain()
223    7   1    0 org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain()
224    7   1    0 org.apache.commons.csv.CSVPrinterTest.testEOLPlain()
225    3   1    0 org.apache.commons.csv.CSVPrinterTest.testInvalidFormat()
226    2   1    0 org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat()
227    2   1    0 org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat()
228    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
229    4   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
230    9   1    0 org.apache.commons.csv.TokenMatchers.hasType(Token.Type)
231    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
232    4   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
233    9   1    0 org.apache.commons.csv.TokenMatchers.hasContent(String)
234    2   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
235    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
236    7   1    0 org.apache.commons.csv.TokenMatchers.isReady()
237    2   1    0 org.apache.commons.csv.TokenMatchers.matches(Token.Type,String)
238    1   1    0 org.apache.commons.csv.Assertions.Assertions()
239    3   3    0 org.apache.commons.csv.Assertions.notNull(Object,String)
240    4   1    1 org.apache.commons.csv.CSVParser.parse(File,CSVFormat)
241    4   1    1 org.apache.commons.csv.CSVParser.parse(String,CSVFormat)
242    5   1    1 org.apache.commons.csv.CSVParser.parse(URL,Charset,CSVFormat)
243    7   1    1 org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat)
244    7   3    0 org.apache.commons.csv.CSVParser.addRecordValue()
245    3   2    1 org.apache.commons.csv.CSVParser.close()
246    2   1    1 org.apache.commons.csv.CSVParser.getCurrentLineNumber()
247    2   2    1 org.apache.commons.csv.CSVParser.getHeaderMap()
248    2   1    1 org.apache.commons.csv.CSVParser.getRecordNumber()
249    2   1    1 org.apache.commons.csv.CSVParser.getRecords()
250    5   2    1 org.apache.commons.csv.CSVParser.getRecords(T)
251   18   7    1 org.apache.commons.csv.CSVParser.initializeHeader()
252    2   1    0 org.apache.commons.csv.CSVParser.isClosed()
253    4   4    0 org.apache.commons.csv.CSVParser.Iterator$1.getNextRecord()
254    6   4    0 org.apache.commons.csv.CSVParser.Iterator$1.hasNext()
255   10   6    0 org.apache.commons.csv.CSVParser.Iterator$1.next()
256    2   2    0 org.apache.commons.csv.CSVParser.Iterator$1.remove()
257   25   1    1 org.apache.commons.csv.CSVParser.iterator()
258   35  13    1 org.apache.commons.csv.CSVParser.nextRecord()
259    6   1    1 org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)
260    3   2    0 org.apache.commons.csv.CSVPrinter.close()
261    3   2    1 org.apache.commons.csv.CSVPrinter.flush()
262    8   3    1 org.apache.commons.csv.CSVPrinter.print(Object)
263   11   4    0 org.apache.commons.csv.CSVPrinter.print(Object,CharSequence,int,int)
264   22  10    0 org.apache.commons.csv.CSVPrinter.printAndEscape(CharSequence,int,int)
265   61  31    0 org.apache.commons.csv.CSVPrinter.printAndQuote(Object,CharSequence,int,int)
266   22   9    1 org.apache.commons.csv.CSVPrinter.printComment(String)
267    5   2    1 org.apache.commons.csv.CSVPrinter.println()
268    4   2    1 org.apache.commons.csv.CSVPrinter.printRecord(Iterable)
269    4   2    1 org.apache.commons.csv.CSVPrinter.printRecord(Object)
270    9   4    1 org.apache.commons.csv.CSVPrinter.printRecords(Iterable)
271    9   4    1 org.apache.commons.csv.CSVPrinter.printRecords(Object[])
272    6   3    1 org.apache.commons.csv.CSVPrinter.printRecords(ResultSet)
273    2   1    1 org.apache.commons.csv.CSVPrinter.getOut()
274    2   2    1 org.apache.commons.csv.CSVFormat.isLineBreak(char)
275    2   2    1 org.apache.commons.csv.CSVFormat.isLineBreak(Character)
276    2   1    1 org.apache.commons.csv.CSVFormat.newFormat(char)
277   14   4    1 org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,Quote,Character,Character,boolean,boolean,String,String,String[],boolean)
278   43  37    0 org.apache.commons.csv.CSVFormat.equals(Object)
279    6   4    1 org.apache.commons.csv.CSVFormat.format(Object)
280    2   1    1 org.apache.commons.csv.CSVFormat.getCommentStart()
281    2   1    1 org.apache.commons.csv.CSVFormat.getDelimiter()
282    2   1    1 org.apache.commons.csv.CSVFormat.getEscape()
283    2   2    1 org.apache.commons.csv.CSVFormat.getHeader()
284    2   1    1 org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines()
285    2   1    1 org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces()
286    2   1    1 org.apache.commons.csv.CSVFormat.getNullString()
287    2   1    1 org.apache.commons.csv.CSVFormat.getQuoteChar()
288    2   1    1 org.apache.commons.csv.CSVFormat.getQuotePolicy()
289    2   1    1 org.apache.commons.csv.CSVFormat.getRecordSeparator()
290    2   1    1 org.apache.commons.csv.CSVFormat.getSkipHeaderRecord()
291   13   8    0 org.apache.commons.csv.CSVFormat.hashCode()
292    2   1    1 org.apache.commons.csv.CSVFormat.isCommentingEnabled()
293    2   1    1 org.apache.commons.csv.CSVFormat.isEscaping()
294    2   1    1 org.apache.commons.csv.CSVFormat.isNullHandling()
295    2   1    1 org.apache.commons.csv.CSVFormat.isQuoting()
296    2   1    1 org.apache.commons.csv.CSVFormat.parse(Reader)
297   27   9    0 org.apache.commons.csv.CSVFormat.toString()
298   18  22    1 org.apache.commons.csv.CSVFormat.validate()
299    2   1    1 org.apache.commons.csv.CSVFormat.withCommentStart(char)
300    4   3    1 org.apache.commons.csv.CSVFormat.withCommentStart(Character)
301    4   3    1 org.apache.commons.csv.CSVFormat.withDelimiter(char)
302    2   1    1 org.apache.commons.csv.CSVFormat.withEscape(char)
303    4   3    1 org.apache.commons.csv.CSVFormat.withEscape(Character)
304    2   1    1 org.apache.commons.csv.CSVFormat.withHeader(String)
305    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)
306    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)
307    2   1    1 org.apache.commons.csv.CSVFormat.withNullString(String)
308    2   1    1 org.apache.commons.csv.CSVFormat.withQuoteChar(char)
309    4   3    1 org.apache.commons.csv.CSVFormat.withQuoteChar(Character)
310    2   1    1 org.apache.commons.csv.CSVFormat.withQuotePolicy(Quote)
311    2   1    1 org.apache.commons.csv.CSVFormat.withRecordSeparator(char)
312    2   1    1 org.apache.commons.csv.CSVFormat.withRecordSeparator(String)
313    2   1    1 org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)
314    2   1    1 org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(Reader)
315    6   4    0 org.apache.commons.csv.ExtendedBufferedReader.read()
316    2   1    1 org.apache.commons.csv.ExtendedBufferedReader.getLastChar()
317   18  10    0 org.apache.commons.csv.ExtendedBufferedReader.read(int[],int,int)
318    8   2    1 org.apache.commons.csv.ExtendedBufferedReader.readLine()
319    5   1    1 org.apache.commons.csv.ExtendedBufferedReader.lookAhead()
320    4   6    1 org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber()
321    2   1    0 org.apache.commons.csv.ExtendedBufferedReader.isClosed()
322    4   1    1 org.apache.commons.csv.ExtendedBufferedReader.close()
323    8   1    1 org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)
324   44  23    1 org.apache.commons.csv.Lexer.nextToken(Token)
325   28   8    1 org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)
326   39  17    1 org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)
327    2   2    0 org.apache.commons.csv.Lexer.mapNullToDisabled(Character)
328    2   1    1 org.apache.commons.csv.Lexer.getCurrentLineNumber()
329   25  21    1 org.apache.commons.csv.Lexer.readEscape()
330    6   4    0 org.apache.commons.csv.Lexer.trimTrailingSpaces(StringBuilder)
331    4   4    1 org.apache.commons.csv.Lexer.readEndOfLine(int)
332    2   1    0 org.apache.commons.csv.Lexer.isClosed()
333    2   2    1 org.apache.commons.csv.Lexer.isWhitespace(int)
334    2   3    1 org.apache.commons.csv.Lexer.isStartOfLine(int)
335    2   1    1 org.apache.commons.csv.Lexer.isEndOfFile(int)
336    2   1    0 org.apache.commons.csv.Lexer.isDelimiter(int)
337    2   1    0 org.apache.commons.csv.Lexer.isEscape(int)
338    2   1    0 org.apache.commons.csv.Lexer.isQuoteChar(int)
339    2   1    0 org.apache.commons.csv.Lexer.isCommentStart(int)
340    2   4    0 org.apache.commons.csv.Lexer.isMetaChar(int)
341    2   1    1 org.apache.commons.csv.Lexer.close()
342    4   1    0 org.apache.commons.csv.Token.reset()
343    2   1    1 org.apache.commons.csv.Token.toString()
344    5   2    0 org.apache.commons.csv.CSVRecord.CSVRecord(String[],Integer,String,long)
345    2   1    1 org.apache.commons.csv.CSVRecord.get(Enum)
346    2   1    1 org.apache.commons.csv.CSVRecord.get(int)
347    9   8    1 org.apache.commons.csv.CSVRecord.get(String)
348    2   1    1 org.apache.commons.csv.CSVRecord.getComment()
349    2   1    1 org.apache.commons.csv.CSVRecord.getRecordNumber()
350    2   2    1 org.apache.commons.csv.CSVRecord.isConsistent()
351    2   2    1 org.apache.commons.csv.CSVRecord.isMapped(String)
352    2   2    1 org.apache.commons.csv.CSVRecord.isSet(String)
353    2   1    1 org.apache.commons.csv.CSVRecord.iterator()
354    6   3    0 org.apache.commons.csv.CSVRecord.putIn(M)
355    2   1    1 org.apache.commons.csv.CSVRecord.size()
356    2   1    1 org.apache.commons.csv.CSVRecord.toList()
357    2   1    1 org.apache.commons.csv.CSVRecord.toMap()
358    2   1    0 org.apache.commons.csv.CSVRecord.toString()
359    2   1    0 org.apache.commons.csv.CSVRecord.values()
Average Function NCSS:       6.91
Average Function CCN:        2.14
Average Function JVDC:       0.26
Program NCSS:            2,816.00
