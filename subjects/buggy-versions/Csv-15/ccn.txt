Nr.   Classes Functions      NCSS  Javadocs Package
  1        23       395      3190       155 org.apache.commons.csv
  2         5        14       132         2 org.apache.commons.csv.issues
  3         1         8        67         1 org.apache.commons.csv.perf
    --------- --------- --------- ---------
           29       417      3389       158 Total

 Packages   Classes Functions      NCSS  Javadocs | per
-------------------------------------------------------------
     3.00     29.00    417.00   3389.00    158.00 | Project
               9.67    139.00   1129.67     52.67 | Package
                        14.38    116.86      5.45 | Class
                                   8.13      0.38 | Function

Nr. NCSS Functions Classes Javadocs Class
  1   56         5       1        1 org.apache.commons.csv.CSVFileParserTest
  2  117         6       0        1 org.apache.commons.csv.ExtendedBufferedReaderTest
  3  176        12       1        1 org.apache.commons.csv.PerformanceTest
  4   88        19       1        0 org.apache.commons.csv.CSVRecordTest
  5   90        10       1        1 org.apache.commons.csv.CSVBenchmark
  6  170        28       0        1 org.apache.commons.csv.LexerTest
  7    6         2       0        2 org.apache.commons.csv.Utils
  8   18         8       0        1 org.apache.commons.csv.CSVFormatPredefinedTest
  9    5         2       0        1 org.apache.commons.csv.AssertionsTest
 10  570        57       2        1 org.apache.commons.csv.CSVFormatTest
 11   50         8       0        1 org.apache.commons.csv.perf.PerformanceTest
 12   43         7       0        1 org.apache.commons.csv.issues.JiraCsv203Test
 13    5         2       0        0 org.apache.commons.csv.issues.JiraCsv167Test
 14    8         1       0        0 org.apache.commons.csv.issues.JiraCsv198Test
 15   13         2       0        1 org.apache.commons.csv.issues.JiraCsv213Test
 16   17         2       0        0 org.apache.commons.csv.issues.JiraCsv164Test
 17  508        76       0        3 org.apache.commons.csv.CSVParserTest
 18   24         5       0        0 org.apache.commons.csv.TokenMatchersTest
 19   28         4       3        1 org.apache.commons.csv.TokenMatchers
 20    5         2       0        1 org.apache.commons.csv.Assertions
 21  151        19       1       19 org.apache.commons.csv.CSVParser
 22   87        13       0       13 org.apache.commons.csv.CSVPrinter
 23  460        76       1       69 org.apache.commons.csv.CSVFormat
 24   60        10       0        8 org.apache.commons.csv.ExtendedBufferedReader
 25    1         0       0        0 org.apache.commons.csv.QuoteMode
 26  202        21       0       12 org.apache.commons.csv.Lexer
 27   12         2       1        2 org.apache.commons.csv.Token
 28   21         0       0        1 org.apache.commons.csv.Constants
 29   61        18       0       16 org.apache.commons.csv.CSVRecord
Average Object NCSS:                105.24
Average Object Functions:            14.38
Average Object Inner Classes:         0.41
Average Object Javadoc Comments:      5.45
Program NCSS:                     3,389.00

Nr. NCSS CCN JVDC Function
  1    3   1    0 org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest(File)
  2    5   3    0 org.apache.commons.csv.CSVFileParserTest.readTestData()
  3    2   2    0 org.apache.commons.csv.CSVFileParserTest.FilenameFilter$1.accept(File,String)
  4   10   3    0 org.apache.commons.csv.CSVFileParserTest.generateData()
  5   33   9    0 org.apache.commons.csv.CSVFileParserTest.testCSVFile()
  6    1   1    0 org.apache.commons.csv.CSVFileParserTest.testCSVUrl()
  7    6   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput()
  8   47   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1()
  9   14   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2()
 10   30   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine()
 11   17   4    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar()
 12    2   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.createBufferedReader(String)
 13   46  15    0 org.apache.commons.csv.PerformanceTest.main(String[])
 14    2   1    0 org.apache.commons.csv.PerformanceTest.createReader()
 15    3   1    0 org.apache.commons.csv.PerformanceTest.Stats.Stats(int,int)
 16    4   1    0 org.apache.commons.csv.PerformanceTest.show(String,Stats,long)
 17    7   3    0 org.apache.commons.csv.PerformanceTest.show()
 18    8   3    0 org.apache.commons.csv.PerformanceTest.testReadBigFile(boolean)
 19    8   3    0 org.apache.commons.csv.PerformanceTest.readAll(BufferedReader,boolean)
 20   30  10    0 org.apache.commons.csv.PerformanceTest.testExtendedBuffer(boolean)
 21    8   2    0 org.apache.commons.csv.PerformanceTest.testParseCommonsCSV()
 22    3   1    0 org.apache.commons.csv.PerformanceTest.getLexerCtor(String)
 23   38  13    0 org.apache.commons.csv.PerformanceTest.testCSVLexer(boolean,String)
 24    2   2    0 org.apache.commons.csv.PerformanceTest.createTestCSVLexer(String,ExtendedBufferedReader)
 25    7   2    0 org.apache.commons.csv.PerformanceTest.iterate(CSVRecord)
 26    8   1    0 org.apache.commons.csv.CSVRecordTest.setUp()
 27    4   1    0 org.apache.commons.csv.CSVRecordTest.testGetInt()
 28    4   1    0 org.apache.commons.csv.CSVRecordTest.testGetString()
 29    3   1    0 org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord()
 30    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader()
 31    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum()
 32    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedName()
 33    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedNegativeInt()
 34    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedPositiveInt()
 35    5   1    0 org.apache.commons.csv.CSVRecordTest.testIsConsistent()
 36    4   1    0 org.apache.commons.csv.CSVRecordTest.testIsMapped()
 37    4   1    0 org.apache.commons.csv.CSVRecordTest.testIsSet()
 38    5   2    0 org.apache.commons.csv.CSVRecordTest.testIterator()
 39    6   1    0 org.apache.commons.csv.CSVRecordTest.testPutInMap()
 40    8   1    0 org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns()
 41    3   1    0 org.apache.commons.csv.CSVRecordTest.testToMap()
 42    3   1    0 org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord()
 43    5   1    0 org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader()
 44   11   2    0 org.apache.commons.csv.CSVRecordTest.validateMap(String,boolean)
 45    5   1    1 org.apache.commons.csv.CSVBenchmark.init()
 46    2   1    0 org.apache.commons.csv.CSVBenchmark.getReader()
 47    9   2    0 org.apache.commons.csv.CSVBenchmark.read(Blackhole)
 48   10   2    0 org.apache.commons.csv.CSVBenchmark.split(Blackhole)
 49    9   2    0 org.apache.commons.csv.CSVBenchmark.parseCommonsCSV(Blackhole)
 50   11   2    0 org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV(Blackhole)
 51   10   2    0 org.apache.commons.csv.CSVBenchmark.parseJavaCSV(Blackhole)
 52    9   2    0 org.apache.commons.csv.CSVBenchmark.parseOpenCSV(Blackhole)
 53    9   1    0 org.apache.commons.csv.CSVBenchmark.parseSkifeCSV(Blackhole)
 54    2   1    0 org.apache.commons.csv.CSVBenchmark.CountingReaderCallback.onRow(String[])
 55   10   2    0 org.apache.commons.csv.CSVBenchmark.parseSuperCSV(Blackhole)
 56    2   1    0 org.apache.commons.csv.LexerTest.setUp()
 57    2   1    0 org.apache.commons.csv.LexerTest.createLexer(String,CSVFormat)
 58    9   1    0 org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted()
 59    9   1    0 org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted()
 60   13   1    0 org.apache.commons.csv.LexerTest.testIgnoreEmptyLines()
 61   17   1    0 org.apache.commons.csv.LexerTest.testComments()
 62   27   1    0 org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines()
 63   11   1    0 org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping()
 64   11   1    0 org.apache.commons.csv.LexerTest.testBackslashWithEscaping()
 65   14   1    0 org.apache.commons.csv.LexerTest.testNextToken4()
 66    7   1    0 org.apache.commons.csv.LexerTest.testNextToken5()
 67    5   1    0 org.apache.commons.csv.LexerTest.testNextToken6()
 68    8   1    0 org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace()
 69    2   1    0 org.apache.commons.csv.LexerTest.testEscapedCR()
 70    3   1    0 org.apache.commons.csv.LexerTest.testCR()
 71    2   1    0 org.apache.commons.csv.LexerTest.testEscapedLF()
 72    3   1    0 org.apache.commons.csv.LexerTest.testLF()
 73    2   1    0 org.apache.commons.csv.LexerTest.testEscapedTab()
 74    2   1    0 org.apache.commons.csv.LexerTest.testTab()
 75    2   1    0 org.apache.commons.csv.LexerTest.testEscapedBackspace()
 76    2   1    0 org.apache.commons.csv.LexerTest.testBackspace()
 77    2   1    0 org.apache.commons.csv.LexerTest.testEscapedFF()
 78    2   1    0 org.apache.commons.csv.LexerTest.testFF()
 79    2   1    0 org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue()
 80    2   1    0 org.apache.commons.csv.LexerTest.testEscapedCharacter()
 81    2   1    0 org.apache.commons.csv.LexerTest.testEscapedControlCharacter()
 82    2   1    0 org.apache.commons.csv.LexerTest.testEscapedControlCharacter2()
 83    3   1    0 org.apache.commons.csv.LexerTest.testEscapingAtEOF()
 84    1   1    0 org.apache.commons.csv.Utils.Utils()
 85    4   2    1 org.apache.commons.csv.Utils.compare(String,String[][],CSVRecord)
 86    3   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.test(CSVFormat,String)
 87    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testDefault()
 88    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testExcel()
 89    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testMySQL()
 90    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testPostgreSqlCsv()
 91    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testPostgreSqlText()
 92    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testRFC4180()
 93    2   1    0 org.apache.commons.csv.CSVFormatPredefinedTest.testTDF()
 94    2   1    0 org.apache.commons.csv.AssertionsTest.testNotNull()
 95    2   1    0 org.apache.commons.csv.AssertionsTest.testNotNullNull()
 96    3   1    0 org.apache.commons.csv.CSVFormatTest.assertNotEquals(Object,Object)
 97    2   1    0 org.apache.commons.csv.CSVFormatTest.copy(CSVFormat)
 98    2   1    0 org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException()
 99    2   1    0 org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException()
100    2   1    0 org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements()
101   10   1    0 org.apache.commons.csv.CSVFormatTest.testEquals()
102    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart()
103    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter()
104    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsEscape()
105    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsHeader()
106    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines()
107    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces()
108    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar()
109    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote()
110    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes()
111    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy()
112    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator()
113    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsNullString()
114    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord()
115    2   1    0 org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException()
116    2   1    0 org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType()
117    5   1    0 org.apache.commons.csv.CSVFormatTest.testFormat()
118    9   1    0 org.apache.commons.csv.CSVFormatTest.testGetHeader()
119    5   1    0 org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106()
120    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException()
121    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType()
122    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException()
123    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException()
124    8   1    0 org.apache.commons.csv.CSVFormatTest.testRFC4180()
125   14   1    0 org.apache.commons.csv.CSVFormatTest.testSerialization()
126    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithCommentStart()
127    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException()
128    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithDelimiter()
129    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException()
130    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithEscape()
131    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions()
132    5   1    0 org.apache.commons.csv.CSVFormatTest.testWithHeader()
133    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum()
134    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum()
135    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines()
136    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround()
137    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithNullString()
138    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuoteChar()
139    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException()
140    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy()
141    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR()
142    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF()
143    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF()
144    4   1    0 org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader()
145  103   1    0 org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter()
146   38   1    0 org.apache.commons.csv.CSVFormatTest.testNewFormat()
147  104   1    0 org.apache.commons.csv.CSVFormatTest.testWithHeaderComments()
148    6   2    0 org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException()
149   82   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsOne()
150   39   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsWithNull()
151    4   1    0 org.apache.commons.csv.CSVFormatTest.testToString()
152    9   1    0 org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase()
153    7   3    0 org.apache.commons.csv.perf.PerformanceTest.setUpClass()
154    2   1    0 org.apache.commons.csv.perf.PerformanceTest.createBufferedReader()
155    8   4    0 org.apache.commons.csv.perf.PerformanceTest.parse(Reader,boolean)
156    2   1    0 org.apache.commons.csv.perf.PerformanceTest.println(String)
157    5   2    0 org.apache.commons.csv.perf.PerformanceTest.readAll(BufferedReader)
158    6   1    0 org.apache.commons.csv.perf.PerformanceTest.testParseBigFile(boolean)
159    5   2    0 org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat()
160   12   2    0 org.apache.commons.csv.perf.PerformanceTest.testReadBigFile()
161    6   1    0 org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll()
162    6   1    0 org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull()
163    6   1    0 org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode()
164    6   1    0 org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal()
165    6   1    0 org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric()
166    6   1    0 org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString()
167    6   1    0 org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues()
168    1   1    0 org.apache.commons.csv.issues.JiraCsv167Test.parse()
169    3   1    0 org.apache.commons.csv.issues.JiraCsv167Test.getTestInput()
170    6   2    0 org.apache.commons.csv.issues.JiraCsv198Test.test()
171   10   5    0 org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel(File)
172    2   1    0 org.apache.commons.csv.issues.JiraCsv213Test.test()
173    8   1    0 org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withCommentMarker()
174    8   1    0 org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments()
175    3   1    0 org.apache.commons.csv.CSVParserTest.createBOMInputStream(String)
176    7   1    0 org.apache.commons.csv.CSVParserTest.testBackslashEscaping()
177    7   1    0 org.apache.commons.csv.CSVParserTest.testBackslashEscaping2()
178    8   2    0 org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld()
179    5   2    0 org.apache.commons.csv.CSVParserTest.testBOM()
180    1   1    0 org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader()
181    1   1    0 org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader()
182    1   1    0 org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream()
183    4   1    0 org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings()
184    4   1    0 org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings()
185    5   1    0 org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCrLf()
186    5   1    0 org.apache.commons.csv.CSVParserTest.testFirstEndOfLineLf()
187    5   1    0 org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCr()
188    7   1    0 org.apache.commons.csv.CSVParserTest.testClose()
189    4   1    0 org.apache.commons.csv.CSVParserTest.testCSV57()
190   12   1    0 org.apache.commons.csv.CSVParserTest.testDefaultFormat()
191    2   1    0 org.apache.commons.csv.CSVParserTest.testDuplicateHeaders()
192    2   1    0 org.apache.commons.csv.CSVParserTest.testEmptyFile()
193    9   3    0 org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV()
194    9   3    0 org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel()
195    9   3    0 org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV()
196    9   3    0 org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel()
197    8   2    0 org.apache.commons.csv.CSVParserTest.testExcelFormat1()
198    8   2    0 org.apache.commons.csv.CSVParserTest.testExcelFormat2()
199    6   2    1 org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData()
200    8   2    0 org.apache.commons.csv.CSVParserTest.testForEach()
201   14   2    0 org.apache.commons.csv.CSVParserTest.testGetHeaderMap()
202    4   2    0 org.apache.commons.csv.CSVParserTest.testGetLine()
203    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR()
204    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF()
205    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF()
206    3   1    0 org.apache.commons.csv.CSVParserTest.testGetOneLine()
207   10   1    1 org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser()
208    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR()
209    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF()
210    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF()
211    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF()
212    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF()
213    6   2    0 org.apache.commons.csv.CSVParserTest.testGetRecords()
214   19   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues()
215   10   2    0 org.apache.commons.csv.CSVParserTest.testHeader()
216   10   2    0 org.apache.commons.csv.CSVParserTest.testHeaderComment()
217    9   2    0 org.apache.commons.csv.CSVParserTest.testHeaderMissing()
218    3   1    0 org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull()
219    3   1    0 org.apache.commons.csv.CSVParserTest.testHeadersMissing()
220    3   1    0 org.apache.commons.csv.CSVParserTest.testHeadersMissingException()
221    7   1    0 org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping()
222    4   1    0 org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines()
223    3   1    0 org.apache.commons.csv.CSVParserTest.testInvalidFormat()
224   17   3    0 org.apache.commons.csv.CSVParserTest.testIterator()
225    4   1    0 org.apache.commons.csv.CSVParserTest.testLineFeedEndings()
226   26   1    0 org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport()
227   11   1    0 org.apache.commons.csv.CSVParserTest.testMultipleIterators()
228    2   1    0 org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat()
229    2   1    0 org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat()
230    2   1    0 org.apache.commons.csv.CSVParserTest.testNoHeaderMap()
231    2   1    0 org.apache.commons.csv.CSVParserTest.testParseFileNullFormat()
232    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullFileFormat()
233    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullStringFormat()
234    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat()
235    2   1    0 org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat()
236    2   1    0 org.apache.commons.csv.CSVParserTest.testParseStringNullFormat()
237    2   1    0 org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat()
238   14   2    0 org.apache.commons.csv.CSVParserTest.testProvidedHeader()
239   14   2    0 org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto()
240    6   2    0 org.apache.commons.csv.CSVParserTest.testRoundtrip()
241    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipAutoHeader()
242    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders()
243    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders()
244    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipSetHeader()
245    9   3    0 org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders()
246    8   1    0 org.apache.commons.csv.CSVParserTest.testTrailingDelimiter()
247    8   1    0 org.apache.commons.csv.CSVParserTest.testTrim()
248   10   1    0 org.apache.commons.csv.CSVParserTest.validateLineNumbers(String)
249   14   1    0 org.apache.commons.csv.CSVParserTest.validateRecordNumbers(String)
250   39   1    0 org.apache.commons.csv.CSVParserTest.validateRecordPosition(String)
251    5   1    0 org.apache.commons.csv.TokenMatchersTest.setUp()
252    5   1    0 org.apache.commons.csv.TokenMatchersTest.testHasType()
253    3   1    0 org.apache.commons.csv.TokenMatchersTest.testHasContent()
254    4   1    0 org.apache.commons.csv.TokenMatchersTest.testIsReady()
255    5   1    0 org.apache.commons.csv.TokenMatchersTest.testMatches()
256    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
257    4   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
258    9   1    0 org.apache.commons.csv.TokenMatchers.hasType(Token.Type)
259    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
260    4   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
261    9   1    0 org.apache.commons.csv.TokenMatchers.hasContent(String)
262    2   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
263    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
264    7   1    0 org.apache.commons.csv.TokenMatchers.isReady()
265    2   1    0 org.apache.commons.csv.TokenMatchers.matches(Token.Type,String)
266    1   1    0 org.apache.commons.csv.Assertions.Assertions()
267    3   3    0 org.apache.commons.csv.Assertions.notNull(Object,String)
268    4   1    1 org.apache.commons.csv.CSVParser.parse(File,Charset,CSVFormat)
269    4   1    1 org.apache.commons.csv.CSVParser.parse(InputStream,Charset,CSVFormat)
270    4   1    1 org.apache.commons.csv.CSVParser.parse(Path,Charset,CSVFormat)
271    2   1    1 org.apache.commons.csv.CSVParser.parse(Reader,CSVFormat)
272    4   1    1 org.apache.commons.csv.CSVParser.parse(String,CSVFormat)
273    5   1    1 org.apache.commons.csv.CSVParser.parse(URL,Charset,CSVFormat)
274    2   1    1 org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat)
275    8   1    1 org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat,long,long)
276    7   7    0 org.apache.commons.csv.CSVParser.addRecordValue(boolean)
277    3   2    1 org.apache.commons.csv.CSVParser.close()
278    2   1    1 org.apache.commons.csv.CSVParser.getCurrentLineNumber()
279    2   1    1 org.apache.commons.csv.CSVParser.getFirstEndOfLine()
280    2   2    1 org.apache.commons.csv.CSVParser.getHeaderMap()
281    2   1    1 org.apache.commons.csv.CSVParser.getRecordNumber()
282    6   2    1 org.apache.commons.csv.CSVParser.getRecords()
283   23  13    1 org.apache.commons.csv.CSVParser.initializeHeader()
284    2   1    1 org.apache.commons.csv.CSVParser.isClosed()
285    4   4    0 org.apache.commons.csv.CSVParser.Iterator$1.getNextRecord()
286    6   4    0 org.apache.commons.csv.CSVParser.Iterator$1.hasNext()
287   10   6    0 org.apache.commons.csv.CSVParser.Iterator$1.next()
288    2   2    0 org.apache.commons.csv.CSVParser.Iterator$1.remove()
289   25   1    1 org.apache.commons.csv.CSVParser.iterator()
290   36  13    1 org.apache.commons.csv.CSVParser.nextRecord()
291   11   6    1 org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)
292    2   1    0 org.apache.commons.csv.CSVPrinter.close()
293    6   5    1 org.apache.commons.csv.CSVPrinter.close(boolean)
294    3   2    1 org.apache.commons.csv.CSVPrinter.flush()
295    2   1    1 org.apache.commons.csv.CSVPrinter.getOut()
296    3   1    1 org.apache.commons.csv.CSVPrinter.print(Object)
297   22   9    1 org.apache.commons.csv.CSVPrinter.printComment(String)
298    3   1    1 org.apache.commons.csv.CSVPrinter.println()
299    4   2    1 org.apache.commons.csv.CSVPrinter.printRecord(Iterable)
300    3   1    1 org.apache.commons.csv.CSVPrinter.printRecord(Object)
301    9   4    1 org.apache.commons.csv.CSVPrinter.printRecords(Iterable)
302    9   4    1 org.apache.commons.csv.CSVPrinter.printRecords(Object)
303    6   3    1 org.apache.commons.csv.CSVPrinter.printRecords(ResultSet)
304    2   1    0 org.apache.commons.csv.CSVFormat.Predefined.Predefined(CSVFormat)
305    2   1    0 org.apache.commons.csv.CSVFormat.Predefined.getFormat()
306    2   2    1 org.apache.commons.csv.CSVFormat.isLineBreak(char)
307    2   2    1 org.apache.commons.csv.CSVFormat.isLineBreak(Character)
308    2   1    1 org.apache.commons.csv.CSVFormat.newFormat(char)
309    2   1    1 org.apache.commons.csv.CSVFormat.valueOf(String)
310   19   2    1 org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,QuoteMode,Character,Character,boolean,boolean,String,String,Object[],String[],boolean,boolean,boolean,boolean,boolean,boolean)
311   51  44    0 org.apache.commons.csv.CSVFormat.equals(Object)
312    6   4    1 org.apache.commons.csv.CSVFormat.format(Object)
313    2   1    1 org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames()
314    2   1    1 org.apache.commons.csv.CSVFormat.getCommentMarker()
315    2   1    1 org.apache.commons.csv.CSVFormat.getDelimiter()
316    2   1    1 org.apache.commons.csv.CSVFormat.getEscapeCharacter()
317    2   2    1 org.apache.commons.csv.CSVFormat.getHeader()
318    2   2    1 org.apache.commons.csv.CSVFormat.getHeaderComments()
319    2   1    1 org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines()
320    2   1    1 org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase()
321    2   1    1 org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces()
322    2   1    1 org.apache.commons.csv.CSVFormat.getNullString()
323    2   1    1 org.apache.commons.csv.CSVFormat.getQuoteCharacter()
324    2   1    1 org.apache.commons.csv.CSVFormat.getQuoteMode()
325    2   1    1 org.apache.commons.csv.CSVFormat.getRecordSeparator()
326    2   1    1 org.apache.commons.csv.CSVFormat.getSkipHeaderRecord()
327    2   1    1 org.apache.commons.csv.CSVFormat.getTrailingDelimiter()
328    2   1    1 org.apache.commons.csv.CSVFormat.getTrim()
329    2   1    1 org.apache.commons.csv.CSVFormat.getAutoFlush()
330   16  11    0 org.apache.commons.csv.CSVFormat.hashCode()
331    2   1    1 org.apache.commons.csv.CSVFormat.isCommentMarkerSet()
332    2   1    1 org.apache.commons.csv.CSVFormat.isEscapeCharacterSet()
333    2   1    1 org.apache.commons.csv.CSVFormat.isNullStringSet()
334    2   1    1 org.apache.commons.csv.CSVFormat.isQuoteCharacterSet()
335    2   1    1 org.apache.commons.csv.CSVFormat.parse(Reader)
336    2   1    1 org.apache.commons.csv.CSVFormat.print(Appendable)
337    2   1    1 org.apache.commons.csv.CSVFormat.printer()
338    2   1    1 org.apache.commons.csv.CSVFormat.print(File,Charset)
339    2   1    1 org.apache.commons.csv.CSVFormat.print(Path,Charset)
340   14   6    1 org.apache.commons.csv.CSVFormat.print(Object,Appendable,boolean)
341   13   5    0 org.apache.commons.csv.CSVFormat.print(Object,CharSequence,int,int,Appendable,boolean)
342   22  10    0 org.apache.commons.csv.CSVFormat.printAndEscape(CharSequence,int,int,Appendable)
343   62  32    0 org.apache.commons.csv.CSVFormat.printAndQuote(Object,CharSequence,int,int,Appendable,boolean)
344    5   3    1 org.apache.commons.csv.CSVFormat.println(Appendable)
345    4   2    1 org.apache.commons.csv.CSVFormat.printRecord(Appendable,Object)
346   32  11    0 org.apache.commons.csv.CSVFormat.toString()
347    8   5    0 org.apache.commons.csv.CSVFormat.toStringArray(Object[])
348   11   9    0 org.apache.commons.csv.CSVFormat.trim(CharSequence)
349   20  25    1 org.apache.commons.csv.CSVFormat.validate()
350    2   1    1 org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames()
351    2   1    1 org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean)
352    2   1    1 org.apache.commons.csv.CSVFormat.withCommentMarker(char)
353    4   3    1 org.apache.commons.csv.CSVFormat.withCommentMarker(Character)
354    4   3    1 org.apache.commons.csv.CSVFormat.withDelimiter(char)
355    2   1    1 org.apache.commons.csv.CSVFormat.withEscape(char)
356    4   3    1 org.apache.commons.csv.CSVFormat.withEscape(Character)
357    2   1    1 org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader()
358    8   3    1 org.apache.commons.csv.CSVFormat.withHeader(Enum)
359    2   2    1 org.apache.commons.csv.CSVFormat.withHeader(ResultSet)
360    8   3    1 org.apache.commons.csv.CSVFormat.withHeader(ResultSetMetaData)
361    2   1    1 org.apache.commons.csv.CSVFormat.withHeader(String)
362    2   1    1 org.apache.commons.csv.CSVFormat.withHeaderComments(Object)
363    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines()
364    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)
365    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase()
366    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean)
367    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces()
368    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)
369    2   1    1 org.apache.commons.csv.CSVFormat.withNullString(String)
370    2   1    1 org.apache.commons.csv.CSVFormat.withQuote(char)
371    4   3    1 org.apache.commons.csv.CSVFormat.withQuote(Character)
372    2   1    1 org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode)
373    2   1    1 org.apache.commons.csv.CSVFormat.withRecordSeparator(char)
374    2   1    1 org.apache.commons.csv.CSVFormat.withRecordSeparator(String)
375    2   1    1 org.apache.commons.csv.CSVFormat.withSkipHeaderRecord()
376    2   1    1 org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)
377    2   1    1 org.apache.commons.csv.CSVFormat.withTrailingDelimiter()
378    2   1    1 org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean)
379    2   1    1 org.apache.commons.csv.CSVFormat.withTrim()
380    2   1    1 org.apache.commons.csv.CSVFormat.withTrim(boolean)
381    2   1    1 org.apache.commons.csv.CSVFormat.withAutoFlush(boolean)
382    2   1    1 org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(Reader)
383    7   4    0 org.apache.commons.csv.ExtendedBufferedReader.read()
384    2   1    1 org.apache.commons.csv.ExtendedBufferedReader.getLastChar()
385   19  10    0 org.apache.commons.csv.ExtendedBufferedReader.read(int[],int,int)
386    8   2    1 org.apache.commons.csv.ExtendedBufferedReader.readLine()
387    5   1    1 org.apache.commons.csv.ExtendedBufferedReader.lookAhead()
388    4   6    1 org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber()
389    2   1    1 org.apache.commons.csv.ExtendedBufferedReader.getPosition()
390    2   1    0 org.apache.commons.csv.ExtendedBufferedReader.isClosed()
391    4   1    1 org.apache.commons.csv.ExtendedBufferedReader.close()
392    2   1    0 org.apache.commons.csv.Lexer.getFirstEol()
393    8   1    0 org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)
394   44  23    1 org.apache.commons.csv.Lexer.nextToken(Token)
395   28   8    1 org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)
396   39  17    1 org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)
397    2   2    0 org.apache.commons.csv.Lexer.mapNullToDisabled(Character)
398    2   1    1 org.apache.commons.csv.Lexer.getCurrentLineNumber()
399    2   1    1 org.apache.commons.csv.Lexer.getCharacterPosition()
400   25  21    1 org.apache.commons.csv.Lexer.readEscape()
401    6   4    0 org.apache.commons.csv.Lexer.trimTrailingSpaces(StringBuilder)
402   12   8    1 org.apache.commons.csv.Lexer.readEndOfLine(int)
403    2   1    0 org.apache.commons.csv.Lexer.isClosed()
404    2   2    1 org.apache.commons.csv.Lexer.isWhitespace(int)
405    2   3    1 org.apache.commons.csv.Lexer.isStartOfLine(int)
406    2   1    1 org.apache.commons.csv.Lexer.isEndOfFile(int)
407    2   1    0 org.apache.commons.csv.Lexer.isDelimiter(int)
408    2   1    0 org.apache.commons.csv.Lexer.isEscape(int)
409    2   1    0 org.apache.commons.csv.Lexer.isQuoteChar(int)
410    2   1    0 org.apache.commons.csv.Lexer.isCommentStart(int)
411    2   4    0 org.apache.commons.csv.Lexer.isMetaChar(int)
412    2   1    1 org.apache.commons.csv.Lexer.close()
413    4   1    0 org.apache.commons.csv.Token.reset()
414    2   1    1 org.apache.commons.csv.Token.toString()
415    6   2    0 org.apache.commons.csv.CSVRecord.CSVRecord(String[],Integer,String,long,long)
416    2   1    1 org.apache.commons.csv.CSVRecord.get(Enum)
417    2   1    1 org.apache.commons.csv.CSVRecord.get(int)
418    9   8    1 org.apache.commons.csv.CSVRecord.get(String)
419    2   1    1 org.apache.commons.csv.CSVRecord.getCharacterPosition()
420    2   1    1 org.apache.commons.csv.CSVRecord.getComment()
421    2   1    1 org.apache.commons.csv.CSVRecord.getRecordNumber()
422    2   2    1 org.apache.commons.csv.CSVRecord.isConsistent()
423    2   1    1 org.apache.commons.csv.CSVRecord.hasComment()
424    2   2    1 org.apache.commons.csv.CSVRecord.isMapped(String)
425    2   2    1 org.apache.commons.csv.CSVRecord.isSet(String)
426    2   1    1 org.apache.commons.csv.CSVRecord.iterator()
427    8   5    0 org.apache.commons.csv.CSVRecord.putIn(M)
428    2   1    1 org.apache.commons.csv.CSVRecord.size()
429    2   1    1 org.apache.commons.csv.CSVRecord.toList()
430    2   1    1 org.apache.commons.csv.CSVRecord.toMap()
431    2   1    1 org.apache.commons.csv.CSVRecord.toString()
432    2   1    0 org.apache.commons.csv.CSVRecord.values()
Average Function NCSS:       6.83
Average Function CCN:        2.09
Average Function JVDC:       0.31
Program NCSS:            3,389.00
