Nr.   Classes Functions      NCSS  Javadocs Package
  1        23       341      2768       113 org.apache.commons.csv
  2         1         8        72         1 org.apache.commons.csv.perf
    --------- --------- --------- ---------
           24       349      2840       114 Total

 Packages   Classes Functions      NCSS  Javadocs | per
-------------------------------------------------------------
     2.00     24.00    349.00   2840.00    114.00 | Project
              12.00    174.50   1420.00     57.00 | Package
                        14.54    118.33      4.75 | Class
                                   8.14      0.33 | Function

Nr. NCSS Functions Classes Javadocs Class
  1   57         5       1        1 org.apache.commons.csv.CSVFileParserTest
  2  140         6       0        1 org.apache.commons.csv.ExtendedBufferedReaderTest
  3    5         2       1        1 org.apache.commons.csv.FercGovTest
  4  183        11       1        1 org.apache.commons.csv.PerformanceTest
  5   86        18       1        0 org.apache.commons.csv.CSVRecordTest
  6  196        28       0        1 org.apache.commons.csv.LexerTest
  7    6         2       0        2 org.apache.commons.csv.Utils
  8    5         2       0        1 org.apache.commons.csv.AssertionsTest
  9  165        42       0        1 org.apache.commons.csv.CSVFormatTest
 10   55         8       0        1 org.apache.commons.csv.perf.PerformanceTest
 11  444        57       0        2 org.apache.commons.csv.CSVParserTest
 12   24         5       0        0 org.apache.commons.csv.TokenMatchersTest
 13  314        41       0        1 org.apache.commons.csv.CSVPrinterTest
 14   28         4       3        1 org.apache.commons.csv.TokenMatchers
 15    5         2       0        1 org.apache.commons.csv.Assertions
 16  132        15       1       14 org.apache.commons.csv.CSVParser
 17  179        15       0       12 org.apache.commons.csv.CSVPrinter
 18  228        40       0       38 org.apache.commons.csv.CSVFormat
 19   55         9       0        7 org.apache.commons.csv.ExtendedBufferedReader
 20    1         0       0        0 org.apache.commons.csv.Quote
 21  187        19       0       12 org.apache.commons.csv.Lexer
 22   12         2       1        2 org.apache.commons.csv.Token
 23   20         0       0        1 org.apache.commons.csv.Constants
 24   53        16       0       13 org.apache.commons.csv.CSVRecord
Average Object NCSS:                107.50
Average Object Functions:            14.54
Average Object Inner Classes:         0.38
Average Object Javadoc Comments:      4.75
Program NCSS:                     2,840.00

Nr. NCSS CCN JVDC Function
  1    3   1    0 org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest(File)
  2    5   3    0 org.apache.commons.csv.CSVFileParserTest.readTestData()
  3    2   2    0 org.apache.commons.csv.CSVFileParserTest.FilenameFilter$1.accept(File,String)
  4    9   2    0 org.apache.commons.csv.CSVFileParserTest.generateData()
  5   35   9    0 org.apache.commons.csv.CSVFileParserTest.testCSVFile()
  6    1   1    0 org.apache.commons.csv.CSVFileParserTest.testCSVUrl()
  7    8   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput()
  8   49   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1()
  9   16   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2()
 10   40   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine()
 11   24   4    0 org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar()
 12    2   1    0 org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader(String)
 13    1   1    0 org.apache.commons.csv.FercGovTest.testContractFile()
 14    1   1    0 org.apache.commons.csv.FercGovTest.testTransactionFile()
 15   50  15    0 org.apache.commons.csv.PerformanceTest.main(String[])
 16    2   1    0 org.apache.commons.csv.PerformanceTest.getReader()
 17    3   1    0 org.apache.commons.csv.PerformanceTest.Stats.Stats(int,int)
 18    4   1    0 org.apache.commons.csv.PerformanceTest.show(String,Stats,long)
 19    7   3    0 org.apache.commons.csv.PerformanceTest.show()
 20    8   3    0 org.apache.commons.csv.PerformanceTest.testReadBigFile(boolean)
 21    8   3    0 org.apache.commons.csv.PerformanceTest.readAll(BufferedReader,boolean)
 22   31  10    0 org.apache.commons.csv.PerformanceTest.testExtendedBuffer(boolean)
 23   10   2    0 org.apache.commons.csv.PerformanceTest.testParseCommonsCSV()
 24    3   1    0 org.apache.commons.csv.PerformanceTest.getLexerCtor(String)
 25   40  13    0 org.apache.commons.csv.PerformanceTest.testCSVLexer(boolean,String)
 26    7   2    0 org.apache.commons.csv.PerformanceTest.iterate(CSVRecord)
 27    8   1    0 org.apache.commons.csv.CSVRecordTest.setUp()
 28    4   1    0 org.apache.commons.csv.CSVRecordTest.testGetInt()
 29    4   1    0 org.apache.commons.csv.CSVRecordTest.testGetString()
 30    3   1    0 org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord()
 31    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader()
 32    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum()
 33    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedName()
 34    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedNegativeInt()
 35    2   1    0 org.apache.commons.csv.CSVRecordTest.testGetUnmappedPositiveInt()
 36    5   1    0 org.apache.commons.csv.CSVRecordTest.testIsConsistent()
 37    4   1    0 org.apache.commons.csv.CSVRecordTest.testIsMapped()
 38    4   1    0 org.apache.commons.csv.CSVRecordTest.testIsSet()
 39    5   2    0 org.apache.commons.csv.CSVRecordTest.testIterator()
 40    6   1    0 org.apache.commons.csv.CSVRecordTest.testPutInMap()
 41   10   1    0 org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns()
 42    3   1    0 org.apache.commons.csv.CSVRecordTest.testToMap()
 43    4   1    0 org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord()
 44   11   2    0 org.apache.commons.csv.CSVRecordTest.validateMap(String,boolean)
 45    2   1    0 org.apache.commons.csv.LexerTest.setUp()
 46    2   1    0 org.apache.commons.csv.LexerTest.getLexer(String,CSVFormat)
 47   10   1    0 org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted()
 48   10   1    0 org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted()
 49   14   1    0 org.apache.commons.csv.LexerTest.testIgnoreEmptyLines()
 50   18   1    0 org.apache.commons.csv.LexerTest.testComments()
 51   28   1    0 org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines()
 52   12   1    0 org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping()
 53   12   1    0 org.apache.commons.csv.LexerTest.testBackslashWithEscaping()
 54   15   1    0 org.apache.commons.csv.LexerTest.testNextToken4()
 55    8   1    0 org.apache.commons.csv.LexerTest.testNextToken5()
 56    6   1    0 org.apache.commons.csv.LexerTest.testNextToken6()
 57    9   1    0 org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace()
 58    3   1    0 org.apache.commons.csv.LexerTest.testEscapedCR()
 59    4   1    0 org.apache.commons.csv.LexerTest.testCR()
 60    3   1    0 org.apache.commons.csv.LexerTest.testEscapedLF()
 61    4   1    0 org.apache.commons.csv.LexerTest.testLF()
 62    3   1    0 org.apache.commons.csv.LexerTest.testEscapedTab()
 63    3   1    0 org.apache.commons.csv.LexerTest.testTab()
 64    3   1    0 org.apache.commons.csv.LexerTest.testEscapedBackspace()
 65    3   1    0 org.apache.commons.csv.LexerTest.testBackspace()
 66    3   1    0 org.apache.commons.csv.LexerTest.testEscapedFF()
 67    3   1    0 org.apache.commons.csv.LexerTest.testFF()
 68    3   1    0 org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue()
 69    3   1    0 org.apache.commons.csv.LexerTest.testEscapedCharacter()
 70    3   1    0 org.apache.commons.csv.LexerTest.testEscapedControlCharacter()
 71    3   1    0 org.apache.commons.csv.LexerTest.testEscapedControlCharacter2()
 72    4   1    0 org.apache.commons.csv.LexerTest.testEscapingAtEOF()
 73    1   1    0 org.apache.commons.csv.Utils.Utils()
 74    4   2    1 org.apache.commons.csv.Utils.compare(String,String[][],CSVRecord)
 75    2   1    0 org.apache.commons.csv.AssertionsTest.testNotNull()
 76    2   1    0 org.apache.commons.csv.AssertionsTest.testNotNullNull()
 77    3   1    0 org.apache.commons.csv.CSVFormatTest.assertNotEquals(Object,Object)
 78    2   1    0 org.apache.commons.csv.CSVFormatTest.copy(CSVFormat)
 79    2   1    0 org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException()
 80    2   1    0 org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException()
 81    2   1    0 org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements()
 82   10   1    0 org.apache.commons.csv.CSVFormatTest.testEquals()
 83    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart()
 84    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter()
 85    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsEscape()
 86    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsHeader()
 87    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines()
 88    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces()
 89    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar()
 90    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy()
 91    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator()
 92    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsNullString()
 93    4   1    0 org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord()
 94    2   1    0 org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException()
 95    2   1    0 org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType()
 96    5   1    0 org.apache.commons.csv.CSVFormatTest.testFormat()
 97    9   1    0 org.apache.commons.csv.CSVFormatTest.testGetHeader()
 98    5   1    0 org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106()
 99    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException()
100    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType()
101    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException()
102    2   1    0 org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException()
103    8   1    0 org.apache.commons.csv.CSVFormatTest.testRFC4180()
104   16   1    0 org.apache.commons.csv.CSVFormatTest.testSerialization()
105    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithCommentStart()
106    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException()
107    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithDelimiter()
108    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException()
109    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithEscape()
110    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions()
111    9   1    0 org.apache.commons.csv.CSVFormatTest.testWithHeader()
112    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines()
113    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround()
114    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithNullString()
115    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuoteChar()
116    2   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException()
117    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy()
118    3   1    0 org.apache.commons.csv.CSVFormatTest.testWithRecordSeparator()
119   11   3    0 org.apache.commons.csv.perf.PerformanceTest.setUpClass()
120    2   1    0 org.apache.commons.csv.perf.PerformanceTest.getBufferedReader()
121    8   4    0 org.apache.commons.csv.perf.PerformanceTest.parse(Reader,boolean)
122    2   1    0 org.apache.commons.csv.perf.PerformanceTest.println(String)
123    5   2    0 org.apache.commons.csv.perf.PerformanceTest.readAll(BufferedReader)
124    6   1    0 org.apache.commons.csv.perf.PerformanceTest.testParseBigFile(boolean)
125    5   2    0 org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat()
126   13   2    0 org.apache.commons.csv.perf.PerformanceTest.testReadBigFile()
127    9   1    0 org.apache.commons.csv.CSVParserTest.testBackslashEscaping()
128    9   1    0 org.apache.commons.csv.CSVParserTest.testBackslashEscaping2()
129   10   2    0 org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld()
130    8   2    0 org.apache.commons.csv.CSVParserTest.testBOM()
131    1   1    0 org.apache.commons.csv.CSVParserTest.testBOMInputStream()
132    6   1    0 org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings()
133    6   1    0 org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings()
134    8   1    0 org.apache.commons.csv.CSVParserTest.testClose()
135    6   1    0 org.apache.commons.csv.CSVParserTest.testCSV57()
136   16   1    0 org.apache.commons.csv.CSVParserTest.testDefaultFormat()
137    4   1    0 org.apache.commons.csv.CSVParserTest.testEmptyFile()
138   11   3    0 org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV()
139   11   3    0 org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel()
140   11   3    0 org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV()
141   11   3    0 org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel()
142   10   2    0 org.apache.commons.csv.CSVParserTest.testExcelFormat1()
143   10   2    0 org.apache.commons.csv.CSVParserTest.testExcelFormat2()
144    9   2    0 org.apache.commons.csv.CSVParserTest.testForEach()
145   16   2    0 org.apache.commons.csv.CSVParserTest.testGetHeaderMap()
146    2   1    0 org.apache.commons.csv.CSVParserTest.testDuplicateHeaderEntries()
147    6   2    0 org.apache.commons.csv.CSVParserTest.testGetLine()
148    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR()
149    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF()
150    2   1    0 org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF()
151    5   1    0 org.apache.commons.csv.CSVParserTest.testGetOneLine()
152    5   1    0 org.apache.commons.csv.CSVParserTest.testGetOneLineCustomCollection()
153   15   1    1 org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser()
154    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR()
155    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF()
156    2   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF()
157    8   2    0 org.apache.commons.csv.CSVParserTest.testGetRecords()
158   21   1    0 org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues()
159   10   2    0 org.apache.commons.csv.CSVParserTest.testHeader()
160   10   2    0 org.apache.commons.csv.CSVParserTest.testHeaderComment()
161    6   1    0 org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines()
162    3   1    0 org.apache.commons.csv.CSVParserTest.testInvalidFormat()
163   17   3    0 org.apache.commons.csv.CSVParserTest.testIterator()
164    6   1    0 org.apache.commons.csv.CSVParserTest.testLineFeedEndings()
165   26   1    0 org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport()
166   13   1    0 org.apache.commons.csv.CSVParserTest.testMultipleIterators()
167    2   1    0 org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat()
168    2   1    0 org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat()
169    4   1    0 org.apache.commons.csv.CSVParserTest.testNoHeaderMap()
170    2   1    0 org.apache.commons.csv.CSVParserTest.testParseFileNullFormat()
171    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullFileFormat()
172    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullStringFormat()
173    2   1    0 org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat()
174    3   1    0 org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat()
175    2   1    0 org.apache.commons.csv.CSVParserTest.testParseStringNullFormat()
176    3   1    0 org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat()
177   14   2    0 org.apache.commons.csv.CSVParserTest.testProvidedHeader()
178   14   2    0 org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto()
179    8   2    0 org.apache.commons.csv.CSVParserTest.testRoundtrip()
180    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipAutoHeader()
181    7   1    0 org.apache.commons.csv.CSVParserTest.testSkipSetHeader()
182   12   1    0 org.apache.commons.csv.CSVParserTest.validateLineNumbers(String)
183   16   1    0 org.apache.commons.csv.CSVParserTest.validateRecordNumbers(String)
184    5   1    0 org.apache.commons.csv.TokenMatchersTest.setUp()
185    5   1    0 org.apache.commons.csv.TokenMatchersTest.testHasType()
186    3   1    0 org.apache.commons.csv.TokenMatchersTest.testHasContent()
187    4   1    0 org.apache.commons.csv.TokenMatchersTest.testIsReady()
188    5   1    0 org.apache.commons.csv.TokenMatchersTest.testMatches()
189    9   4    0 org.apache.commons.csv.CSVPrinterTest.printable(String)
190   21   4    0 org.apache.commons.csv.CSVPrinterTest.doOneRandom(CSVFormat)
191    3   2    0 org.apache.commons.csv.CSVPrinterTest.doRandom(CSVFormat,int)
192   40  11    0 org.apache.commons.csv.CSVPrinterTest.randStr()
193    6   1    0 org.apache.commons.csv.CSVPrinterTest.testDisabledComment()
194    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays()
195    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists()
196    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays()
197    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists()
198    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1()
199    6   1    0 org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2()
200   14   1    0 org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter()
201    6   1    0 org.apache.commons.csv.CSVPrinterTest.testMultiLineComment()
202    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter1()
203    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter2()
204    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter3()
205    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter4()
206    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter5()
207    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter6()
208    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrinter7()
209    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrintNullValues()
210    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues()
211   16   1    0 org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues()
212    6   1    0 org.apache.commons.csv.CSVPrinterTest.testQuoteAll()
213    6   1    0 org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric()
214    5   1    0 org.apache.commons.csv.CSVPrinterTest.testRandom()
215    6   1    0 org.apache.commons.csv.CSVPrinterTest.testPlainQuoted()
216    6   1    0 org.apache.commons.csv.CSVPrinterTest.testSingleLineComment()
217    7   1    0 org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted()
218    7   1    0 org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted()
219    8   1    0 org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE()
220    7   1    0 org.apache.commons.csv.CSVPrinterTest.testEOLQuoted()
221    7   1    0 org.apache.commons.csv.CSVPrinterTest.testPlainEscaped()
222    7   1    0 org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped()
223    7   1    0 org.apache.commons.csv.CSVPrinterTest.testEOLEscaped()
224    7   1    0 org.apache.commons.csv.CSVPrinterTest.testPlainPlain()
225    7   1    0 org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain()
226    7   1    0 org.apache.commons.csv.CSVPrinterTest.testEOLPlain()
227    3   1    0 org.apache.commons.csv.CSVPrinterTest.testInvalidFormat()
228    2   1    0 org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat()
229    2   1    0 org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat()
230    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
231    4   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
232    9   1    0 org.apache.commons.csv.TokenMatchers.hasType(Token.Type)
233    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
234    4   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
235    9   1    0 org.apache.commons.csv.TokenMatchers.hasContent(String)
236    2   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.describeTo(Description)
237    3   1    0 org.apache.commons.csv.TokenMatchers.TypeSafeDiagnosingMatcher$1.matchesSafely(Token,Description)
238    7   1    0 org.apache.commons.csv.TokenMatchers.isReady()
239    2   1    0 org.apache.commons.csv.TokenMatchers.matches(Token.Type,String)
240    1   1    0 org.apache.commons.csv.Assertions.Assertions()
241    3   3    0 org.apache.commons.csv.Assertions.notNull(Object,String)
242    4   1    1 org.apache.commons.csv.CSVParser.parse(File,CSVFormat)
243    4   1    1 org.apache.commons.csv.CSVParser.parse(String,CSVFormat)
244    5   1    1 org.apache.commons.csv.CSVParser.parse(URL,Charset,CSVFormat)
245    7   1    1 org.apache.commons.csv.CSVParser.CSVParser(Reader,CSVFormat)
246    7   3    0 org.apache.commons.csv.CSVParser.addRecordValue()
247    3   2    1 org.apache.commons.csv.CSVParser.close()
248    2   1    1 org.apache.commons.csv.CSVParser.getCurrentLineNumber()
249    2   2    1 org.apache.commons.csv.CSVParser.getHeaderMap()
250    2   1    1 org.apache.commons.csv.CSVParser.getRecordNumber()
251    2   1    1 org.apache.commons.csv.CSVParser.getRecords()
252    5   2    1 org.apache.commons.csv.CSVParser.getRecords(T)
253   20   9    1 org.apache.commons.csv.CSVParser.initializeHeader()
254    2   1    0 org.apache.commons.csv.CSVParser.isClosed()
255    4   4    0 org.apache.commons.csv.CSVParser.Iterator$1.getNextRecord()
256    6   4    0 org.apache.commons.csv.CSVParser.Iterator$1.hasNext()
257   10   6    0 org.apache.commons.csv.CSVParser.Iterator$1.next()
258    2   2    0 org.apache.commons.csv.CSVParser.Iterator$1.remove()
259   25   1    1 org.apache.commons.csv.CSVParser.iterator()
260   35  13    1 org.apache.commons.csv.CSVParser.nextRecord()
261    6   1    1 org.apache.commons.csv.CSVPrinter.CSVPrinter(Appendable,CSVFormat)
262    3   2    0 org.apache.commons.csv.CSVPrinter.close()
263    3   2    1 org.apache.commons.csv.CSVPrinter.flush()
264    8   3    1 org.apache.commons.csv.CSVPrinter.print(Object)
265   11   4    0 org.apache.commons.csv.CSVPrinter.print(Object,CharSequence,int,int)
266   22  10    0 org.apache.commons.csv.CSVPrinter.printAndEscape(CharSequence,int,int)
267   61  31    0 org.apache.commons.csv.CSVPrinter.printAndQuote(Object,CharSequence,int,int)
268   22   9    1 org.apache.commons.csv.CSVPrinter.printComment(String)
269    5   2    1 org.apache.commons.csv.CSVPrinter.println()
270    4   2    1 org.apache.commons.csv.CSVPrinter.printRecord(Iterable)
271    4   2    1 org.apache.commons.csv.CSVPrinter.printRecord(Object)
272    9   4    1 org.apache.commons.csv.CSVPrinter.printRecords(Iterable)
273    9   4    1 org.apache.commons.csv.CSVPrinter.printRecords(Object[])
274    6   3    1 org.apache.commons.csv.CSVPrinter.printRecords(ResultSet)
275    2   1    1 org.apache.commons.csv.CSVPrinter.getOut()
276    2   2    1 org.apache.commons.csv.CSVFormat.isLineBreak(char)
277    2   2    1 org.apache.commons.csv.CSVFormat.isLineBreak(Character)
278    2   1    1 org.apache.commons.csv.CSVFormat.newFormat(char)
279   17   4    1 org.apache.commons.csv.CSVFormat.CSVFormat(char,Character,Quote,Character,Character,boolean,boolean,String,String,String[],boolean)
280   51  44    0 org.apache.commons.csv.CSVFormat.equals(Object)
281    6   4    1 org.apache.commons.csv.CSVFormat.format(Object)
282    2   1    1 org.apache.commons.csv.CSVFormat.getCommentStart()
283    2   1    1 org.apache.commons.csv.CSVFormat.getDelimiter()
284    2   1    1 org.apache.commons.csv.CSVFormat.getEscape()
285    2   2    1 org.apache.commons.csv.CSVFormat.getHeader()
286    2   1    1 org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines()
287    2   1    1 org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces()
288    2   1    1 org.apache.commons.csv.CSVFormat.getNullString()
289    2   1    1 org.apache.commons.csv.CSVFormat.getQuoteChar()
290    2   1    1 org.apache.commons.csv.CSVFormat.getQuotePolicy()
291    2   1    1 org.apache.commons.csv.CSVFormat.getRecordSeparator()
292    2   1    1 org.apache.commons.csv.CSVFormat.getSkipHeaderRecord()
293   15  10    0 org.apache.commons.csv.CSVFormat.hashCode()
294    2   1    1 org.apache.commons.csv.CSVFormat.isCommentingEnabled()
295    2   1    1 org.apache.commons.csv.CSVFormat.isEscaping()
296    2   1    1 org.apache.commons.csv.CSVFormat.isNullHandling()
297    2   1    1 org.apache.commons.csv.CSVFormat.isQuoting()
298    2   1    1 org.apache.commons.csv.CSVFormat.parse(Reader)
299   27   9    0 org.apache.commons.csv.CSVFormat.toString()
300   18  22    1 org.apache.commons.csv.CSVFormat.validate()
301    2   1    1 org.apache.commons.csv.CSVFormat.withCommentStart(char)
302    4   3    1 org.apache.commons.csv.CSVFormat.withCommentStart(Character)
303    4   3    1 org.apache.commons.csv.CSVFormat.withDelimiter(char)
304    2   1    1 org.apache.commons.csv.CSVFormat.withEscape(char)
305    4   3    1 org.apache.commons.csv.CSVFormat.withEscape(Character)
306    2   1    1 org.apache.commons.csv.CSVFormat.withHeader(String)
307    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean)
308    2   1    1 org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean)
309    2   1    1 org.apache.commons.csv.CSVFormat.withNullString(String)
310    2   1    1 org.apache.commons.csv.CSVFormat.withQuoteChar(char)
311    4   3    1 org.apache.commons.csv.CSVFormat.withQuoteChar(Character)
312    2   1    1 org.apache.commons.csv.CSVFormat.withQuotePolicy(Quote)
313    2   1    1 org.apache.commons.csv.CSVFormat.withRecordSeparator(char)
314    2   1    1 org.apache.commons.csv.CSVFormat.withRecordSeparator(String)
315    2   1    1 org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean)
316    2   1    1 org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(Reader)
317    6   4    0 org.apache.commons.csv.ExtendedBufferedReader.read()
318    2   1    1 org.apache.commons.csv.ExtendedBufferedReader.getLastChar()
319   18  10    0 org.apache.commons.csv.ExtendedBufferedReader.read(int[],int,int)
320    8   2    1 org.apache.commons.csv.ExtendedBufferedReader.readLine()
321    5   1    1 org.apache.commons.csv.ExtendedBufferedReader.lookAhead()
322    4   6    1 org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber()
323    2   1    0 org.apache.commons.csv.ExtendedBufferedReader.isClosed()
324    4   1    1 org.apache.commons.csv.ExtendedBufferedReader.close()
325    8   1    1 org.apache.commons.csv.Lexer.Lexer(CSVFormat,ExtendedBufferedReader)
326   44  23    1 org.apache.commons.csv.Lexer.nextToken(Token)
327   28   8    1 org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)
328   39  17    1 org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token)
329    2   2    0 org.apache.commons.csv.Lexer.mapNullToDisabled(Character)
330    2   1    1 org.apache.commons.csv.Lexer.getCurrentLineNumber()
331   25  21    1 org.apache.commons.csv.Lexer.readEscape()
332    6   4    0 org.apache.commons.csv.Lexer.trimTrailingSpaces(StringBuilder)
333    4   4    1 org.apache.commons.csv.Lexer.readEndOfLine(int)
334    2   1    0 org.apache.commons.csv.Lexer.isClosed()
335    2   2    1 org.apache.commons.csv.Lexer.isWhitespace(int)
336    2   3    1 org.apache.commons.csv.Lexer.isStartOfLine(int)
337    2   1    1 org.apache.commons.csv.Lexer.isEndOfFile(int)
338    2   1    0 org.apache.commons.csv.Lexer.isDelimiter(int)
339    2   1    0 org.apache.commons.csv.Lexer.isEscape(int)
340    2   1    0 org.apache.commons.csv.Lexer.isQuoteChar(int)
341    2   1    0 org.apache.commons.csv.Lexer.isCommentStart(int)
342    2   4    0 org.apache.commons.csv.Lexer.isMetaChar(int)
343    2   1    1 org.apache.commons.csv.Lexer.close()
344    4   1    0 org.apache.commons.csv.Token.reset()
345    2   1    1 org.apache.commons.csv.Token.toString()
346    5   2    0 org.apache.commons.csv.CSVRecord.CSVRecord(String[],Integer,String,long)
347    2   1    1 org.apache.commons.csv.CSVRecord.get(Enum)
348    2   1    1 org.apache.commons.csv.CSVRecord.get(int)
349    9   8    1 org.apache.commons.csv.CSVRecord.get(String)
350    2   1    1 org.apache.commons.csv.CSVRecord.getComment()
351    2   1    1 org.apache.commons.csv.CSVRecord.getRecordNumber()
352    2   2    1 org.apache.commons.csv.CSVRecord.isConsistent()
353    2   2    1 org.apache.commons.csv.CSVRecord.isMapped(String)
354    2   2    1 org.apache.commons.csv.CSVRecord.isSet(String)
355    2   1    1 org.apache.commons.csv.CSVRecord.iterator()
356    6   3    0 org.apache.commons.csv.CSVRecord.putIn(M)
357    2   1    1 org.apache.commons.csv.CSVRecord.size()
358    2   1    1 org.apache.commons.csv.CSVRecord.toList()
359    2   1    1 org.apache.commons.csv.CSVRecord.toMap()
360    2   1    0 org.apache.commons.csv.CSVRecord.toString()
361    2   1    0 org.apache.commons.csv.CSVRecord.values()
Average Function NCSS:       6.94
Average Function CCN:        2.16
Average Function JVDC:       0.26
Program NCSS:            2,840.00
