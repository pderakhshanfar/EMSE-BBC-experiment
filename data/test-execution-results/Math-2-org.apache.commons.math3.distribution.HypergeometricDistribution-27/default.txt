JUnit version 4.12
..........E..E..E.........E..E..E..E.....E..E..
Time: 1.077
There were 9 failures:
1) test35(org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest)
org.apache.commons.math3.exception.NotPositiveException: number of samples (-31)
	at org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(HypergeometricDistribution.java:95)
	at org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(HypergeometricDistribution.java:63)
	at org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test35(HypergeometricDistribution_ESTest.java:348)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
2) test34(org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest)
org.apache.commons.math3.exception.NumberIsTooLargeException: number of successes (1,433) must be less than or equal to population size (285)
	at org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(HypergeometricDistribution.java:100)
	at org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(HypergeometricDistribution.java:63)
	at org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test34(HypergeometricDistribution_ESTest.java:333)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
3) test33(org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest)
org.apache.commons.math3.exception.NumberIsTooLargeException: sample size (1,618) must be less than or equal to population size (1,433)
	at org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(HypergeometricDistribution.java:104)
	at org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(HypergeometricDistribution.java:63)
	at org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test33(HypergeometricDistribution_ESTest.java:318)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
4) test06(org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest)
org.apache.commons.math3.exception.NotStrictlyPositiveException: population size (0)
	at org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(HypergeometricDistribution.java:87)
	at org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(HypergeometricDistribution.java:63)
	at org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test06(HypergeometricDistribution_ESTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
5) test05(org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest)
org.apache.commons.math3.exception.NotStrictlyPositiveException: population size (-2,694)
	at org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(HypergeometricDistribution.java:87)
	at org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(HypergeometricDistribution.java:63)
	at org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test05(HypergeometricDistribution_ESTest.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
6) test04(org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest)
org.apache.commons.math3.exception.NotPositiveException: number of successes (-2,084)
	at org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(HypergeometricDistribution.java:91)
	at org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(HypergeometricDistribution.java:63)
	at org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test04(HypergeometricDistribution_ESTest.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
7) test03(org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest)
org.apache.commons.math3.exception.NumberIsTooLargeException: sample size (277) must be less than or equal to population size (249)
	at org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(HypergeometricDistribution.java:104)
	at org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test03(HypergeometricDistribution_ESTest.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
8) test23(org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest)
org.apache.commons.math3.exception.NumberIsTooLargeException: number of successes (941) must be less than or equal to population size (791)
	at org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(HypergeometricDistribution.java:100)
	at org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test23(HypergeometricDistribution_ESTest.java:226)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
9) test22(org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest)
org.apache.commons.math3.exception.NotStrictlyPositiveException: population size (-1,814,227,968)
	at org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(HypergeometricDistribution.java:87)
	at org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test22(HypergeometricDistribution_ESTest.java:210)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)

FAILURES!!!
Tests run: 38,  Failures: 9

