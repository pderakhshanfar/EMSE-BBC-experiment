JUnit version 4.12
.E.E..E.E.E..E.E...E.E..E...E........E...E.E..E...E...E.E....E..E..E.E..............E....E...E...E...E.E
Time: 5.379
There were 28 failures:
1) test53(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: java.lang.NumberFormatException: For input string: "path"
	at com.google.gson.internal.bind.TypeAdapters$10.read(TypeAdapters.java:227)
	at com.google.gson.internal.bind.TypeAdapters$10.read(TypeAdapters.java:217)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	at com.google.gson.Gson.fromJson(Gson.java:829)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test53(TypeAdapters_ESTest.java:708)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "path"
	at sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2043)
	at sun.misc.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.lang.Double.parseDouble(Double.java:538)
	at com.google.gson.stream.JsonReader.nextInt(JsonReader.java:1206)
	at com.google.gson.internal.bind.TypeAdapters$10.read(TypeAdapters.java:225)
	... 16 more
2) test10(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: Expected a com.google.gson.JsonObject but was com.google.gson.JsonPrimitive
	at com.google.gson.internal.bind.TypeAdapters$35$1.read(TypeAdapters.java:916)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	at com.google.gson.Gson.fromJson(Gson.java:929)
	at com.google.gson.Gson.fromJson(Gson.java:902)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test10(TypeAdapters_ESTest.java:178)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
3) test11(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: Expected a com.google.gson.JsonObject but was com.google.gson.JsonPrimitive
	at com.google.gson.internal.bind.TypeAdapters$35$1.read(TypeAdapters.java:916)
	at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.read(TypeAdapterRuntimeTypeWrapper.java:40)
	at com.google.gson.TypeAdapter.fromJsonTree(TypeAdapter.java:285)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test11(TypeAdapters_ESTest.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
4) test55(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: java.lang.NumberFormatException: For input string: "J3K^Jvu>"
	at com.google.gson.internal.bind.TypeAdapters$9.read(TypeAdapters.java:205)
	at com.google.gson.internal.bind.TypeAdapters$9.read(TypeAdapters.java:194)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	at com.google.gson.Gson.fromJson(Gson.java:829)
	at com.google.gson.Gson.fromJson(Gson.java:778)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test55(TypeAdapters_ESTest.java:732)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "J3K^Jvu>"
	at sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2043)
	at sun.misc.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.lang.Double.parseDouble(Double.java:538)
	at com.google.gson.stream.JsonReader.nextInt(JsonReader.java:1206)
	at com.google.gson.internal.bind.TypeAdapters$9.read(TypeAdapters.java:202)
	... 17 more
5) test12(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: Expected a com.google.gson.JsonObject but was com.google.gson.JsonArray
	at com.google.gson.internal.bind.TypeAdapters$35$1.read(TypeAdapters.java:916)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	at com.google.gson.Gson.fromJson(Gson.java:929)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test12(TypeAdapters_ESTest.java:217)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
6) test13(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: Expected a com.google.gson.JsonObject but was com.google.gson.JsonPrimitive
	at com.google.gson.internal.bind.TypeAdapters$35$1.read(TypeAdapters.java:916)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	at com.google.gson.Gson.fromJson(Gson.java:929)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test13(TypeAdapters_ESTest.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
7) test57(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: org.evosuite.runtime.mock.java.lang.MockThrowable: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 4 path $
	at com.google.gson.Gson.assertFullConsumption(Gson.java:840)
	at com.google.gson.Gson.fromJson(Gson.java:830)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test57(TypeAdapters_ESTest.java:757)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 4 path $
	at com.google.gson.stream.JsonReader.syntaxError(JsonReader.java:1574)
	at com.google.gson.stream.JsonReader.checkLenient(JsonReader.java:1424)
	at com.google.gson.stream.JsonReader.doPeek(JsonReader.java:546)
	at com.google.gson.stream.JsonReader.peek(JsonReader.java:429)
	at com.google.gson.Gson.assertFullConsumption(Gson.java:836)
	... 14 more
8) test15(com.google.gson.internal.bind.TypeAdapters_ESTest)
java.lang.UnsupportedOperationException: Attempted to serialize java.lang.Class: com.google.gson.JsonDeserializer. Forgot to register a type adapter?
	at com.google.gson.internal.bind.TypeAdapters$5.write(TypeAdapters.java:75)
	at com.google.gson.internal.bind.TypeAdapters$5.write(TypeAdapters.java:69)
	at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:68)
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:112)
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:239)
	at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:68)
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:112)
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:239)
	at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.write(TypeAdapterRuntimeTypeWrapper.java:68)
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.write(ReflectiveTypeAdapterFactory.java:112)
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.write(ReflectiveTypeAdapterFactory.java:239)
	at com.google.gson.Gson.toJson(Gson.java:646)
	at com.google.gson.Gson.toJsonTree(Gson.java:539)
	at com.google.gson.Gson.toJsonTree(Gson.java:518)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test15(TypeAdapters_ESTest.java:262)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
9) test59(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: org.evosuite.runtime.mock.java.lang.MockThrowable: Expected BOOLEAN but was BEGIN_OBJECT
	at com.google.gson.Gson.fromJson(Gson.java:876)
	at com.google.gson.Gson.fromJson(Gson.java:929)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test59(TypeAdapters_ESTest.java:783)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.evosuite.runtime.mock.java.lang.MockIllegalStateException: Expected BOOLEAN but was BEGIN_OBJECT
	at com.google.gson.internal.bind.JsonTreeReader.expect(JsonTreeReader.java:139)
	at com.google.gson.internal.bind.JsonTreeReader.nextBoolean(JsonTreeReader.java:160)
	at com.google.gson.internal.bind.TypeAdapters$7.read(TypeAdapters.java:161)
	at com.google.gson.internal.bind.TypeAdapters$7.read(TypeAdapters.java:151)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	... 14 more
10) test17(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: Expected a com.google.gson.JsonNull but was com.google.gson.JsonObject
	at com.google.gson.internal.bind.TypeAdapters$35$1.read(TypeAdapters.java:916)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	at com.google.gson.Gson.fromJson(Gson.java:929)
	at com.google.gson.Gson.fromJson(Gson.java:902)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test17(TypeAdapters_ESTest.java:286)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
11) test50(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: java.lang.NumberFormatException: For input string: "C"
	at com.google.gson.internal.bind.TypeAdapters$3.read(TypeAdapters.java:295)
	at com.google.gson.internal.bind.TypeAdapters$3.read(TypeAdapters.java:286)
	at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	at com.google.gson.Gson.fromJson(Gson.java:929)
	at com.google.gson.Gson.fromJson(Gson.java:902)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test50(TypeAdapters_ESTest.java:667)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "C"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.parseInt(Integer.java:615)
	at com.google.gson.JsonPrimitive.getAsInt(JsonPrimitive.java:260)
	at com.google.gson.internal.bind.JsonTreeReader.nextInt(JsonTreeReader.java:197)
	at com.google.gson.internal.bind.TypeAdapters$3.read(TypeAdapters.java:292)
	... 18 more
12) test45(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: org.evosuite.runtime.mock.java.lang.MockThrowable: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 4 path $
	at com.google.gson.Gson.assertFullConsumption(Gson.java:840)
	at com.google.gson.Gson.fromJson(Gson.java:830)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test45(TypeAdapters_ESTest.java:597)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 4 path $
	at com.google.gson.stream.JsonReader.syntaxError(JsonReader.java:1574)
	at com.google.gson.stream.JsonReader.checkLenient(JsonReader.java:1424)
	at com.google.gson.stream.JsonReader.doPeek(JsonReader.java:546)
	at com.google.gson.stream.JsonReader.peek(JsonReader.java:429)
	at com.google.gson.Gson.assertFullConsumption(Gson.java:836)
	... 14 more
13) test03(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: java.lang.NumberFormatException: For input string: "- )B"
	at com.google.gson.internal.bind.TypeAdapters$11.read(TypeAdapters.java:249)
	at com.google.gson.internal.bind.TypeAdapters$11.read(TypeAdapters.java:239)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	at com.google.gson.Gson.fromJson(Gson.java:929)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test03(TypeAdapters_ESTest.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "- )B"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.parseInt(Integer.java:615)
	at com.google.gson.JsonPrimitive.getAsInt(JsonPrimitive.java:260)
	at com.google.gson.internal.bind.JsonTreeReader.nextInt(JsonTreeReader.java:197)
	at com.google.gson.internal.bind.TypeAdapters$11.read(TypeAdapters.java:247)
	... 16 more
14) test47(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: Expecting character, got: Expected
	at com.google.gson.internal.bind.TypeAdapters$16.read(TypeAdapters.java:397)
	at com.google.gson.internal.bind.TypeAdapters$16.read(TypeAdapters.java:388)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	at com.google.gson.Gson.fromJson(Gson.java:829)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test47(TypeAdapters_ESTest.java:622)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
15) test48(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: java.lang.NumberFormatException: For input string: "A3K^Jvu>"
	at com.google.gson.internal.bind.TypeAdapters$12.read(TypeAdapters.java:327)
	at com.google.gson.internal.bind.TypeAdapters$12.read(TypeAdapters.java:317)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	at com.google.gson.Gson.fromJson(Gson.java:829)
	at com.google.gson.Gson.fromJson(Gson.java:778)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test48(TypeAdapters_ESTest.java:638)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "A3K^Jvu>"
	at sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2043)
	at sun.misc.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.lang.Double.parseDouble(Double.java:538)
	at com.google.gson.stream.JsonReader.nextLong(JsonReader.java:974)
	at com.google.gson.internal.bind.TypeAdapters$12.read(TypeAdapters.java:325)
	... 17 more
16) test06(com.google.gson.internal.bind.TypeAdapters_ESTest)
org.evosuite.runtime.mock.java.lang.MockIllegalStateException: Not a JSON Object: [java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659,java.lang.Long@0000001659]
	at com.google.gson.JsonElement.getAsJsonObject(JsonElement.java:90)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test06(TypeAdapters_ESTest.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
17) test09(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: Expected a com.google.gson.JsonObject but was com.google.gson.JsonNull
	at com.google.gson.internal.bind.TypeAdapters$35$1.read(TypeAdapters.java:916)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	at com.google.gson.Gson.fromJson(Gson.java:929)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test09(TypeAdapters_ESTest.java:160)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
18) test40(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: org.evosuite.runtime.mock.java.lang.MockThrowable: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 6 path $
	at com.google.gson.Gson.assertFullConsumption(Gson.java:840)
	at com.google.gson.Gson.fromJson(Gson.java:830)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test40(TypeAdapters_ESTest.java:546)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 6 path $
	at com.google.gson.stream.JsonReader.syntaxError(JsonReader.java:1574)
	at com.google.gson.stream.JsonReader.checkLenient(JsonReader.java:1424)
	at com.google.gson.stream.JsonReader.doPeek(JsonReader.java:546)
	at com.google.gson.stream.JsonReader.peek(JsonReader.java:429)
	at com.google.gson.Gson.assertFullConsumption(Gson.java:836)
	... 14 more
19) test32(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonIOException: java.net.URISyntaxException: Illegal character in path at index 0: `uZ
	at com.google.gson.internal.bind.TypeAdapters$23.read(TypeAdapters.java:533)
	at com.google.gson.internal.bind.TypeAdapters$23.read(TypeAdapters.java:522)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	at com.google.gson.Gson.fromJson(Gson.java:829)
	at com.google.gson.Gson.fromJson(Gson.java:778)
	at com.google.gson.Gson.fromJson(Gson.java:750)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test32(TypeAdapters_ESTest.java:444)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.URISyntaxException: Illegal character in path at index 0: `uZ
	at java.net.URI$Parser.fail(URI.java:2848)
	at java.net.URI$Parser.checkChars(URI.java:3021)
	at java.net.URI$Parser.parseHierarchical(URI.java:3105)
	at java.net.URI$Parser.parse(URI.java:3063)
	at java.net.URI.<init>(URI.java:588)
	at org.evosuite.runtime.mock.java.net.MockURI.URI(MockURI.java:59)
	at com.google.gson.internal.bind.TypeAdapters$23.read(TypeAdapters.java:531)
	... 18 more
20) test34(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: java.net.MalformedURLException: no protocol: a3Pd
	at com.google.gson.Gson.fromJson(Gson.java:879)
	at com.google.gson.Gson.fromJson(Gson.java:829)
	at com.google.gson.Gson.fromJson(Gson.java:778)
	at com.google.gson.Gson.fromJson(Gson.java:750)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test34(TypeAdapters_ESTest.java:468)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.MalformedURLException: no protocol: a3Pd
	at java.net.URL.<init>(URL.java:611)
	at org.evosuite.runtime.mock.java.net.MockURL.URL(MockURL.java:130)
	at org.evosuite.runtime.mock.java.net.MockURL.URL(MockURL.java:92)
	at org.evosuite.runtime.mock.java.net.MockURL.URL(MockURL.java:88)
	at com.google.gson.internal.bind.TypeAdapters$22.read(TypeAdapters.java:512)
	at com.google.gson.internal.bind.TypeAdapters$22.read(TypeAdapters.java:504)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	... 16 more
21) test36(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: org.evosuite.runtime.mock.java.lang.MockThrowable: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 7 path $
	at com.google.gson.Gson.assertFullConsumption(Gson.java:840)
	at com.google.gson.Gson.fromJson(Gson.java:830)
	at com.google.gson.Gson.fromJson(Gson.java:778)
	at com.google.gson.Gson.fromJson(Gson.java:750)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test36(TypeAdapters_ESTest.java:492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 7 path $
	at com.google.gson.stream.JsonReader.syntaxError(JsonReader.java:1574)
	at com.google.gson.stream.JsonReader.checkLenient(JsonReader.java:1424)
	at com.google.gson.stream.JsonReader.nextNonWhitespace(JsonReader.java:1405)
	at com.google.gson.stream.JsonReader.doPeek(JsonReader.java:542)
	at com.google.gson.stream.JsonReader.peek(JsonReader.java:429)
	at com.google.gson.Gson.assertFullConsumption(Gson.java:836)
	... 16 more
22) test37(com.google.gson.internal.bind.TypeAdapters_ESTest)
java.lang.NullPointerException
	at java.util.Locale.<init>(Locale.java:648)
	at java.util.Locale.<init>(Locale.java:701)
	at com.google.gson.internal.bind.TypeAdapters$28.read(TypeAdapters.java:703)
	at com.google.gson.internal.bind.TypeAdapters$28.read(TypeAdapters.java:681)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	at com.google.gson.Gson.fromJson(Gson.java:929)
	at com.google.gson.Gson.fromJson(Gson.java:902)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test37(TypeAdapters_ESTest.java:511)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
23) test66(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: java.lang.NumberFormatException: For input string: "tRyixHtb%xB!T"
	at com.google.gson.internal.bind.TypeAdapters$1.read(TypeAdapters.java:265)
	at com.google.gson.internal.bind.TypeAdapters$1.read(TypeAdapters.java:260)
	at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	at com.google.gson.Gson.fromJson(Gson.java:829)
	at com.google.gson.Gson.fromJson(Gson.java:778)
	at com.google.gson.Gson.fromJson(Gson.java:750)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test66(TypeAdapters_ESTest.java:871)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NumberFormatException: For input string: "tRyixHtb%xB!T"
	at sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2043)
	at sun.misc.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.lang.Double.parseDouble(Double.java:538)
	at com.google.gson.stream.JsonReader.nextInt(JsonReader.java:1206)
	at com.google.gson.internal.bind.TypeAdapters$1.read(TypeAdapters.java:263)
	... 19 more
24) test68(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: org.evosuite.runtime.mock.java.lang.MockThrowable: Expected a boolean but was STRING at line 1 column 1 path $
	at com.google.gson.Gson.fromJson(Gson.java:876)
	at com.google.gson.Gson.fromJson(Gson.java:829)
	at com.google.gson.Gson.fromJson(Gson.java:778)
	at com.google.gson.Gson.fromJson(Gson.java:750)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test68(TypeAdapters_ESTest.java:895)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.evosuite.runtime.mock.java.lang.MockIllegalStateException: Expected a boolean but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.nextBoolean(JsonReader.java:859)
	at com.google.gson.internal.bind.TypeAdapters$2.read(TypeAdapters.java:277)
	at com.google.gson.internal.bind.TypeAdapters$2.read(TypeAdapters.java:275)
	at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	... 16 more
25) test26(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: org.evosuite.runtime.mock.java.lang.MockThrowable: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 5 path $
	at com.google.gson.Gson.assertFullConsumption(Gson.java:840)
	at com.google.gson.Gson.fromJson(Gson.java:830)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test26(TypeAdapters_ESTest.java:379)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 5 path $
	at com.google.gson.stream.JsonReader.syntaxError(JsonReader.java:1574)
	at com.google.gson.stream.JsonReader.checkLenient(JsonReader.java:1424)
	at com.google.gson.stream.JsonReader.doPeek(JsonReader.java:546)
	at com.google.gson.stream.JsonReader.peek(JsonReader.java:429)
	at com.google.gson.Gson.assertFullConsumption(Gson.java:836)
	... 14 more
26) test29(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: org.evosuite.runtime.mock.java.lang.MockThrowable: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 14 path $
	at com.google.gson.Gson.assertFullConsumption(Gson.java:840)
	at com.google.gson.Gson.fromJson(Gson.java:830)
	at com.google.gson.Gson.fromJson(Gson.java:778)
	at com.google.gson.Gson.fromJson(Gson.java:750)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test29(TypeAdapters_ESTest.java:411)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 14 path $
	at com.google.gson.stream.JsonReader.syntaxError(JsonReader.java:1574)
	at com.google.gson.stream.JsonReader.checkLenient(JsonReader.java:1424)
	at com.google.gson.stream.JsonReader.doPeek(JsonReader.java:546)
	at com.google.gson.stream.JsonReader.peek(JsonReader.java:429)
	at com.google.gson.Gson.assertFullConsumption(Gson.java:836)
	... 16 more
27) test62(com.google.gson.internal.bind.TypeAdapters_ESTest)
com.google.gson.JsonSyntaxException: org.evosuite.runtime.mock.java.lang.MockThrowable: Expected BEGIN_ARRAY but was STRING at line 1 column 1 path $
	at com.google.gson.Gson.fromJson(Gson.java:876)
	at com.google.gson.Gson.fromJson(Gson.java:829)
	at com.google.gson.Gson.fromJson(Gson.java:778)
	at com.google.gson.Gson.fromJson(Gson.java:750)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test62(TypeAdapters_ESTest.java:821)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.evosuite.runtime.mock.java.lang.MockIllegalStateException: Expected BEGIN_ARRAY but was STRING at line 1 column 1 path $
	at com.google.gson.stream.JsonReader.beginArray(JsonReader.java:350)
	at com.google.gson.internal.bind.TypeAdapters$6.read(TypeAdapters.java:100)
	at com.google.gson.internal.bind.TypeAdapters$6.read(TypeAdapters.java:92)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	... 16 more
28) test63(com.google.gson.internal.bind.TypeAdapters_ESTest)
java.lang.IllegalArgumentException
	at java.util.Currency.getInstance(Currency.java:328)
	at java.util.Currency.getInstance(Currency.java:310)
	at com.google.gson.internal.bind.TypeAdapters$4.read(TypeAdapters.java:583)
	at com.google.gson.internal.bind.TypeAdapters$4.read(TypeAdapters.java:580)
	at com.google.gson.TypeAdapter$1.read(TypeAdapter.java:199)
	at com.google.gson.Gson.fromJson(Gson.java:864)
	at com.google.gson.Gson.fromJson(Gson.java:829)
	at com.google.gson.Gson.fromJson(Gson.java:778)
	at com.google.gson.Gson.fromJson(Gson.java:750)
	at com.google.gson.internal.bind.TypeAdapters_ESTest.test63(TypeAdapters_ESTest.java:838)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)

FAILURES!!!
Tests run: 76,  Failures: 28

